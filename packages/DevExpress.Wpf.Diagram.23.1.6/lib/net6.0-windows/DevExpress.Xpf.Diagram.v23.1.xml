<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>DevExpress.Xpf.Diagram.v23.1</name>
  </assembly>
  <members>
    <member name="N:DevExpress.Xpf.Diagram">
      <summary>
        <para>Contains classes that enable you to create diagrams. To use these classes in XAML code, add the xmlns:dxdiag=”“ namespace reference.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramActiveToolChangedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ActiveToolChanged"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramActiveToolChangedEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,DevExpress.Diagram.Core.DiagramTool,DevExpress.Diagram.Core.DiagramTool)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramActiveToolChangedEventArgs"/> class with specified settings.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="oldTool">The previous value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ActiveTool">ActiveTool</see> property.</param>
      <param name="newTool">The new value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ActiveTool">ActiveTool</see> property.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramActiveToolChangedEventArgs.NewTool">
      <summary>
        <para>Returns the new value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ActiveTool">ActiveTool</see> property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.DiagramTool object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramActiveToolChangedEventArgs.OldTool">
      <summary>
        <para>Returns the previous value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ActiveTool">ActiveTool</see> property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.DiagramTool object.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramBeforeItemsMovingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.BeforeItemsMoving"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramBeforeItemsMovingEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,System.Collections.Generic.IList{DevExpress.Xpf.Diagram.DiagramItem},DevExpress.Diagram.Core.ItemsActionSource,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramBeforeItemsMovingEventArgs"/> class with specified settings.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="items">A collection of items the user is attempting to move.</param>
      <param name="actionSource">A DevExpress.Diagram.Core.ItemsActionSource enumeration value that indicates whether the moving operation is performed using drag-and-drop, the <see href="https://docs.devexpress.com/WPF/116506/controls-and-libraries/diagram-control/diagram-designer-control/properties-panel">Properties Panel</see> or by pressing key shortcuts.</param>
      <param name="isCopying">true, if the user attempts to copy diagram items by holding the Ctrl key; otherwise, false.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramBeforeItemsMovingEventArgs.ActionSource">
      <summary>
        <para>Indicates whether the moving operation is performed using drag-and-drop, the <see href="https://docs.devexpress.com/WPF/116506/controls-and-libraries/diagram-control/diagram-designer-control/properties-panel">Properties Panel</see> or by pressing key shortcuts.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.ItemsActionSource enumeration value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramBeforeItemsMovingEventArgs.IsCopying">
      <summary>
        <para>Indicates whether the user attempts to copy diagram items by holding Ctrl.</para>
      </summary>
      <value>true, if the user attempts to copy diagram items; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramBeforeItemsMovingEventArgs.Items">
      <summary>
        <para>Returns the items the user is attempting to move.</para>
      </summary>
      <value>A collection of DevExpress.Xpf.Diagram.DiagramItem objects.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramBeforeItemsResizingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.BeforeItemsResizing"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramBeforeItemsResizingEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,System.Collections.Generic.IList{DevExpress.Xpf.Diagram.DiagramItem},DevExpress.Diagram.Core.ItemsActionSource,DevExpress.Diagram.Core.ResizeMode)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramBeforeItemsResizingEventArgs"/> class with specified settings.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="items">A collection of items the user is attempting to resize.</param>
      <param name="actionSource">A <see cref="T:DevExpress.Diagram.Core.ItemsActionSource"/> enumeration value that indicates whether the resizing operation is performed using the selection handles or the Properties Panel.</param>
      <param name="mode">A DevExpress.Diagram.Core.ResizeMode enumeration value that indicates the direction of resizing.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramBeforeItemsResizingEventArgs.ActionSource">
      <summary>
        <para>Indicates whether the resizing operation is performed using the selection handles or the <see href="https://docs.devexpress.com/WPF/116506/controls-and-libraries/diagram-control/diagram-designer-control/properties-panel">Properties Panel</see>.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.ItemsActionSource enumeration value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramBeforeItemsResizingEventArgs.Items">
      <summary>
        <para>Returns the collection of items that are being resized.</para>
      </summary>
      <value>A collection of DevExpress.Xpf.Diagram.DiagramItem objects.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramBeforeItemsResizingEventArgs.Mode">
      <summary>
        <para>Indicates the direction of resizing.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.ResizeMode enumeration value.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramBeforeItemsRotatingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.BeforeItemsRotating"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramBeforeItemsRotatingEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,System.Collections.Generic.IList{DevExpress.Xpf.Diagram.DiagramItem},DevExpress.Diagram.Core.ItemsActionSource,System.Nullable{System.Windows.Point})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramBeforeItemsRotatingEventArgs"/> class with specified settings.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="items">A collection of diagram items that are being rotated.</param>
      <param name="actionSource">A DevExpress.Diagram.Core.ItemsActionSource enumeration value that indicates whether the rotating operation is performed using the rotation handle or the <see href="https://docs.devexpress.com/WPF/116506/controls-and-libraries/diagram-control/diagram-designer-control/properties-panel">Properties Panel</see>.</param>
      <param name="centerOfRotation">A System.Windows.Point value that is the coordinates of the center of rotation.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramBeforeItemsRotatingEventArgs.ActionSource">
      <summary>
        <para>Indicates whether the rotating operation is performed using the rotation handle or the <see href="https://docs.devexpress.com/WPF/116506/controls-and-libraries/diagram-control/diagram-designer-control/properties-panel">Properties Panel</see>.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.ItemsActionSource enumeration value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramBeforeItemsRotatingEventArgs.CenterOfRotation">
      <summary>
        <para>Returns the coordinates of the center of rotation.</para>
      </summary>
      <value>A System.Windows.Point value that is the coordinates of the center of rotation.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramBeforeItemsRotatingEventArgs.Items">
      <summary>
        <para>A collection of items that are being rotated.</para>
      </summary>
      <value>A collection of DevExpress.Xpf.Diagram.DiagramItem objects.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramCommands">
      <summary>
        <para>Provides access to diagram commands.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramCommands.#ctor(DevExpress.Xpf.Diagram.DiagramControl)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramCommands"/> class.</para>
      </summary>
      <param name="diagram">A <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that will expose the collection of commands via its <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Commands">DiagramControl.Commands</see> property.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.BringForward">
      <summary>
        <para>Gets the command that brings the selected diagram items forward.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.BringToFront">
      <summary>
        <para>Gets the command that brings the selected diagram items to the front.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Cancel">
      <summary>
        <para>Gets the command that cancels the current selection.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ChangeConnectorType">
      <summary>
        <para>Gets the command that changes the connector type.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.CircularLayout">
      <summary>
        <para>Gets the command that realigns diagram items to form a circular layout.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Copy">
      <summary>
        <para>Gets the command that copies the selected diagram items to the Clipboard.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Cut">
      <summary>
        <para>Gets the command that removes the selected diagram items and copies them to the Clipboard.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.DecreaseFontSize">
      <summary>
        <para>Gets the command that decreases the font size for the text within the selected diagram items.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Delete">
      <summary>
        <para>Gets the command that removes the selected diagram items.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.DisplayItemProperties">
      <summary>
        <para>Gets the command that invokes the <see href="https://docs.devexpress.com/WPF/116506/controls-and-libraries/diagram-control/diagram-designer-control/properties-panel">Properties Panel</see>.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Edit">
      <summary>
        <para>Gets the command that initiates text editing for the selected shape.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Empty">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ExportDiagram">
      <summary>
        <para>Gets the command that exports the diagram to an image file of the specified format.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.FitToDrawing">
      <summary>
        <para>Gets the command that changes the page size to fit the diagram contents.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.FitToPage">
      <summary>
        <para>Gets the command that sets the diagram zoom factor value to fit all pages with content within the canvas.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.FitToWidth">
      <summary>
        <para>Gets the command that sets the diagram zoom factor value to fit the entire diagram width.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.FlipImage">
      <summary>
        <para>Gets the command that flips the selected image.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.FocusNextControl">
      <summary>
        <para>Gets the command that moves focus to the next control.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.FocusPrevControl">
      <summary>
        <para>Gets the command that moves focus to the previous control.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.IncreaseFontSize">
      <summary>
        <para>Gets the command that increases the font size for the text within the selected diagram items.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.InsertImage">
      <summary>
        <para>Gets the command that invokes the Insert Image dialog that allows the end-user to add an <see href="https://docs.devexpress.com/WPF/117211/controls-and-libraries/diagram-control/diagram-items/images">image item</see> to the diagram.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.LoadImage">
      <summary>
        <para>Gets the command that invokes the Insert Image dialog that allows the end-user to change the selected <see href="https://docs.devexpress.com/WPF/117211/controls-and-libraries/diagram-control/diagram-items/images">image item</see>.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.MindMapTreeLayout">
      <summary>
        <para>Gets the command that realigns diagram items to form a mind-map tree diagram.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.MindMapTreeLayoutForSubordinates">
      <summary>
        <para>Gets the command that applies the mind-map tree layout to the subordinates of the diagram items.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.MoveSelection">
      <summary>
        <para>Gets the command that moves currently selected items in the specified direction.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.MoveSelectionNoSnap">
      <summary>
        <para>Gets the command that moves currently selected items in the specified direction without snapping to grid lines or other items.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.NewFile">
      <summary>
        <para>Gets the command that closes the current file and creates a new one. If the current file contains unsaved changes, the end-user is prompted to save them.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.OpenFile">
      <summary>
        <para>Gets the command that invokes the Open File dialog window.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Paste">
      <summary>
        <para>Gets the command that inserts the diagram items from the clipboard onto the <see href="https://docs.devexpress.com/WPF/116505/controls-and-libraries/diagram-control/diagram-designer-control/canvas">Canvas</see>.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Print">
      <summary>
        <para>Gets the command that invokes the Print dialog window.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.QuickPrint">
      <summary>
        <para>Gets the command that prints the diagram with default print settings.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Redo">
      <summary>
        <para>Gets the command that reapplies the last action that was undone in the diagram control.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ResetSelectedImages">
      <summary>
        <para>Gets the command that resets the appearance of the selected image items.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Rotate">
      <summary>
        <para>Gets the command that rotates the selected items by the specified angle.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SaveFile">
      <summary>
        <para>Gets the command that saves changes made to the diagram. If the diagram has not been saved to a file before, the command invokes the Save File As dialog window.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SaveFileAs">
      <summary>
        <para>Gets the command that invokes the Save File As dialog window.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectAll">
      <summary>
        <para>Gets the command that selects all items within the diagram.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectConnectorTool">
      <summary>
        <para>Gets the command that selects the connector tool.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectEllipseTool">
      <summary>
        <para>Gets the command that selects the ellipse tool.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectHexagonTool">
      <summary>
        <para>Gets the command that selects the hexagon tool.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectNextItem">
      <summary>
        <para>Gets the command that selects the next diagram item in the order they were added to the diagram.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectPanTool">
      <summary>
        <para>Gets the command that selects the pan tool.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectPointerTool">
      <summary>
        <para>Gets the command that selects the pointer tool.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectPrevItem">
      <summary>
        <para>Gets the command that selects the previous diagram item in the order they were added to the diagram.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectRectangleTool">
      <summary>
        <para>Gets the command that selects the rectangle tool.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectRightTriangleTool">
      <summary>
        <para>Gets the command that selects the right triangle tool.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectTool">
      <summary>
        <para>Gets the command that selects a diagram tool.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SendBackward">
      <summary>
        <para>Gets the command that sends the selected diagram items backward.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SendToBack">
      <summary>
        <para>Gets the command that sends the selected diagram items to the back.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetHorizontalAlignment">
      <summary>
        <para>Gets the command that applies the specified horizontal alignment to the text within the selected diagram items.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetPageParameters">
      <summary>
        <para>Gets the command that invokes the <see href="https://docs.devexpress.com/WPF/116297/controls-and-libraries/diagram-control/diagram-designer-control/page-setup-dialog-window">Page Setup Dialog Window</see>.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetSelectedContainersHeaderPadding">
      <summary>
        <para>Gets the command that changes the amount of header padding for the selected containers.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetSelectedContainersPadding">
      <summary>
        <para>Gets the command that changes the amount of padding for the selected container.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetSelectedContainersShape">
      <summary>
        <para>Gets the command that changes the shape of the selected container.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetSelectedImagesScale">
      <summary>
        <para>Gets the command that sets the specified zoom factor for selected image items.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetSelectedImagesStretchMode">
      <summary>
        <para>Gets the command that sets the specified stretch mode for selected image items.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetSelectedItemsStyle">
      <summary>
        <para>Gets the command that sets the style of the selected diagram item.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetVerticalAlignment">
      <summary>
        <para>Gets the command that applies the specified vertical alignment to the text within the selected diagram items.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetZoom">
      <summary>
        <para>Gets the command that applies a zoom factor value to a document.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ShowContainerHeader">
      <summary>
        <para>Gets the command that toggles the visibility of the header for the currently selected container items.</para>
      </summary>
      <value>An object implementing the <see cref="T:System.Windows.Input.ICommand"/> interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ShowPopupMenu">
      <summary>
        <para>Gets the command that invokes the popup menu for the selected item.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ShowPrintPreview">
      <summary>
        <para>Gets the command that invokes the <see href="https://docs.devexpress.com/WPF/117065/controls-and-libraries/diagram-control/diagram-designer-control/print-preview">Print Preview</see>.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ShowPropertiesPanel">
      <summary>
        <para>Gets the command that invokes the <see href="https://docs.devexpress.com/WPF/116506/controls-and-libraries/diagram-control/diagram-designer-control/properties-panel">Properties Panel</see>.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.StartDragTool">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.StartDragToolAlternate">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SugiyamaLayout">
      <summary>
        <para>Gets the command that realigns diagram items according to the layered graph drawing (Sugiyama-style graph drawing) algorithm.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.TipOverTreeLayout">
      <summary>
        <para>Gets the command that realigns diagram items to form a tip-over tree diagram.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.TipOverTreeLayoutForSubordinates">
      <summary>
        <para>Gets the command that applies the Tip-over layout to the subordinates of the diagram items.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ToggleFontBold">
      <summary>
        <para>Gets the command that toggles bold font for the text within the selected shapes.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ToggleFontItalic">
      <summary>
        <para>Gets the command that toggles italic font for the text within the selected shapes.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ToggleFontStrikethrough">
      <summary>
        <para>Gets the command that toggles strikethrough for the text within the selected shapes.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ToggleFontUnderline">
      <summary>
        <para>Gets the command that toggles underline for the text within the selected shapes.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ToggleSubordinatesVisibility">
      <summary>
        <para>Gets the command that shows or hides the subordinates of the selected diagram item.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.TreeLayout">
      <summary>
        <para>Gets the command that realigns diagram items to form a tree diagram.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.TreeLayoutForSubordinates">
      <summary>
        <para>Gets the command that applies the Tree layout to the subordinates of the diagram items.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Undo">
      <summary>
        <para>Gets the command that cancels changes resulting from the last operation.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramCommands.UpdateCommands(System.Collections.Generic.IEnumerable{DevExpress.Diagram.Core.DiagramCommandBase})">
      <summary>
        <para>Gets the command that updates the state of all <see cref="T:DevExpress.Xpf.Diagram.DiagramCommands"/> members.</para>
      </summary>
      <param name="commands">An object implementing the System.Windows.Input.ICommand interface.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.UseTool">
      <summary>
        <para>Gets the command that uses a diagram tool.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ZoomIn">
      <summary>
        <para>Gets the command that increases the current zoom factor of a diagram.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ZoomOut">
      <summary>
        <para>Gets the command that decreases the current zoom factor of a diagram.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramConnectionChangedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ConnectionChanged">DiagramControl.ConnectionChanged</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramConnectionChangedEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,DevExpress.Xpf.Diagram.DiagramConnector,DevExpress.Xpf.Diagram.DiagramItem,DevExpress.Xpf.Diagram.DiagramItem,System.Int32,System.Int32,System.Windows.Point,System.Windows.Point,DevExpress.Diagram.Core.ConnectorPointType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnectionChangedEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="connector">The connector whose beginning/ending item has been changed.</param>
      <param name="oldItem">The diagram item the connector has been detached from.</param>
      <param name="newItem">The diagram item the connector has been attached to.</param>
      <param name="oldIndex">The index of the connection point on the diagram item the connector has been detached from.</param>
      <param name="newIndex">The index of the connection point on the diagram item the connector has been attached to.</param>
      <param name="oldPoint">The initial coordinates of the connection point which has been moved.</param>
      <param name="newPoint">The current coordinates of the connection point which has been moved.</param>
      <param name="connectorPointType">The type of the connection point which has been moved.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnectionChangedEventArgs.Connector">
      <summary>
        <para>Returns the connector whose beginning/ending item has been changed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnectionChangedEventArgs.ConnectorPointType">
      <summary>
        <para>Returns the type of the connection point which has been moved.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.ConnectorPointType"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnectionChangedEventArgs.NewIndex">
      <summary>
        <para>Returns the index of the connection point on the diagram item the connector has been attached to.</para>
      </summary>
      <value>A zero-based index of the connection point on the diagram item the connector has been attached to. -1 if the connector was not attached to an item.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnectionChangedEventArgs.NewItem">
      <summary>
        <para>Returns the diagram item the connector has been attached to.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> descendant that represents the diagram item the connector has been attached to.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnectionChangedEventArgs.NewPoint">
      <summary>
        <para>Returns the current coordinates of the connection point which has been moved.</para>
      </summary>
      <value>A System.Windows.Point value that is the current coordinates of the connection point which has been moved.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnectionChangedEventArgs.OldIndex">
      <summary>
        <para>Returns the index of the connection point on the diagram item the connector has been detached from.</para>
      </summary>
      <value>A zero-based index of the connection point on the diagram item the connector has been detached from. -1 if the connector was not attached to an item.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnectionChangedEventArgs.OldItem">
      <summary>
        <para>Returns the diagram item the connector has been detached from.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> descendant that represents the diagram item the connector has been detached from.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnectionChangedEventArgs.OldPoint">
      <summary>
        <para>Returns the initial coordinates of the connection point which has been moved.</para>
      </summary>
      <value>A System.Windows.Point value that is the initial coordinates of the connection point which has been moved.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramConnectionChangingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ConnectionChanging">DiagramControl.ConnectionChanging</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramConnectionChangingEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,DevExpress.Xpf.Diagram.DiagramConnector,DevExpress.Xpf.Diagram.DiagramItem,DevExpress.Xpf.Diagram.DiagramItem,System.Int32,System.Int32,System.Windows.Point,System.Windows.Point,DevExpress.Diagram.Core.ConnectorPointType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnectionChangingEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="connector">The connector whose beginning/ending item is about to be changed.</param>
      <param name="oldItem">The diagram item the connector is about to be detached from.</param>
      <param name="newItem">The diagram item the connector is about to be attached to.</param>
      <param name="oldIndex">The index of the connection point on the diagram item the connector is about to be detached from.</param>
      <param name="newIndex">The index of the connection point on the diagram item the connector is about to be attached to.</param>
      <param name="oldPoint">The initial coordinates of the connection point which is about to be moved.</param>
      <param name="newPoint">The new coordinates of the connection point which is about to be moved.</param>
      <param name="connectorPointType">The type of the connection point which is about to be moved.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnectionChangingEventArgs.Connector">
      <summary>
        <para>Returns the connector whose beginning/ending item is about to be changed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnectionChangingEventArgs.ConnectorPointType">
      <summary>
        <para>Returns the type of the connection point which is about to be moved.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.ConnectorPointType"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnectionChangingEventArgs.NewIndex">
      <summary>
        <para>Returns the index of the connection point on the diagram item to which the connector is about to be attached.</para>
      </summary>
      <value>A zero-based index of the connection point on the diagram item to which the connector is about to be attached. -1 if the connector is not getting attached to an item.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnectionChangingEventArgs.NewItem">
      <summary>
        <para>Returns the diagram item the connector is about to be attached to.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> descendant that represents the diagram item the connector is about to be attached to.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnectionChangingEventArgs.NewPoint">
      <summary>
        <para>Returns the new coordinates of the connection point which is about to be moved.</para>
      </summary>
      <value>A System.Windows.Point value that is the new coordinates of the connection point which is about to be moved.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnectionChangingEventArgs.OldIndex">
      <summary>
        <para>Returns the index of the connection point on the diagram item from which the connector is about to be detached.</para>
      </summary>
      <value>A zero-based index of the connection point on the diagram item from which the connector is about to be detached. -1 if the connector is not attached to an item.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnectionChangingEventArgs.OldItem">
      <summary>
        <para>Returns the diagram item from which the connector is about to be detached.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> descendant that represents the diagram item from which the connector is about to be detached.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnectionChangingEventArgs.OldPoint">
      <summary>
        <para>Returns the initial coordinates of the connection point which is about to be moved.</para>
      </summary>
      <value>A System.Windows.Point value that is the initial coordinates of the connection point which is about to be moved.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramConnector">
      <summary>
        <para>Connects two diagram items or two points.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramConnector.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> class with default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.ActualConnectionPoints">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Anchors">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Angle">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.AreSubordinatesVisible">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginArrow">
      <summary>
        <para>Gets or sets the connector’s start arrow style. This is a dependency property.</para>
      </summary>
      <value>An object that specifies the start arrow style.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginArrowProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginArrow">DiagramConnector.BeginArrow</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginArrowSize">
      <summary>
        <para>Gets or sets the connector’s starting arrow size. This is a dependency property.</para>
      </summary>
      <value>The starting arrow size.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginArrowSizeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginArrowSize">DiagramConnector.BeginArrowSize</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginItem">
      <summary>
        <para>Gets or sets the start item for the connector. This is a dependency property.</para>
      </summary>
      <value>The connector’s start item.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginItemPointIndex">
      <summary>
        <para>Gets or sets the connection point on the start diagram item to which the connector is glued. This is a dependency property.</para>
      </summary>
      <value>A zero-based index of the connection point on the start diagram item.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginItemPointIndexProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginItemPointIndex">DiagramConnector.BeginItemPointIndex</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginItemProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginItem">DiagramConnector.BeginItem</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginLabelArrowOffset">
      <summary>
        <para>Specifies the offset from the start arrow for the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginLeftLabel">BeginLeftLabel</see> and the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginRightLabel">BeginRightLabel</see>. This is a dependency property.</para>
      </summary>
      <value>An offset from the start arrow, in pixels.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginLabelArrowOffsetProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginLabelArrowOffset">DiagramConnector.BeginLabelArrowOffset</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginLabelConnectorOffset">
      <summary>
        <para>Specifies the offset from the connector for the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginLeftLabel">BeginLeftLabel</see> and the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginRightLabel">BeginRightLabel</see>. This is a dependency property.</para>
      </summary>
      <value>An offset from the connector, in pixels.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginLabelConnectorOffsetProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginLabelConnectorOffset">DiagramConnector.BeginLabelConnectorOffset</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginLeftLabel">
      <summary>
        <para>Specifies the text displayed next to the connector’s begin point to the left relative to its direction. This is a dependency property.</para>
      </summary>
      <value>The text displayed by the connector.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginLeftLabelProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginLeftLabel">DiagramConnector.BeginLeftLabel</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginPoint">
      <summary>
        <para>Gets or sets the connector’s starting point within the diagram canvas. This is a dependency property.</para>
      </summary>
      <value>The starting point of the connector.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginPointProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginPoint">DiagramConnector.BeginPoint</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginPointRestrictions">
      <summary>
        <para>Specifies the restrictions applied to the end-user actions with the connector’s begin point.</para>
        <para>This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.ConnectorPointRestrictions"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginPointRestrictionsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginPointRestrictions">DiagramConnector.BeginPointRestrictions</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginRightLabel">
      <summary>
        <para>Specifies the text displayed next to the connector’s begin point to the right relative to its direction. This is a dependency property.</para>
      </summary>
      <value>The text displayed by the connector.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginRightLabelProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginRightLabel">DiagramConnector.BeginRightLabel</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanAttachConnectorBeginPoint">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanAttachConnectorEndPoint">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanChangeParent">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanChangeRoute">
      <summary>
        <para>Specifies whether to allow end-users to modify the connector’s route. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to modify the connector’s route; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.CanChangeRouteProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.CanChangeRoute">DiagramConnector.CanChangeRoute</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanDragBeginPoint">
      <summary>
        <para>Specifies whether to allow end-users to drag the connector’s begin point. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to drag the connector’s begin point; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.CanDragBeginPointProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.CanDragBeginPoint">DiagramConnector.CanDragBeginPoint</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanDragEndPoint">
      <summary>
        <para>Specifies whether to allow end-users to drag the connector’s end point. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to drag the connector’s end point; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.CanDragEndPointProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.CanDragEndPoint">DiagramConnector.CanDragEndPoint</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanHideSubordinates">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanResize">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanRotate">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanSnapToOtherItems">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanSnapToThisItem">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CollapseButtonHorizontalAlignment">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CollapseButtonOffset">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CollapseButtonPosition">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CollapseButtonVerticalAlignment">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CollapseButtonVisibilityMode">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.ConnectionPoints">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Content">
      <summary>
        <para>Gets or sets the text displayed by the connector. This is a dependency property.</para>
      </summary>
      <value>The text displayed by the connector.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.ContentBackground">
      <summary>
        <para>Gets or sets the brush used to paint the background of the text within the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/>. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Media.Brush"/> object used to paint the background of the text within the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/>.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.ContentBackgroundProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.ContentBackground">DiagramConnector.ContentBackground</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.ContentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.Content">DiagramConnector.Content</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndArrow">
      <summary>
        <para>Gets or sets the connector’s end arrow style. This is a dependency property.</para>
      </summary>
      <value>An object that specifies the end arrow style.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndArrowProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.EndArrow">DiagramConnector.EndArrow</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndArrowSize">
      <summary>
        <para>Gets or sets the connector’s ending arrow size. This is a dependency property.</para>
      </summary>
      <value>The ending arrow size.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndArrowSizeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.EndArrowSize">DiagramConnector.EndArrowSize</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndItem">
      <summary>
        <para>Gets or sets the end item for the connector. This is a dependency property.</para>
      </summary>
      <value>The connector’s end item.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndItemPointIndex">
      <summary>
        <para>Gets or sets the connection point on the end diagram item to which the connector is glued. This is a dependency property.</para>
      </summary>
      <value>A zero-based index of the connection point on the end diagram item</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndItemPointIndexProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.EndItemPointIndex">DiagramConnector.EndItemPointIndex</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndItemProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.EndItem">DiagramConnector.EndItem</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndLabelArrowOffset">
      <summary>
        <para>Specifies the offset from the end arrow for the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.EndLeftLabel">EndLeftLabel</see> and the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.EndRightLabel">EndRightLabel</see>. This is a dependency property.</para>
      </summary>
      <value>An offset from the end arrow, in pixels.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndLabelArrowOffsetProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.EndLabelArrowOffset">DiagramConnector.EndLabelArrowOffset</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndLabelConnectorOffset">
      <summary>
        <para>Specifies the offset from the connector for the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.EndLeftLabel">EndLeftLabel</see> and the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.EndRightLabel">EndRightLabel</see>. This is a dependency property.</para>
      </summary>
      <value>An offset from the connector, in pixels.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndLabelConnectorOffsetProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.EndLabelConnectorOffset">DiagramConnector.EndLabelConnectorOffset</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndLeftLabel">
      <summary>
        <para>Specifies the text displayed next to the connector’s end point to the left relative to its direction. This is a dependency property.</para>
      </summary>
      <value>The text displayed by the connector.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndLeftLabelProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.EndLeftLabel">DiagramConnector.EndLeftLabel</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndPoint">
      <summary>
        <para>Gets or sets the connector’s end point on the diagram canvas. This is a dependency property.</para>
      </summary>
      <value>The end point of the connector.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndPointProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.EndPoint">DiagramConnector.EndPoint</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndPointRestrictions">
      <summary>
        <para>Specifies the restrictions applied to the end-user actions with the connector’s end point.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.ConnectorPointRestrictions"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndPointRestrictionsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.EndPointRestrictions">DiagramConnector.EndPointRestrictions</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndRightLabel">
      <summary>
        <para>Specifies the text displayed next to the connector’s end point to the right relative to its direction. This is a dependency property.</para>
      </summary>
      <value>The text displayed by the connector.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndRightLabelProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.EndRightLabel">DiagramConnector.EndRightLabel</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Height">
      <summary>
        <para>Gets or sets the height of the connector.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.IncomingConnectors">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.MinHeight">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.MinWidth">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.MoveWithSubordinates">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramConnector.OnApplyTemplate">
      <summary>
        <para>Called after the template is completely generated and attached to the visual tree.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.OutgoingConnectors">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Padding">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Points">
      <summary>
        <para>Gets or sets a collection of turn points for the connector. This is a dependency property.</para>
      </summary>
      <value>A collection of turn points.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.PointsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.Points">DiagramConnector.Points</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Position">
      <summary>
        <para>Gets or sets the coordinates of the connector’s upper left corner.</para>
      </summary>
      <value>The coordinates of the connector’s upper left corner.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.TextPosition">
      <summary>
        <para>Gets the position of the text displayed by the <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/>. This is a dependency property.</para>
      </summary>
      <value>The coordinates of the text block.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.TextPositionProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.TextPosition">DiagramConnector.TextPosition</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Type">
      <summary>
        <para>Gets or sets the connector’s type. This is a dependency property.</para>
      </summary>
      <value>The connector’s type.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.TypeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramConnector.Type">DiagramConnector.Type</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramConnector.UpdateRoute">
      <summary>
        <para>Recalculates the diagram connector’s route.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Width">
      <summary>
        <para>Gets or sets the width of the connector.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that is the width of the connector in pixels.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramContainer">
      <summary>
        <para>Represents a diagram container item.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramContainer.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramContainer"/> class with default settings.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ActualCollapseContainerButtonHeightProperty">
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ActualCollapseContainerButtonPositionProperty">
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ActualCollapseContainerButtonWidthProperty">
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ActualIsContainerCollapseButtonVisibleProperty">
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.CanAddItems">
      <summary>
        <para>Specifies whether end-users can add items to the container. This is a dependency property.</para>
      </summary>
      <value>true to allow adding items to the container; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.CanAddItemsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.CanAddItems">DiagramContainer.CanAddItems</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.CanCollapse">
      <summary>
        <para>Specifies whether the container displays the expand/collapse button. This is a dependency property.</para>
      </summary>
      <value>true to display the expand/collapse button within the container; otherwise, false. By default, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.CanCollapseProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.CanCollapse">DiagramContainer.CanCollapse</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ClipItemsToBounds">
      <summary>
        <para>Specifies whether to clip items that exceed the parent container. This is a dependency property.</para>
      </summary>
      <value>true, if the items that exceed the parent container are clipped; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ClipItemsToBoundsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.ClipItemsToBounds">DiagramContainer.ClipItemsToBounds</see> dependency property.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.CollapseContainerButtonPadding">
      <summary>
        <para>Specifies the collapse/expand button padding. This is a dependency property.</para>
      </summary>
      <value>A System.Windows.Thickness object specifying padding distances.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.CollapseContainerButtonPaddingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.CollapseContainerButtonPadding">DiagramContainer.CollapseContainerButtonPadding</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.CollapseContainerButtonSize">
      <summary>
        <para>Specifies the collapse/expand button size. This is a dependency property.</para>
      </summary>
      <value>A System.Windows.Size object.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.CollapseContainerButtonSizeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.CollapseContainerButtonSize">DiagramContainer.CollapseContainerButtonSize</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ContentBackground">
      <summary>
        <para>Gets or sets the brush used to paint the background of the <see cref="T:DevExpress.Xpf.Diagram.DiagramContainer"/>. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Media.Brush"/> object used to paint the background of the text within the <see cref="T:DevExpress.Xpf.Diagram.DiagramContainer"/>.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ContentBackgroundProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.ContentBackground">DiagramContainer.ContentBackground</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.DragMode">
      <summary>
        <para>Specifies whether the container can be dragged by any point or only by header and bounds. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.ContainerDragMode"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.DragModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.DragMode">DiagramContainer.DragMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.EditorBounds">
      <summary>
        <para>For internal use. Gets the editor’s bounds.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Rect"/> structure.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.EditorBoundsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.EditorBounds">DiagramContainer.EditorBounds</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.Header">
      <summary>
        <para>Gets or sets the container header. This is a dependency property.</para>
      </summary>
      <value>A string value that is the container header.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.HeaderPadding">
      <summary>
        <para>Specifies the header’s padding within the container’s boundaries. This is a dependency property.</para>
      </summary>
      <value>A System.Windows.Thickness object specifying padding distances.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.HeaderPaddingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.HeaderPadding">DiagramContainer.HeaderPadding</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.HeaderProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.Header">DiagramContainer.Header</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.IsCollapsedProperty">
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanAttachConnectorBeginPoint">
      <summary>
        <para>Specifies whether end-users can attach a connector’s beginning point to the diagram items within the container.</para>
      </summary>
      <value>true to allow end-users to attach a connector’s beginning point to the diagram items within the container; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanAttachConnectorBeginPointProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanAttachConnectorBeginPoint">DiagramContainer.ItemsCanAttachConnectorBeginPoint</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanAttachConnectorEndPoint">
      <summary>
        <para>Specifies whether end-users can attach a connector’s end point to the diagram items within the container. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to attach a connector’s end point to the diagram items within the container; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanAttachConnectorEndPointProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanAttachConnectorEndPoint">DiagramContainer.ItemsCanAttachConnectorEndPoint</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanChangeParent">
      <summary>
        <para>Specifies whether end-users can move the diagram items from this container to another.</para>
        <para>This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to move the diagram items from this container to another; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanChangeParentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanChangeParent">DiagramContainer.ItemsCanChangeParent</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanCopyWithoutParent">
      <summary>
        <para>Specifies whether to allow end-users to copy items from the container. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to copy items from the container; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanCopyWithoutParentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanCopyWithoutParent">DiagramContainer.ItemsCanCopyWithoutParent</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanDeleteWithoutParent">
      <summary>
        <para>Specifies whether to allow end-users to remove items from the container.</para>
        <para>This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to remove items from the container; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanDeleteWithoutParentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanDeleteWithoutParent">DiagramContainer.ItemsCanDeleteWithoutParent</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanEdit">
      <summary>
        <para>Specifies whether to allow end-users to edit the text displayed by the items within the container. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to edit the text displayed by the items within the container; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanEditProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanEdit">DiagramContainer.ItemsCanEdit</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanMove">
      <summary>
        <para>Specifies whether the diagram items within the container can be moved by end-users. This is a dependency property.</para>
      </summary>
      <value>true, to allow end-users to move the diagram items within the container; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanMoveProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanMove">DiagramContainer.ItemsCanMove</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanResize">
      <summary>
        <para>Specifies whether to allow end-users to resize items within the container.</para>
        <para>This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to resize items within the container; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanResizeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanResize">DiagramContainer.ItemsCanResize</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanRotate">
      <summary>
        <para>Specifies whether to allow end-users to rotate items within the container.</para>
        <para>This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to rotate items within the container; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanRotateProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanRotate">DiagramContainer.ItemsCanRotate</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanSelect">
      <summary>
        <para>Specifies whether to allow end-users to select items within the container. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to select items within the container; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanSelectProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanSelect">DiagramContainer.ItemsCanSelect</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanSnapToOtherItems">
      <summary>
        <para>Specifies whether the item within the container can snap to other items. This is a dependency property.</para>
      </summary>
      <value>true, if the item within the container can snap to other items; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanSnapToOtherItemsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanSnapToOtherItems">DiagramContainer.ItemsCanSnapToOtherItems</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanSnapToThisItem">
      <summary>
        <para>Specifies whether items can snap to an item within the container . This is a dependency property.</para>
      </summary>
      <value>true, items can snap to an item within the container; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanSnapToThisItemProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanSnapToThisItem">DiagramContainer.ItemsCanSnapToThisItem</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.Shape">
      <summary>
        <para>Gets or sets the container shape kind. This is a dependency property.</para>
      </summary>
      <value>An object that specifies the container shape kind.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ShapeGeometry">
      <summary>
        <para>Gets the object that identifies the geometry of the container. This is a dependency property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.ShapeGeometry object.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ShapeGeometryProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.ShapeGeometry">DiagramContainer.ShapeGeometry</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ShapeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.Shape">DiagramContainer.Shape</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ShowHeader">
      <summary>
        <para>Gets or sets whether to show the header. This is a dependency property.</para>
      </summary>
      <value>true to show the header; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ShowHeaderProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.ShowHeader">DiagramContainer.ShowHeader</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramContainerBase">
      <summary>
        <para>The base class for <see href="https://docs.devexpress.com/WPF/117205/controls-and-libraries/diagram-control/diagram-items/containers">containers</see>.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainerBase.AdjustBoundsBehavior">
      <summary>
        <para>Specifies the behavior when the end-user moves items close to the container boundaries. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.AdjustBoundaryBehavior"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainerBase.AdjustBoundsBehaviorProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainerBase.AdjustBoundsBehavior">DiagramContainerBase.AdjustBoundsBehavior</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainerBase.Angle">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.Xpf.Diagram.DiagramContainerBase"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainerBase.CanRotate">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.Xpf.Diagram.DiagramContainerBase"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainerBase.IsSnapScope">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContainerBase.IsSnapScopeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainerBase.IsSnapScope">DiagramContainerBase.IsSnapScope</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainerBase.Items">
      <summary>
        <para>Provides access to the collection of diagram items placed within the container.</para>
      </summary>
      <value>The collection of diagram items.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramContainerIsCollapsedChangedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ContainerIsCollapsedChanged"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramContainerIsCollapsedChangedEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,DevExpress.Xpf.Diagram.DiagramContainer,System.Boolean,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramContainerIsCollapsedChangedEventArgs"/> class with specified settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainerIsCollapsedChangedEventArgs.Container">
      <summary>
        <para>The container item whose <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.IsCollapsed"/> property value has been changed.</para>
      </summary>
      <value>An object implementing the DevExpress.Diagram.Core.IDiagramContainer interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainerIsCollapsedChangedEventArgs.NewValue">
      <summary>
        <para>The new value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.IsCollapsed"/> property.</para>
      </summary>
      <value>true, if the container is now collapsed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainerIsCollapsedChangedEventArgs.OldValue">
      <summary>
        <para>The previous value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.IsCollapsed"/> property.</para>
      </summary>
      <value>true, if the container was initially collapsed; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramContainerIsCollapsedChangingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ContainerIsCollapsedChanging"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramContainerIsCollapsedChangingEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,DevExpress.Xpf.Diagram.DiagramContainer,System.Boolean,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramContainerIsCollapsedChangingEventArgs"/> class with specified settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainerIsCollapsedChangingEventArgs.Container">
      <summary>
        <para>The container item whose <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.IsCollapsed"/> property value is being changed.</para>
      </summary>
      <value>An object implementing the DevExpress.Diagram.Core.IDiagramContainer interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainerIsCollapsedChangingEventArgs.NewValue">
      <summary>
        <para>The new value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.IsCollapsed"/> property.</para>
      </summary>
      <value>true, if the container is to be collapsed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContainerIsCollapsedChangingEventArgs.OldValue">
      <summary>
        <para>The previous value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramContainer.IsCollapsed"/> property.</para>
      </summary>
      <value>true, if the container was initially collapsed; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramContentItem">
      <summary>
        <para>Represents a diagram item with custom content.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramContentItem.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramContentItem"/> class with default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContentItem.Content">
      <summary>
        <para>Gets or sets the object that specifies the item’s content. This is a dependency property.</para>
      </summary>
      <value>A data object that is the item’s content.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContentItem.ContentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContentItem.Content">DiagramContentItem.Content</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContentItem.ContentTemplate">
      <summary>
        <para>Gets or sets a template that defines the presentation of the item’s content. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.DataTemplate"/> object that is the template which defines the presentation of the item’s content.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContentItem.ContentTemplateProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContentItem.ContentTemplate">DiagramContentItem.ContentTemplate</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContentItem.ContentTemplateSelector">
      <summary>
        <para>Gets or sets an object that chooses a content template based on custom logic. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Controls.DataTemplateSelector"/> descendant that applies a template based on custom logic.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContentItem.ContentTemplateSelectorProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContentItem.ContentTemplateSelector">DiagramContentItem.ContentTemplateSelector</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContentItem.CornerRadius">
      <summary>
        <para>Gets or sets a value that represents the degree to which the corners of the <see cref="T:DevExpress.Xpf.Diagram.DiagramContentItem"/> are rounded. This is a dependency property.</para>
      </summary>
      <value>A System.Windows.CornerRadius value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramContentItem.CornerRadiusProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramContentItem.CornerRadius">DiagramContentItem.CornerRadius</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContentItem.Stroke">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContentItem.StrokeDashArray">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramContentItem.StrokeThickness">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramControl">
      <summary>
        <para>Provides a canvas where you or your end-users can display, create and edit various diagrams.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> class with default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ActiveTool">
      <summary>
        <para>Specifies the currently selected diagram tool. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTool"/> object.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ActiveToolChanged">
      <summary>
        <para>Fires each time the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ActiveTool">ActiveTool</see> property changes the value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ActiveToolChangedEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ActiveToolChanged"/> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ActiveToolProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ActiveTool">DiagramControl.ActiveTool</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.AddingNewItem">
      <summary>
        <para>Fires each time a new item is added to the diagram by the end-user (e.g., dropped from the toolbox, drawn using a tool).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AddingNewItemEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.AddingNewItem">DiagramControl.AddingNewItem</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.AlignCanvas(System.Nullable{System.Windows.HorizontalAlignment},System.Nullable{System.Windows.VerticalAlignment})">
      <summary>
        <para>Scrolls the viewport to apply the specified horizontal and vertical alignment.</para>
      </summary>
      <param name="horizontalAlignment">A <see cref="T:System.Windows.HorizontalAlignment"/> enumeration value that is the horizontal alignment of the canvas.</param>
      <param name="verticalAlignment">A <see cref="T:System.Windows.VerticalAlignment"/> enumeration value that is the vertical alignment of the canvas.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.AlignPage(System.Nullable{System.Windows.HorizontalAlignment},System.Nullable{System.Windows.VerticalAlignment})">
      <summary>
        <para>Scrolls the viewport according to the specified horizontal and vertical alignment.</para>
      </summary>
      <param name="horizontalAlignment">A System.Windows.HorizontalAlignment enumeration value.</param>
      <param name="verticalAlignment">A System.Windows.VerticalAlignment enumeration value.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowAddRemoveItems">
      <summary>
        <para>Gets or sets whether to allow the end-user to add and remove diagram items from the canvas. This is a dependency property.</para>
      </summary>
      <value>true to allow adding and removing items from the canvas; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowAddRemoveItemsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowAddRemoveItems">DiagramControl.AllowAddRemoveItems</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowApplyAutomaticLayout">
      <summary>
        <para>Gets or sets whether to allow the end-user to apply the <see href="https://docs.devexpress.com/WPF/116572/controls-and-libraries/diagram-control/automatic-layout">Automatic Layout</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to apply automatic layout; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowApplyAutomaticLayoutForSubordinates">
      <summary>
        <para>Gets or sets whether to allow the end-user to apply the <see href="https://docs.devexpress.com/WPF/116572/controls-and-libraries/diagram-control/automatic-layout">Automatic Layout</see> to an item’s subordinates. This is a dependency property.</para>
      </summary>
      <value>true, to allow the end-user to subordinates of an item; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowApplyAutomaticLayoutForSubordinatesProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowApplyAutomaticLayoutForSubordinates">DiagramControl.AllowApplyAutomaticLayoutForSubordinates</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowApplyAutomaticLayoutProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowApplyAutomaticLayout">DiagramControl.AllowApplyAutomaticLayout</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowAttachDetachConnectors">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the connector’s starting and ending items. This is a dependency property.</para>
      </summary>
      <value>true, to allow the end-user to change the connector’s starting and ending items; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowAttachDetachConnectorsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowAttachDetachConnectors">DiagramControl.AllowAttachDetachConnectors</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeCanvasSizeMode">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the canvas size mode in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to change the canvas size mode; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeCanvasSizeModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeCanvasSizeMode">DiagramControl.AllowChangeCanvasSizeMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeConnectorsArrowSettings">
      <summary>
        <para>Gets or sets whether to allow users to change connector arrows in the <see href="https://docs.devexpress.com/WPF/116506/controls-and-libraries/diagram-control/diagram-designer-control/properties-panel">Properties Panel</see>. This is a dependency property.</para>
      </summary>
      <value>true, to allow users to change connector arrows; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeConnectorsArrowSettingsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeConnectorsArrowSettings">DiagramControl.AllowChangeConnectorsArrowSettings</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeConnectorsRoute">
      <summary>
        <para>Gets or sets whether to allow the end-user to manually reroute connectors. This is a dependency property.</para>
      </summary>
      <value>true, to allow the end-user to manually reroute connectors; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeConnectorsRouteProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeConnectorsRoute">DiagramControl.AllowChangeConnectorsRoute</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeConnectorsType">
      <summary>
        <para>Gets or sets whether to allow end-users to change the connector type in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to change the connector type; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeConnectorsTypeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeConnectorsType">DiagramControl.AllowChangeConnectorsType</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeContainerHeaderPadding">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the header’s padding within the container’s boundaries in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to change the container header’s padding in the ribbon; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeContainerHeaderPaddingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeContainerHeaderPadding">DiagramControl.AllowChangeContainerHeaderPadding</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeContainerHeaderVisibility">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the container header’s visibility. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to change the container header’s visibility; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeContainerHeaderVisibilityProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeContainerHeaderVisibility">DiagramControl.AllowChangeContainerHeaderVisibility</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeContainerPadding">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the container’s padding in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to change the container’s padding in the ribbon; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeContainerPaddingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeContainerPadding">DiagramControl.AllowChangeContainerPadding</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeContainerStyle">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the container style in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to change the container style in the ribbon; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeContainerStyleProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeContainerStyle">DiagramControl.AllowChangeContainerStyle</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeGridVisibility">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the visibility of grid lines on the <see href="https://docs.devexpress.com/WPF/116505/controls-and-libraries/diagram-control/diagram-designer-control/canvas">Canvas</see> in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to change the visibility of grid lines in the ribbon; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeGridVisibilityProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeGridVisibility">DiagramControl.AllowChangeGridVisibility</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeImage">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the source image of an image item. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to change the source image of an image item; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeImageProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeImage">DiagramControl.AllowChangeImage</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeImageStretchMode">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the stretch mode for an image item in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true, to allow the end-user to change the stretch mode for an image item; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeImageStretchModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeImageStretchMode">DiagramControl.AllowChangeImageStretchMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeItemBackground">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the diagram item’s background color in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to change the item’s background color; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeItemBackgroundProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeItemBackground">DiagramControl.AllowChangeItemBackground</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeItemStroke">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the diagram item’s stroke color in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to change the item’s stroke color; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeItemStrokeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeItemStroke">DiagramControl.AllowChangeItemStroke</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeItemStyle">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the diagram item’s style in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to change the item’s style; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeItemStyleProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeItemStyle">DiagramControl.AllowChangeItemStyle</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeItemZOrder">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the item’s Z-order in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to change the item’s Z-order; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeItemZOrderProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeItemZOrder">DiagramControl.AllowChangeItemZOrder</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeLineJumpSettings">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the line jump settings in the <see href="https://docs.devexpress.com/WPF/116297/controls-and-libraries/diagram-control/diagram-designer-control/page-setup-dialog-window">Page Setup Dialog Window</see>. This is a dependency property.</para>
      </summary>
      <value>true, to allow the end-user to change the line jump settings; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeLineJumpSettingsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeLineJumpSettings">DiagramControl.AllowChangeLineJumpSettings</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangePageBreaksVisibility">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the visibility of page breaks in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to change the visibility of page breaks; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangePageBreaksVisibilityProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangePageBreaksVisibility">DiagramControl.AllowChangePageBreaksVisibility</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangePageParameters">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the page parameters in the <see href="https://docs.devexpress.com/WPF/116297/controls-and-libraries/diagram-control/diagram-designer-control/page-setup-dialog-window">Page Setup Dialog Window</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to change the page parameters; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangePageParametersProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangePageParameters">DiagramControl.AllowChangePageParameters</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeRulerVisibility">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the visibility of grid rulers in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to change the visibility of grid rulers; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeRulerVisibilityProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeRulerVisibility">DiagramControl.AllowChangeRulerVisibility</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeShapesParameter">
      <summary>
        <para>Gets or sets whether to allow the end-user to transform shapes by dragging the transformation handles. This is a dependency property.</para>
      </summary>
      <value>true, to allow the end-user to transform shapes by dragging the transformation handles; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeShapesParameterProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeShapesParameter">DiagramControl.AllowChangeShapesParameter</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeTextFont">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the text font settings in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true to change the text font settings; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeTextFontProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeTextFont">DiagramControl.AllowChangeTextFont</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeTextForeground">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the text foreground in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to change the text foreground; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeTextForegroundProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeTextForeground">DiagramControl.AllowChangeTextForeground</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeTextHorizontalAlignment">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the text horizontal alignment in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to change the text horizontal alignment; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeTextHorizontalAlignmentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeTextHorizontalAlignment">DiagramControl.AllowChangeTextHorizontalAlignment</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeTextVerticalAlignment">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the text vertical alignment in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to change the text vertical alignment; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeTextVerticalAlignmentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeTextVerticalAlignment">DiagramControl.AllowChangeTextVerticalAlignment</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeTheme">
      <summary>
        <para>Gets or sets whether to allow end-users to select the diagram theme in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to select the diagram theme in the Ribbon; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeThemeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowChangeTheme">DiagramControl.AllowChangeTheme</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowCollapseContainers">
      <summary>
        <para>Specifies whether to display the expand/collapse button for all containers. This is a dependency property.</para>
      </summary>
      <value>true to display the expand/collapse button for all containers; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowCollapseContainersProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowCollapseContainers">DiagramControl.AllowCollapseContainers</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowCopyItems">
      <summary>
        <para>Gets or sets whether to allow end-users to copy diagram items. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to copy diagram items; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowCopyItemsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowCopyItems">DiagramControl.AllowCopyItems</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowDiagramProperties">
      <summary>
        <para>Specifies whether to display the ‘Properties’ menu item in the context menu. This is a dependency property.</para>
      </summary>
      <value>true to display the ‘Properties’ menu item in the context menu; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowDiagramPropertiesProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowDiagramProperties">DiagramControl.AllowDiagramProperties</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowEditItems">
      <summary>
        <para>Gets or sets whether to allow the end-user to enter the text editing mode. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to enter the text editing mode; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowEditItemsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowEditItems">DiagramControl.AllowEditItems</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowEmptySelection">
      <summary>
        <para>Specifies whether to allow selecting the root item. This is a dependency property.</para>
      </summary>
      <value>true, to allow selecting the root item ; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowEmptySelectionProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowEmptySelection">DiagramControl.AllowEmptySelection</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowFlipImage">
      <summary>
        <para>Gets or sets whether to allow the end-user to apply the flip effect to an image item in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to apply the flip effect to an image item in the ribbon; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowFlipImageProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowFlipImage">DiagramControl.AllowFlipImage</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowMiddleButtonDrag">
      <summary>
        <para>Specifies whether to enable diagram panning on the middle mouse button. This is a dependency property.</para>
      </summary>
      <value>true, to enable diagram panning on the middle mouse button; otherwise, false. By default, true.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowMiddleButtonDragProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowMiddleButtonDrag"/> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowMoveItems">
      <summary>
        <para>Gets or sets whether to allow the end-user to move diagram items by dragging with the mouse or pressing the arrow keys. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to move diagram items by dragging with the mouse or pressing the arrow keys; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowMoveItemsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowMoveItems">DiagramControl.AllowMoveItems</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowPropertiesPanel">
      <summary>
        <para>Specifies whether to display the ‘Properties’ menu item in the context menu. This is a dependency property.</para>
      </summary>
      <value>true to display the ‘Properties’ menu item in the context menu; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowPropertiesPanelProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowPropertiesPanel">DiagramControl.AllowPropertiesPanel</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowResizeItems">
      <summary>
        <para>Gets or sets whether to allow the end-user to resize items by dragging selection handles. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to resize items by dragging selection handles; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowResizeItemsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowResizeItems">DiagramControl.AllowResizeItems</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowRotateItems">
      <summary>
        <para>Gets or sets whether to allow the end-user to rotate items by dragging the rotation handle. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to rotate items by dragging the rotation handle; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowRotateItemsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowRotateItems">DiagramControl.AllowRotateItems</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowUndoRedo">
      <summary>
        <para>Gets or sets whether to allow the end-user to perform the undo/redo operations. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to perform the undo/redo operations; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowUndoRedoProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowUndoRedo">DiagramControl.AllowUndoRedo</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowZoom">
      <summary>
        <para>Gets or sets whether to allow the end-user to change the diagram zoom factor. This is a dependency property.</para>
      </summary>
      <value>true to allow the end-user to change the diagram zoom factor; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowZoomProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.AllowZoom">DiagramControl.AllowZoom</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyCircularLayout(DevExpress.Diagram.Core.Layout.CircularLayoutSettings,System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Applies the circular layout algorithm.</para>
      </summary>
      <param name="settings">A <see cref="T:DevExpress.Diagram.Core.Layout.CircularLayoutSettings"/> object.</param>
      <param name="items">A collection of items to which to apply the algorithm.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyCircularLayout(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Applies the circular layout algorithm.</para>
      </summary>
      <param name="items">A collection of items to which to apply the algorithm.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyMindMapTreeLayout(DevExpress.Diagram.Core.Layout.MindMapTreeLayoutSettings,DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode,System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Applies the mind-map tree layout algorithm.</para>
      </summary>
      <param name="settings">A DevExpress.Diagram.Core.Layout.MindMapTreeLayoutSettings object.</param>
      <param name="splitMode">A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value that specifies which diagram items are realigned.</param>
      <param name="items">A collection of items to which to apply the algorithm.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyMindMapTreeLayout(DevExpress.Diagram.Core.OrientationKind,System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem},System.Nullable{DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode})">
      <summary>
        <para>Applies the mind-map tree layout algorithm.</para>
      </summary>
      <param name="orientation">An <see cref="T:DevExpress.Diagram.Core.OrientationKind"/> enumeration value.</param>
      <param name="items">A collection of items to which to apply the algorithm.</param>
      <param name="splitMode">A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value that specifies which diagram items are realigned.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyMindMapTreeLayout(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem},System.Nullable{DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode})">
      <summary>
        <para>Applies the mind-map tree layout algorithm.</para>
      </summary>
      <param name="items">A collection of items to which to apply the algorithm.</param>
      <param name="splitMode">A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value that specifies which diagram items are realigned.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyMindMapTreeLayoutForSubordinates(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem},DevExpress.Diagram.Core.Layout.MindMapTreeLayoutSettings)">
      <summary>
        <para>Applies the mind-map tree layout algorithm to the subordinates of the specified items.</para>
      </summary>
      <param name="items">A collection of items which subordinates should be rearranged.</param>
      <param name="settings">A DevExpress.Diagram.Core.Layout.MindMapTreeLayoutSettings object.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyMindMapTreeLayoutForSubordinates(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Applies the mind-map tree layout algorithm to the subordinates of the specified items.</para>
      </summary>
      <param name="items">A collection of items which subordinates should be rearranged.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyOrgChartLayout(DevExpress.Diagram.Core.Layout.OrgChartLayoutSettings,System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem},System.Nullable{DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode})">
      <summary>
        <para>Applies the org chart layout algorithm.</para>
      </summary>
      <param name="settings">A DevExpress.Diagram.Core.Layout.OrgChartLayoutSettings object.</param>
      <param name="items">A collection of items to which to apply the algorithm.</param>
      <param name="splitMode">A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value that specifies which diagram items are realigned.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyOrgChartLayout(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem},System.Nullable{DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode})">
      <summary>
        <para>Applies the org chart layout algorithm.</para>
      </summary>
      <param name="items">A collection of items to which to apply the algorithm.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplySugiyamaLayout(DevExpress.Diagram.Core.Direction,System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Applies the Sugiyama (layered) layout algorithm.</para>
      </summary>
      <param name="direction">A <see cref="T:DevExpress.Diagram.Core.Direction"/> enumeration value.</param>
      <param name="items">A collection of items to which to apply the algorithm.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplySugiyamaLayout(DevExpress.Diagram.Core.Layout.LayoutDirection,System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Applies the Sugiyama (layered) layout algorithm.</para>
      </summary>
      <param name="direction">A <see cref="T:DevExpress.Diagram.Core.Layout.LayoutDirection"/> enumeration value.</param>
      <param name="items">A collection of items to which to apply the algorithm.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplySugiyamaLayout(DevExpress.Diagram.Core.Layout.SugiyamaLayoutSettings,System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Applies the Sugiyama (layered) layout algorithm.</para>
      </summary>
      <param name="settings">A <see cref="T:DevExpress.Diagram.Core.Layout.SugiyamaLayoutSettings"/> object.</param>
      <param name="items">A collection of items to which to apply the algorithm.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplySugiyamaLayout(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Applies the Sugiyama (layered) layout algorithm.</para>
      </summary>
      <param name="items">A collection of items to which to apply the algorithm.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTipOverTreeLayout(DevExpress.Diagram.Core.Layout.TipOverDirection,System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem},System.Nullable{DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode})">
      <summary>
        <para>Applies the tip-over tree layout algorithm.</para>
      </summary>
      <param name="direction">A <see cref="T:DevExpress.Diagram.Core.Layout.TipOverDirection"/> enumeration value.</param>
      <param name="items">A collection of items to which to apply the algorithm.</param>
      <param name="splitMode">A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value specifying whether to apply the layout algorithim only items that are connected to at least one other item.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTipOverTreeLayout(DevExpress.Diagram.Core.Layout.TipOverTreeLayoutSettings,DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode,System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Applies the tip-over tree layout algorithm.</para>
      </summary>
      <param name="settings">A <see cref="T:DevExpress.Diagram.Core.Layout.TipOverTreeLayoutSettings"/> object.</param>
      <param name="splitMode">A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value specifying whether to apply the layout algorithm only to items that are connected to at least one other item.</param>
      <param name="items">A collection of items to which to apply the algorithm.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTipOverTreeLayout(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem},System.Nullable{DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode})">
      <summary>
        <para>Applies the tip-over tree layout algorithm.</para>
      </summary>
      <param name="items">A collection of items to which to apply the algorithm.</param>
      <param name="splitMode">A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value specifying whether to apply the layout algorithm only to items that are connected to at least one other item.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTipOverTreeLayoutForSubordinates(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem},DevExpress.Diagram.Core.Layout.TipOverTreeLayoutSettings)">
      <summary>
        <para>Applies the Tip-Over Tree layout to the subordinates of the specified diagram items.</para>
      </summary>
      <param name="items">A collection of diagram items whose subordinates will be repositioned.</param>
      <param name="settings">An object that contains the Tip-Over Tree layout settings.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTipOverTreeLayoutForSubordinates(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Applies the Tip-Over Tree layout to the subordinates of the specified diagram items.</para>
      </summary>
      <param name="items">A collection of diagram items whose subordinates will be repositioned.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTreeLayout(DevExpress.Diagram.Core.Direction,System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Applies the tree layout algorithm.</para>
      </summary>
      <param name="direction">A <see cref="T:DevExpress.Diagram.Core.Direction"/> enumeration value.</param>
      <param name="items">A collection of items to which to apply the algorithm.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTreeLayout(DevExpress.Diagram.Core.Layout.LayoutDirection,System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem},System.Nullable{DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode})">
      <summary>
        <para>Applies the tree layout algorithm.</para>
      </summary>
      <param name="direction">A <see cref="T:DevExpress.Diagram.Core.Layout.LayoutDirection"/> enumeration value.</param>
      <param name="items">A collection of items to which to apply the algorithm.</param>
      <param name="splitMode">A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value specifying whether to apply the layout algorithim only items that are connected to at least one other item.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTreeLayout(DevExpress.Diagram.Core.Layout.TreeLayoutSettings,DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode,System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Applies the tree layout algorithm.</para>
      </summary>
      <param name="settings">A <see cref="T:DevExpress.Diagram.Core.Layout.TreeLayoutSettings"/> object.</param>
      <param name="splitMode">A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value specifying whether to apply the layout algorithm only to items that are connected to at least one other item.</param>
      <param name="items">A collection of items to which to apply the algorithm.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTreeLayout(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem},System.Nullable{DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode})">
      <summary>
        <para>Applies the tree layout algorithm.</para>
      </summary>
      <param name="items">A collection of items to which to apply the algorithm.</param>
      <param name="splitMode">A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value specifying whether to apply the layout algorithm only to items that are connected to at least one other item.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTreeLayoutForSubordinates(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem},DevExpress.Diagram.Core.Layout.TreeLayoutSettings)">
      <summary>
        <para>Applies the Tree layout to the subordinates of the specified diagram items.</para>
      </summary>
      <param name="items">A collection of diagram items whose subordinates will be repositioned.</param>
      <param name="settings">An object that contains the Tree layout settings.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTreeLayoutForSubordinates(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Applies the Tree layout to the subordinates of the specified diagram items.</para>
      </summary>
      <param name="items">A collection of diagram items whose subordinates will be repositioned.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.AttachToWindow">
      <summary>
        <para>Binds the window’s Title property to the name of the current document and subscribes the diagram to the window’s Closing event. When the end-user attempts to close the window with the diagram that contains unsaved changes, a dialog window is invoked prompting the user to save changes.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.BackgroundTemplate">
      <summary>
        <para>Gets or sets the template that defines the presentation of the <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/>‘s background. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.DataTemplate"/> object that defines the presentation of the <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/>‘s background.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.BackgroundTemplateProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.BackgroundTemplate">DiagramControl.BackgroundTemplate</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.BeforeItemsMoving">
      <summary>
        <para>Fires each time the end-user attempts to move a diagram item.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.BeforeItemsMovingEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.BeforeItemsMoving">DiagramControl.BeforeItemsMoving</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.BeforeItemsResizing">
      <summary>
        <para>Raises each time the end-user attempts to resize a diagram item.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.BeforeItemsResizingEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.BeforeItemsResizing">DiagramControl.BeforeItemsResizing</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.BeforeItemsRotating">
      <summary>
        <para>Raises each time the end-user attempts to rotate a diagram item.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.BeforeItemsRotatingEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.BeforeItemsRotating">DiagramControl.BeforeItemsRotating</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BeginInit">
      <summary>
        <para>Starts the runtime initialization.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.BringIntoViewMargin">
      <summary>
        <para>Gets or sets the margin between diagram items and viewport bounds when calling the <see cref="M:DevExpress.Xpf.Diagram.DiagramControl.BringItemsIntoView(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem},DevExpress.Diagram.Core.BringIntoViewMode)">DiagramControl.BringItemsIntoView</see> and <see cref="M:DevExpress.Xpf.Diagram.DiagramControl.BringSelectionIntoView(DevExpress.Diagram.Core.BringIntoViewMode)">DiagramControl.BringSelectionIntoView</see> methods. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that represents the margin between diagram items and viewport bounds.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.BringIntoViewMarginProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.BringIntoViewMargin">DiagramControl.BringIntoViewMargin</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BringItemsForward(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Brings the specified diagram items forward one step in the stack.</para>
      </summary>
      <param name="items">The diagram items to be brought forward one step in the stack.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BringItemsIntoView(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem},DevExpress.Diagram.Core.BringIntoViewMode)">
      <summary>
        <para>Scrolls the diagram and changes its zoom factor to bring the specified diagram items into view.</para>
      </summary>
      <param name="items">The diagram items to be brought into view.</param>
      <param name="viewMode">A <see cref="T:DevExpress.Diagram.Core.BringIntoViewMode"/> enumeration value that specifies whether all items should be brought into view when other items are partially visible.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BringItemsToFront(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Brings the specified diagram items to the front of the stack.</para>
      </summary>
      <param name="items">The diagram items to be brought to the front of the stack.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BringSelectedItemsForward">
      <summary>
        <para>Brings the selected diagram items forward one step in the stack.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BringSelectedItemsToFront">
      <summary>
        <para>Brings the specified diagram items to the front of the stack.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BringSelectionIntoView(DevExpress.Diagram.Core.BringIntoViewMode)">
      <summary>
        <para>Scrolls the diagram and changes its zoom factor to bring the selected diagram items into view.</para>
      </summary>
      <param name="viewMode">A <see cref="T:DevExpress.Diagram.Core.BringIntoViewMode"/> enumeration value that specifies whether all items should be brought into view when other items are partially visible.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CalcHitInfo(System.Func{System.Windows.FrameworkElement,System.Windows.Point})">
      <summary>
        <para>Returns information on an object located at the specified position.</para>
      </summary>
      <param name="getPosition">A function that returns the point where a target element is located.</param>
      <returns>A DiagramHitInfo descendant that contains information on an object located at the specified position.</returns>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CalcHitInfo(System.Windows.Point)">
      <summary>
        <para>Returns information on an object located at the specified position.</para>
      </summary>
      <param name="diagramRelativePoint">A test point where a target element is located.</param>
      <returns>A DiagramHitInfo descendant that contains information on an object located at the specified position.</returns>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CalcHitItem(System.Func{System.Windows.FrameworkElement,System.Windows.Point})">
      <summary>
        <para>Returns the diagram item located at the specified position.</para>
      </summary>
      <param name="getPosition">A function that returns the point where a target element is located.</param>
      <returns>A diagram item located at the specified position.</returns>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CalcHitItem(System.Windows.Point)">
      <summary>
        <para>Returns the diagram item located at the specified position.</para>
      </summary>
      <param name="diagramRelativePoint">A test point where a target element is located.</param>
      <returns>A diagram item located at the specified position.</returns>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.CanRedo">
      <summary>
        <para>Indicates whether there are actions that occurred recently within the control that can be reapplied. This is a dependency property.</para>
      </summary>
      <value>true if there are operations that have been undone that can be reapplied; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CanRedoProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.CanRedo">DiagramControl.CanRedo</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.CanUndo">
      <summary>
        <para>Indicates whether the user can undo the previous operation. This is a dependency property.</para>
      </summary>
      <value>true if the user can undo the previous opration; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CanUndoProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.CanUndo">DiagramControl.CanUndo</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CanvasBoundsChanged">
      <summary>
        <para>Occurs when the size of the <see href="https://docs.devexpress.com/WPF/116505/controls-and-libraries/diagram-control/diagram-designer-control/canvas">Canvas</see> is changed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CanvasBoundsChangedEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.CanvasBoundsChanged">DiagramControl.CanvasBoundsChanged</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.CanvasSizeMode">
      <summary>
        <para>Specifies whether the <see href="https://docs.devexpress.com/WPF/116505/controls-and-libraries/diagram-control/diagram-designer-control/canvas">Canvas</see> size is automatically changed to fit the current shapes layout. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.CanvasSizeMode"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CanvasSizeModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.CanvasSizeMode">DiagramControl.CanvasSizeMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ChangeConnectorsType(DevExpress.Diagram.Core.ConnectorType,System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramConnector})">
      <summary>
        <para>Changes the type of the specified connectors.</para>
      </summary>
      <param name="type">A ConnectorType class member that specifies the type of the connectors.</param>
      <param name="connectors">A collection of diagram connectors.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ChangeSelectedConnectorsType(DevExpress.Diagram.Core.ConnectorType)">
      <summary>
        <para>Specifies the connector type for the currently selected connectors.</para>
      </summary>
      <param name="type">A ConnectorType class member that specifies the type of the connectors.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.CircularLayoutNodesSpacing">
      <summary>
        <para>Specifies the spacing between the diagram items to which the <see href="https://docs.devexpress.com/WPF/116572/controls-and-libraries/diagram-control/automatic-layout">circular layout</see> is applied. This is a dependency property.</para>
      </summary>
      <value>A System.Double value that is the spacing between the diagram items in pixels.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CircularLayoutNodesSpacingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.CircularLayoutNodesSpacing">DiagramControl.CircularLayoutNodesSpacing</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.CircularLayoutOrder">
      <summary>
        <para>Specifies how the circular layout algorithm arranges shapes.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Layout.CircularLayoutOrder"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CircularLayoutOrderProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.CircularLayoutOrder">DiagramControl.CircularLayoutOrder</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.CircularLayoutStartAngle">
      <summary>
        <para>Specifies the start angle in degrees in the counterclockwise direction. This is a dependency property.</para>
      </summary>
      <value>A System.Double value that is the start angle in degrees in the counterclockwise direction</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CircularLayoutStartAngleProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.CircularLayoutStartAngle">DiagramControl.CircularLayoutStartAngle</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ClearCache">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ClearSelection">
      <summary>
        <para>Unselects any selected shapes and connectors.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ClosedEditor">
      <summary>
        <para>Fires after the end-user closes the diagram item’s text editor.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ClosedEditorEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ClosedEditor">DiagramControl.ClosedEditor</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Commands">
      <summary>
        <para>Provides access to the set of available diagram commands.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramCommands"/> object that provides a set of diagram commands.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ConnectionChanged">
      <summary>
        <para>Occurs after the connection has been changed by a user.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ConnectionChangedEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ConnectionChanged">DiagramControl.ConnectionChanged</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ConnectionChanging">
      <summary>
        <para>Occurs when the connection is about to be changed by the end-user.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ConnectionChangingEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ConnectionChanging">DiagramControl.ConnectionChanging</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ConnectorsSeparationMode">
      <summary>
        <para>Specifies whether to automatically split the overlapping right-angle connectors. This is a dependency property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.DiagramConnectorsSeparationMode enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ConnectorsSeparationModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ConnectorsSeparationMode">DiagramControl.ConnectorsSeparationMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ConnectorTool">
      <summary>
        <para>Specifies the tool that is used when the end-user selects the Connector tool in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTool"/> object that represents the connector tool.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ConnectorToolProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ConnectorTool">DiagramControl.ConnectorTool</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ContainerIsCollapsedChanged">
      <summary>
        <para>Occurs when the <see href="https://docs.devexpress.com/WPF/117205/controls-and-libraries/diagram-control/diagram-items/containers">container’s collapsed state</see> has been changed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ContainerIsCollapsedChangedEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ContainerIsCollapsedChanged">DiagramControl.ContainerIsCollapsedChanged</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ContainerIsCollapsedChanging">
      <summary>
        <para>Occurs when the <see href="https://docs.devexpress.com/WPF/117205/controls-and-libraries/diagram-control/diagram-items/containers">container’s collapsed state</see> is being changed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ContainerIsCollapsedChangingEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ContainerIsCollapsedChanging">DiagramControl.ContainerIsCollapsedChanging</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.Controller">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CopySelectedItems">
      <summary>
        <para>Copies the currently selected diagram items to the clipboard.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CreateAdorner(System.Windows.FrameworkElement)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CreateAdornerEx``2(``0)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CreateBackgroundAdorner(System.Windows.FrameworkElement)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CreateHRulerAdorner(System.Windows.FrameworkElement)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CreateVRulerAdorner(System.Windows.FrameworkElement)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.CurrentProcessId">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomCursor">
      <summary>
        <para>Occurs when the mouse cursor enters the diagram control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CustomCursorEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.CustomCursor">DiagramControl.CustomCursor</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomGetEditableItemProperties">
      <summary>
        <para>Allows you to modify the list of diagram item properties that can be edited by end-users in the <see href="https://docs.devexpress.com/WPF/116506/controls-and-libraries/diagram-control/diagram-designer-control/properties-panel">Properties Panel</see>.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomGetEditableItemPropertiesCacheKey">
      <summary>
        <para>Allows you to update the set of properties displayed by the property grid.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomGetSerializableItemProperties">
      <summary>
        <para>Allows you to modify the list of serializable properties of diagram items.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomItemDrag">
      <summary>
        <para>Occurs when an end-user starts dragging a diagram item.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CustomItemDragEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.CustomItemDrag">DiagramControl.CustomItemDrag</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomItemDragResult">
      <summary>
        <para>Occurs before a drag and drop operation is completed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CustomItemDragResultEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.CustomItemDragResult">DiagramControl.CustomItemDragResult</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomItemGiveFeedback">
      <summary>
        <para>Occurs while diagram items are dragged.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CustomItemGiveFeedbackEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.CustomItemGiveFeedback">DiagramControl.CustomItemGiveFeedback</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomItemQueryContinueDrag">
      <summary>
        <para>Occurs during a drag-and-drop operation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CustomItemQueryContinueDragEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.CustomItemQueryContinueDrag">DiagramControl.CustomItemQueryContinueDrag</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomLoadDocument">
      <summary>
        <para>Fires after an end-user selects a document in the ‘Open File’ dialog or a document is loaded by setting the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DocumentSource">DiagramControl.DocumentSource</see> property in code.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CustomLoadDocumentEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.CustomLoadDocument">DiagramControl.CustomLoadDocument</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomLoadImage">
      <summary>
        <para>Fires after an end-user selects a file in the ‘Insert Picture’ dialog.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CustomLoadImageEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.CustomLoadImage">DiagramControl.CustomLoadImage</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomSaveDocument">
      <summary>
        <para>Fires when the diagram is about to be saved (when an end-user uses Save actions in the Diagram’s Ribbon menu, or when the <see cref="M:DevExpress.Xpf.Diagram.DiagramControl.SaveFile">DiagramControl.SaveFile</see>/<see cref="M:DevExpress.Xpf.Diagram.DiagramControl.SaveFileAs">DiagramControl.SaveFileAs</see> method is called). The event allows you to implement custom saving logic.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CustomSaveDocumentEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.CustomSaveDocument">DiagramControl.CustomSaveDocument</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CutSelectedItems">
      <summary>
        <para>Moves the currently selected diagram items to the clipboard.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.DeleteItems(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Removes the specified diagram items.</para>
      </summary>
      <param name="items">The diagram items to be removed.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.DeleteSelectedItems">
      <summary>
        <para>Removes the currently selected diagram items.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.DeletingItems">
      <summary>
        <para>Fires when the end-user removes items from the diagram canvas. Obsoleted. Use the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsDeleting">DiagramControl.ItemsDeleting</see> event instead.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.DeletingItemsEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.DeletingItems">DiagramControl.DeletingItems</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.DetachFromWindow">
      <summary>
        <para>Removes changes made by the <see cref="M:DevExpress.Xpf.Diagram.DiagramControl.AttachToWindow">DiagramControl.AttachToWindow</see> method.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.DiagramDesignerResultForDesignTime">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.DiagramPageBackgroundTemplate">
      <summary>
        <para>Gets or sets the template that specifies the background of a page. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.DataTemplate"/> object that specifies the background of a page.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.DiagramPageBackgroundTemplateProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DiagramPageBackgroundTemplate">DiagramControl.DiagramPageBackgroundTemplate</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.DiagramPageBackgroundTemplateSelector">
      <summary>
        <para>Gets or sets an object that chooses a drawing page background template based on custom logic. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Controls.DataTemplateSelector"/> descendant that applies a template based on custom logic.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.DiagramPageBackgroundTemplateSelectorProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DiagramPageBackgroundTemplateSelector">DiagramControl.DiagramPageBackgroundTemplateSelector</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.DiagramProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram">DiagramControl.Diagram</see> dependency property.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.DocumentLoaded">
      <summary>
        <para>Occurs after a document is loaded into the <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.DocumentLoadedEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.DocumentLoaded">DiagramControl.DocumentLoaded</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.DocumentSource">
      <summary>
        <para>Specifies a document supplier for the <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/>. This is a dependency property.</para>
      </summary>
      <value>An object that contains data for the DiagramControl.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.DocumentSourceProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DocumentSource">DiagramControl.DocumentSource</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.DrawingContextProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DrawingContext">DiagramControl.DrawingContext</see> dependency property.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.EllipseTool">
      <summary>
        <para>Specifies the tool that is used when the end-user selects the Ellipse tool in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTool"/> object that represents the ellipse tool.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.EllipseToolProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.EllipseTool">DiagramControl.EllipseTool</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.EnableProportionalResizing">
      <summary>
        <para>Gets or sets whether to maintain the aspect ratio when resizing diagram items. This is a dependency property.</para>
      </summary>
      <value>true to maintain the aspect ratio when resizing diagram items; otherwise, false. By default, true.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.EnableProportionalResizingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.EnableProportionalResizing">DiagramControl.EnableProportionalResizing</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.EndInit">
      <summary>
        <para>Ends the runtime initialization.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ExceptionMessage">
      <summary>
        <para>Allows you to handle exceptions that may raise during various actions on the Diagram Control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ExceptionMessageEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ExceptionMessage">DiagramControl.ExceptionMessage</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportDiagram(DevExpress.Diagram.Core.DiagramExportFormat)">
      <summary>
        <para>Invokes the Export dialog window.</para>
      </summary>
      <param name="exportFormat">A DevExpress.Diagram.Core.DiagramExportFormat enumeration value that is the file format which is selected in the dialog window by default.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportDiagram(System.IO.Stream,DevExpress.Diagram.Core.DiagramExportFormat,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>
        <para>Exports the diagram to the specified stream.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream"/> object to which the created file should be sent.</param>
      <param name="exportFormat">A DevExpress.Diagram.Core.DiagramExportFormat enumeration value.</param>
      <param name="dpi">A double value which represents the resolution (in dpi). The minimum supported value is 1.</param>
      <param name="scale">A double value that specifies the scale factor. Values from 0.1 to 30 are supported.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportDiagram(System.IO.Stream,DevExpress.Diagram.Core.DiagramExportFormat,System.Windows.Rect,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>
        <para>Exports the diagram to the specified stream.</para>
      </summary>
      <param name="stream">A System.IO.Stream object to which the created file should be sent.</param>
      <param name="exportFormat">A DevExpress.Diagram.Core.DiagramExportFormat enumeration value.</param>
      <param name="exportBounds">A System.Windows.Rect object specifying the rectangle which encompasses the total background area when exporting the diagram.</param>
      <param name="dpi">A double value which represents the resolution (in dpi). The minimum supported value is 1.</param>
      <param name="scale">A double value that specifies the scale factor. Values from 0.1 to 30 are supported.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportDiagram(System.String,System.Double,System.Double)">
      <summary>
        <para>Exports the diagram in the specified format to a file.</para>
      </summary>
      <param name="path">A string value that is the path to the file to which to save the diagram.</param>
      <param name="exportDPI">A double value which represents the resolution (in dpi). The minimum supported value is 1.</param>
      <param name="exportScale">A double value that specifies the scale factor. Values from 0.1 to 30 are supported.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportDiagram(System.String,System.Windows.Rect,System.Double,System.Double)">
      <summary>
        <para>Exports the diagram in the specified format to a file.</para>
      </summary>
      <param name="path">A string value that is the path to the file to which to save the diagram.</param>
      <param name="exportBounds">A System.Windows.Rect object specifying the rectangle which encompasses the total background area when exporting the diagram.</param>
      <param name="exportDPI">A double value which represents the resolution (in dpi). The minimum supported value is 1.</param>
      <param name="exportScale">A double value that specifies the scale factor. Values from 0.1 to 30 are supported.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportDiagram(System.String)">
      <summary>
        <para>Exports the diagram to a file.</para>
      </summary>
      <param name="path">A string value that is the path to the file to which to save the diagram.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ExportDPI">
      <summary>
        <para>Specifies the resolution in which the diagram is exported. This is a dependency property.</para>
      </summary>
      <value>A double value which represents the resolution (in dpi). The minimum supported value is 1. The default value is 96</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ExportDPIProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ExportDPI">DiagramControl.ExportDPI</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ExportMargin">
      <summary>
        <para>Gets or sets the margin between diagram contents and page bounds when exporting the diagram. This is a dependency property.</para>
      </summary>
      <value>A System.Windows.Thickness value that represents the margin between diagram contents and page bounds. The default value is 0,0,0,0</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ExportMarginProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ExportMargin">DiagramControl.ExportMargin</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ExportScale">
      <summary>
        <para>Specifies the scale factor to apply to the diagram that is being exported.</para>
      </summary>
      <value>A double value that represents the scale factor. Values from 0.1 to 30 are supported. The default value is 1</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ExportScaleProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ExportScale">DiagramControl.ExportScale</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportToImage(DevExpress.Diagram.Core.DiagramImageExportFormat,System.Nullable{System.Windows.Rect},System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>
        <para>Invokes the Export dialog window.</para>
      </summary>
      <param name="exportFormat">A DevExpress.Diagram.Core.DiagramImageExportFormat enumeration value that specifies the image format.</param>
      <param name="exportBounds">A System.Windows.Rect object specifying the rectangle which encompasses the total background area when exporting the diagram.</param>
      <param name="dpi">A double value which represents the resolution (in dpi). The minimum supported value is 1.</param>
      <param name="scale">A double value that specifies the scale factor. Values from 0.1 to 30 are supported.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportToImage(System.IO.Stream,DevExpress.Diagram.Core.DiagramImageExportFormat,System.Nullable{System.Windows.Rect},System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>
        <para>Exports the diagram to the specified stream in an image format.</para>
      </summary>
      <param name="stream">A System.IO.Stream object to which the created image file should be sent.</param>
      <param name="exportFormat">A DevExpress.Diagram.Core.DiagramImageExportFormat enumeration value that specifies the image format.</param>
      <param name="exportBounds">A System.Windows.Rect object specifying the rectangle which encompasses the total background area when exporting the diagram.</param>
      <param name="dpi">A double value which represents the resolution (in dpi). The minimum supported value is 1.</param>
      <param name="scale">A double value that specifies the scale factor. Values from 0.1 to 30 are supported.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportToImage(System.String,System.Nullable{System.Windows.Rect},System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>
        <para>Exports the diagram to the specified file.</para>
      </summary>
      <param name="path">A string value that is the path to the file to which to save the diagram.</param>
      <param name="exportBounds">A System.Windows.Rect object specifying the rectangle which encompasses the total background area when exporting the diagram.</param>
      <param name="dpi">A double value which represents the resolution (in dpi). The minimum supported value is 1.</param>
      <param name="scale">A double value that specifies the scale factor. Values from 0.1 to 30 are supported.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportToPdf(DevExpress.XtraPrinting.PdfExportOptions,System.Boolean)">
      <summary>
        <para>Exports the diagram to a single-page PDF file specified by the user in the invoked dialog window.</para>
      </summary>
      <param name="options">The options that define how a document is exported.</param>
      <param name="showOptionsDialog">true, to show the dialog window that allows the user to configure export options; otherwise, false. By default, false.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportToPdf(System.IO.Stream,System.Nullable{System.Windows.Rect},DevExpress.XtraPrinting.PdfExportOptions)">
      <summary>
        <para>Exports the diagram to a single-page PDF document which is sent to the specified stream.</para>
      </summary>
      <param name="stream">A System.IO.Stream object to which the created PDF file should be sent.</param>
      <param name="exportBounds">A System.Windows.Rect object specifying the rectangle which encompasses the total background area when exporting the diagram.</param>
      <param name="options">The options that define how a document is exported.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportToPdf(System.String,System.Nullable{System.Windows.Rect},DevExpress.XtraPrinting.PdfExportOptions)">
      <summary>
        <para>Exports the diagram to a single-page PDF file.</para>
      </summary>
      <param name="path">A string value that is the path to the file to which to save the diagram.</param>
      <param name="exportBounds">A System.Windows.Rect object specifying the rectangle which encompasses the total background area when exporting the diagram.</param>
      <param name="options">The options that define how a document is exported.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportToPdf(System.Windows.Rect,DevExpress.XtraPrinting.PdfExportOptions,System.Boolean)">
      <summary>
        <para>Exports the diagram to a single-page PDF file specified by the user in the invoked dialog window.</para>
      </summary>
      <param name="exportBounds">A System.Windows.Rect object specifying the rectangle which encompasses the total background area when exporting the diagram.</param>
      <param name="options">The options that define how a document is exported.</param>
      <param name="showOptionsDialog">true, to show the dialog window that allows the user to configure export options; otherwise, false. By default, false.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportToSvg(System.IO.Stream,System.Nullable{System.Windows.Rect},System.Nullable{System.Double})">
      <summary>
        <para>Exports the diagram in the SVG format to the specified stream.</para>
      </summary>
      <param name="stream">A System.IO.Stream object to which the created SVG file should be sent.</param>
      <param name="exportBounds">A System.Windows.Rect object specifying the rectangle which encompasses the total background area when exporting the diagram.</param>
      <param name="scale">A double value that specifies the scale factor. Values from 0.1 to 30 are supported.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportToSvg(System.Nullable{System.Windows.Rect},System.Nullable{System.Double})">
      <summary>
        <para>Invokes the Export dialog window.</para>
      </summary>
      <param name="exportBounds">A System.Windows.Rect object specifying the rectangle which encompasses the total background area when exporting the diagram.</param>
      <param name="scale">A double value that specifies the scale factor. Values from 0.1 to 30 are supported.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportToSvg(System.String,System.Nullable{System.Windows.Rect},System.Nullable{System.Double})">
      <summary>
        <para>Exports the diagram in the SVG format to a file.</para>
      </summary>
      <param name="path">A string value that is the path to the file to which to save the diagram.</param>
      <param name="exportBounds">A System.Windows.Rect object specifying the rectangle which encompasses the total background area when exporting the diagram.</param>
      <param name="scale">A double value that specifies the scale factor. Values from 0.1 to 30 are supported.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.FileDialogFilter">
      <summary>
        <para>Gets or sets the filter string that determines which files are displayed in the ‘Open File’ and ‘Save File As’ dialog boxes. This is a dependency property.</para>
      </summary>
      <value>A filter string that determines which files are displayed in the file dialog box.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.FileDialogFilterProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.FileDialogFilter">DiagramControl.FileDialogFilter</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.FitToDrawing">
      <summary>
        <para>Changes the page size to fit the diagram contents.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.FitToDrawingMargin">
      <summary>
        <para>Gets or sets the margin between diagram contents and page bounds when calling the <see cref="M:DevExpress.Xpf.Diagram.DiagramControl.FitToDrawing">DiagramControl.FitToDrawing</see> and <see cref="M:DevExpress.Xpf.Diagram.DiagramControl.FitToItems(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">DiagramControl.FitToItems</see> methods. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Thickness"/> value that represents the margin between diagram contents and page bounds.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.FitToDrawingMarginProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.FitToDrawingMargin">DiagramControl.FitToDrawingMargin</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.FitToItems(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Scrolls the diagram and changes its zoom factor so that the viewport is sufficiently large to display the specified items.</para>
      </summary>
      <param name="items">The diagram items to fit within the viewport.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.FitToPage">
      <summary>
        <para>Sets the diagram zoom factor value to fit all pages with content within the viewport.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.FitToWidth">
      <summary>
        <para>Sets the diagram zoom factor value to fit the entire diagram width.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.GetDiagram(System.Windows.DependencyObject)">
      <summary>
        <para>Gets the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram">DiagramControl.Diagram</see> attached property from a given object.</para>
      </summary>
      <param name="d">An object whose <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram">DiagramControl.Diagram</see> property’s value is to be returned.</param>
      <returns>A <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> value that specifies the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram">DiagramControl.Diagram</see> attached property for the specified object.</returns>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.GetDrawingContext(System.Windows.DependencyObject)">
      <summary>
        <para>Gets the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DrawingContext">DiagramControl.DrawingContext</see> attached property from a given object.</para>
      </summary>
      <param name="obj">An object whose <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DrawingContext">DiagramControl.DrawingContext</see> property’s value is to be returned.</param>
      <returns>A <see cref="T:DevExpress.Xpf.Diagram.DiagramDrawingContext"/> value that specifies the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DrawingContext">DiagramControl.DrawingContext</see> attached property for the specified object.</returns>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.GetViewportBounds">
      <summary>
        <para>Returns the bounds of the currently visible area.</para>
      </summary>
      <returns>A System.Windows.Rect object that represents the viewport bounds in diagram coordinates.</returns>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.GlueToConnectionPointDistance">
      <summary>
        <para>Specifies the distance between the mouse pointer and a connection point at which the connector is glued to the point. This is a dependency property.</para>
      </summary>
      <value>A System.Double value that is the distance in pixels between the mouse pointer and a connection point at which the connector is glued to the point.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.GlueToConnectionPointDistanceProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.GlueToConnectionPointDistance">DiagramControl.GlueToConnectionPointDistance</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.GlueToItemDistance">
      <summary>
        <para>Specifies the distance between the mouse pointer and a diagram item at which the connector is glued to the item. This is a dependency property.</para>
      </summary>
      <value>A System.Double value that is the distance in pixels between the mouse pointer and a diagram item at which the connector is glued to the item.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.GlueToItemDistanceProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.GlueToItemDistance">DiagramControl.GlueToItemDistance</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.GridSize">
      <summary>
        <para>Gets or sets the size of a grid’s cell. This is a dependency property.</para>
      </summary>
      <value>The size of a grid’s cell.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.GridSizeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.GridSize">DiagramControl.GridSize</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.HasChanges">
      <summary>
        <para>Gets whether the current document has been changed using DiagramControl’s UI. This is a dependency property.</para>
      </summary>
      <value>true, if the document has unsaved changes; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.HasChangesProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.HasChanges">DiagramControl.HasChanges</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.HexagonTool">
      <summary>
        <para>Specifies the tool that is used when the end-user selects the Hexagon tool in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTool"/> object that represents the hexagon tool.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.HexagonToolProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.HexagonTool">DiagramControl.HexagonTool</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.InsertImage">
      <summary>
        <para>Invokes the Insert Picture dialog that allows the end-user to add an <see href="https://docs.devexpress.com/WPF/117211/controls-and-libraries/diagram-control/diagram-items/images">image item</see> to the diagram.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.IsContainerToolsVisible">
      <summary>
        <para>Gets whether the Container Tools <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see> category is currently displayed. This is a dependency property.</para>
      </summary>
      <value>true if the Container Tools ribbon category is displayed; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.IsContainerToolsVisibleProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.IsContainerToolsVisible">DiagramControl.IsContainerToolsVisible</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.IsImageToolsVisible">
      <summary>
        <para>Gets whether the Image Tools <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see> category is currently displayed. This is a dependency property.</para>
      </summary>
      <value>true if the Image Tools ribbon category is displayed; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.IsImageToolsVisibleProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.IsImageToolsVisible">DiagramControl.IsImageToolsVisible</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.IsReadOnly">
      <summary>
        <para>Specifies whether to enable all diagram protection properties. Setting specific properties to true overrides the IsReadOnly property value.</para>
      </summary>
      <value>true, to disable all protection options by default; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.IsReadOnlyProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.IsReadOnly">DiagramControl.IsReadOnly</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.IsTextEditMode">
      <summary>
        <para>Gets whether a diagram item’s text is currently being edited. This is a dependency property.</para>
      </summary>
      <value>true, if a diagram item’s text is currently being edited; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.IsTextEditModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.IsTextEditMode">DiagramControl.IsTextEditMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ItemBoundsChanged">
      <summary>
        <para>Fires each time an item’s bounds are changed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ItemBoundsChangedEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemBoundsChanged">DiagramControl.ItemBoundsChanged</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ItemContentChanged">
      <summary>
        <para>Fires each time the end-user changes the item’s text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ItemContentChangedEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemContentChanged">DiagramControl.ItemContentChanged</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ItemCreating">
      <summary>
        <para>Occurs before a diagram item is added to the canvas.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ItemCreatingEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemCreating">DiagramControl.ItemCreating</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ItemDrawing">
      <summary>
        <para>Fires repeatedly as the end-user is drawing a shape using a drawing tool (Rectangle, Ellipse, Right Triangle or Hexagon).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ItemDrawingEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemDrawing">DiagramControl.ItemDrawing</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ItemInitializing">
      <summary>
        <para>Fires each time an item is created via the DevExpress.Diagram.Core.ItemTool.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ItemInitializingEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemInitializing">DiagramControl.ItemInitializing</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Items">
      <summary>
        <para>Provides access to the collection of diagram items displayed by the <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/>.</para>
      </summary>
      <value>The collection of diagram items.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsChanged">
      <summary>
        <para>Fires each time an item is added or removed from the diagram.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ItemsChangedEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsChanged">DiagramControl.ItemsChanged</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsDeleting">
      <summary>
        <para>Fires each time diagram items have been removed from the canvas.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ItemsDeletingEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsDeleting">DiagramControl.ItemsDeleting</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsMoving">
      <summary>
        <para>Fires as the end-user is moving diagram items.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ItemsMovingEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsMoving">DiagramControl.ItemsMoving</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsPasting">
      <summary>
        <para>Fires as the end-user pastes the diagram items from the clipboard onto the canvas.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ItemsPastingEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsPasting">DiagramControl.ItemsPasting</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsResizing">
      <summary>
        <para>Fires when a diagram item is resized by the end-user or programmatically.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ItemsResizingEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsResizing">DiagramControl.ItemsResizing</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsRotating">
      <summary>
        <para>Fires when the end-user attempts to rotate a diagram item.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ItemsRotatingEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsRotating">DiagramControl.ItemsRotating</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ItemTypeRegistrator">
      <summary>
        <para>Provides access to methods used to create serializable custom diagram item types.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.DiagramItemTypeRegistrator"/> object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Landscape">
      <summary>
        <para>Specifies whether to use the longer dimension of the page size as the page width. This is a dependency property.</para>
      </summary>
      <value>true, to use the longer edge of the document size as the page width (landscape orientation); otherwise, false (portrait orientation).</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.LandscapeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Landscape">DiagramControl.Landscape</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.LastShapeStyles">
      <summary>
        <para>Provides access to the collection of the recently used shape styles. This is a dependency property.</para>
      </summary>
      <value>A read-only collection of the recently used shape styles.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.LastShapeStylesProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.LastShapeStyles">DiagramControl.LastShapeStyles</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.LineJumpPlacement">
      <summary>
        <para>Specifies which connector lines display jumps in intersections. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.LineJumpPlacement"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.LineJumpPlacementProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.LineJumpPlacement">DiagramControl.LineJumpPlacement</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.LineJumpSize">
      <summary>
        <para>Gets or sets the size of line jumps. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Size"/> value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.LineJumpSizeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.LineJumpSize">DiagramControl.LineJumpSize</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.LineJumpStyle">
      <summary>
        <para>Gets or sets the line jump style for connectors. This is a dependency property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.LineJumpDescription object.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.LineJumpStyleProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.LineJumpStyle">DiagramControl.LineJumpStyle</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.LoadDocument(System.IO.Stream)">
      <summary>
        <para>Loads a diagram document from a stream.</para>
      </summary>
      <param name="stream">The stream from which to load a diagram document.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.LoadDocument(System.String)">
      <summary>
        <para>Loads a diagram from the specified file.</para>
      </summary>
      <param name="fileName">A string specifying the path of the file containing a diagram.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.LoadImage">
      <summary>
        <para>Invokes the Insert Picture dialog that allows the end-user to  to change the selected <see href="https://docs.devexpress.com/WPF/117211/controls-and-libraries/diagram-control/diagram-items/images">image item</see>.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MaxZoomFactor">
      <summary>
        <para>Specifies the maximum diagram zoom factor.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that represents the maximum diagram zoom factor.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MaxZoomFactorProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.MaxZoomFactor">DiagramControl.MaxZoomFactor</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MeasureUnit">
      <summary>
        <para>Specifies the unit of measurement to use in UI. This is a dependency property.</para>
      </summary>
      <value>A unit of measure.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MeasureUnitProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.MeasureUnit">DiagramControl.MeasureUnit</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutConnectorsRouting">
      <summary>
        <para>Gets or sets whether applying the <see href="https://docs.devexpress.com/WPF/116572/controls-and-libraries/diagram-control/automatic-layout">Mind-map tree layout</see> affects connector routing. This is a dependency property.</para>
      </summary>
      <value>A TreeConnectorsRouting enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutConnectorsRoutingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutConnectorsRouting">DiagramControl.MindMapTreeLayoutConnectorsRouting</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutHierarchyAlignment">
      <summary>
        <para>Specifies the mind-map tree layout vertical alignment relative to the layout direction axis. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutHierarchyAlignmentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutHierarchyAlignment">DiagramControl.MindMapTreeLayoutHierarchyAlignment</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutHierarchySpacing">
      <summary>
        <para>Specifies the distance between layers of hierarchy. This is a dependency property.</para>
      </summary>
      <value>A System.Double value that is the distance in pixels between layers of hierarchy.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutHierarchySpacingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutHierarchySpacing">DiagramControl.MindMapTreeLayoutHierarchySpacing</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutNodeAlignment">
      <summary>
        <para>Specifies the mind-map tree layout horizontal alignment relative to the layout direction axis. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutNodeAlignmentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutNodeAlignment">DiagramControl.MindMapTreeLayoutNodeAlignment</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutNodeSpacing">
      <summary>
        <para>Specifies the distance between shapes on the same level of hierarchy. This is a dependency property.</para>
      </summary>
      <value>A System.Double value that is the distance in pixels between shapes on the same level of hierarchy.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutNodeSpacingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutNodeSpacing">DiagramControl.MindMapTreeLayoutNodeSpacing</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutOrientation">
      <summary>
        <para>Specifies the mind-map tree orientation. This is a dependency property.</para>
      </summary>
      <value>A System.Windows.Controls.Orientation enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutOrientationProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutOrientation">DiagramControl.MindMapTreeLayoutOrientation</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutRootSpacing">
      <summary>
        <para>Specifies the distance between the root shape and its immediate children. This is a dependency property.</para>
      </summary>
      <value>A System.Double value that is the distance in pixels between the root shape and its immediate children.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutRootSpacingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutRootSpacing">DiagramControl.MindMapTreeLayoutRootSpacing</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutSplitMode">
      <summary>
        <para>Specifies which diagram items are realigned when performing automatic relayout. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutSplitModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutSplitMode">DiagramControl.MindMapTreeLayoutSplitMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutSubTreeAlignment">
      <summary>
        <para>Gets or sets the alignment of the <see href="https://docs.devexpress.com/WPF/116572/controls-and-libraries/diagram-control/automatic-layout">mind-map</see>‘s subtrees. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutSubTreeAlignmentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutSubTreeAlignment">DiagramControl.MindMapTreeLayoutSubTreeAlignment</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutSubTreeDefaultSplitMode">
      <summary>
        <para>Specifies the criteria for arranging the mind map branches. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Layout.SubTreeDefaultSplitMode"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutSubTreeDefaultSplitModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutSubTreeDefaultSplitMode">DiagramControl.MindMapTreeLayoutSubTreeDefaultSplitMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutSubTreeSelector">
      <summary>
        <para>Gets or sets the IMindMapSubTreeSelector object that allows you to customize the positioning of subtrees. This is a dependency property.</para>
      </summary>
      <value>An object implementing the DevExpress.Diagram.Core.Layout.IMindMapSubTreeSelector interface.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutSubTreeSelectorProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.MindMapTreeLayoutSubTreeSelector">DiagramControl.MindMapTreeLayoutSubTreeSelector</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MinDragDistance">
      <summary>
        <para>Specifies the number of pixels the cursor must move with the mouse down before dragging begins. This is a dependency property.</para>
      </summary>
      <value>A System.Double value that is the number of pixels the cursor must move with the mouse down before dragging begins.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MinDragDistanceProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.MinDragDistance">DiagramControl.MinDragDistance</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MinZoomFactor">
      <summary>
        <para>Specifies the minimum diagram zoom factor.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that represents the minimum diagram zoom factor.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MinZoomFactorProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.MinZoomFactor">DiagramControl.MinZoomFactor</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.NewDocument">
      <summary>
        <para>Discards the current document and creates a new one.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.NewFile">
      <summary>
        <para>Closes the current file and creates a new one.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.OnApplyTemplate">
      <summary>
        <para>Called after the template is completely generated and attached to the visual tree.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.OpenFile">
      <summary>
        <para>Displays the “Open File” dialog that allows an end-user to load an XML file containing a saved diagram.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutConnectorsRouting">
      <summary>
        <para>Gets or sets whether applying the <see href="https://docs.devexpress.com/WPF/116572/controls-and-libraries/diagram-control/automatic-layout">Org chart layout</see> affects connector routing. This is a dependency property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.Layout.TreeConnectorsRouting enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutConnectorsRoutingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutConnectorsRouting">DiagramControl.OrgChartLayoutConnectorsRouting</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutDirection">
      <summary>
        <para>Specifies the direction of the org chart layout’s tree section. This is a dependency property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.Layout.LayoutDirection enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutDirectionProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutDirection">DiagramControl.OrgChartLayoutDirection</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutHierarchySpacing">
      <summary>
        <para>Specifies the distance between layers of hierarchy. This is a dependency property.</para>
      </summary>
      <value>A System.Double value that is the distance in pixels between layers of hierarchy.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutHierarchySpacingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutHierarchySpacing">DiagramControl.OrgChartLayoutHierarchySpacing</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutIsCompact">
      <summary>
        <para>Specifies whether the automatic org chart layout arranges shapes minimizing the space between them. This is a dependency property.</para>
      </summary>
      <value>true, to enable the compact org chart layout; otherwise, false. By default, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutIsCompactProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutIsCompact"/> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutNodeSpacing">
      <summary>
        <para>Specifies the distance between shapes on the same level of hierarchy. This is a dependency property.</para>
      </summary>
      <value>A System.Double value that is the distance in pixels between shapes on the same level of hierarchy.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutNodeSpacingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutNodeSpacing">DiagramControl.OrgChartLayoutNodeSpacing</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutSplitMode">
      <summary>
        <para>Specifies which diagram items are rearranged by the org chart layout algorithm. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutSplitModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutSplitMode">DiagramControl.OrgChartLayoutSplitMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutTipOverDirection">
      <summary>
        <para>Specifies the direction of the org chart layout’s tip-over section. This is a dependency property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.Layout.TipOverDirection enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutTipOverDirectionProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutTipOverDirection">DiagramControl.OrgChartLayoutTipOverDirection</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutTipOverOffsetMode">
      <summary>
        <para>Specifies whether to offset child shapes from the center or the edge of the parent shape in the org chart layout’s tip-over section. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Layout.TipOverOffsetMode"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutTipOverOffsetModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutTipOverOffsetMode">DiagramControl.OrgChartLayoutTipOverOffsetMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutTreeAlignment">
      <summary>
        <para>Specifies the alignment of the org chart layout’s tree section. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutTreeAlignmentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutTreeAlignment">DiagramControl.OrgChartLayoutTreeAlignment</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutTreeLevelCount">
      <summary>
        <para>Specifies the number of levels of hierarchy in the org chart layout’s tree section. This is a dependency property.</para>
      </summary>
      <value>The number of hierarchy layers in the org chart layout’s tree section.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutTreeLevelCountProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.OrgChartLayoutTreeLevelCount">DiagramControl.OrgChartLayoutTreeLevelCount</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PageMargin">
      <summary>
        <para>Gets or sets the amount of space between the page’s borders and its contents. This is a dependency property.</para>
      </summary>
      <value>The amount of space in pixels between the page’s borders and its contents.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PageMarginProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.PageMargin">DiagramControl.PageMargin</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PageSize">
      <summary>
        <para>Gets or sets the initial diagram canvas size (the tile size). This is a dependency property.</para>
      </summary>
      <value>A System.Windows.Size object representing the tile size in pixels.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PageSizeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.PageSize">DiagramControl.PageSize</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PanTool">
      <summary>
        <para>Specifies the tool that is used when an end-user selects the Pan tool from the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTool"/> object that represents the pan tool.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PanToolProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.PanTool">DiagramControl.PanTool</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PaperKind">
      <summary>
        <para>Allows you to use one of the standard paper sizes as the page size. This is a dependency property.</para>
      </summary>
      <value>A System.Drawing.Printing.PaperKind enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PaperKindProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.PaperKind">DiagramControl.PaperKind</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.Paste">
      <summary>
        <para>Inserts the diagram items from the clipboard onto the <see href="https://docs.devexpress.com/WPF/116505/controls-and-libraries/diagram-control/diagram-designer-control/canvas">Canvas</see>.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PdfExportOptions">
      <summary>
        <para>Gets or sets the options that define how a document is exported to PDF format.</para>
      </summary>
      <value>A DevExpress.XtraPrinting.PdfExportOptions object that stores the settings.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PdfExportOptionsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.PdfExportOptions">DiagramControl.PdfExportOptions</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PlatformCache">
      <summary>
        <para>This property supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PointerTool">
      <summary>
        <para>Specifies the tool that is used when the end-user selects the Pointer tool in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTool"/> object that represents the pointer tool.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PointerToolDragMode">
      <summary>
        <para>Gets or sets whether dragging the pointer tool pans the canvas or draws a selection rectangle. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.PointerToolDragMode"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PointerToolDragModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.PointerToolDragMode">DiagramControl.PointerToolDragMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PointerToolProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.PointerTool">DiagramControl.PointerTool</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.PointToControl(System.Windows.Point)">
      <summary>
        <para>Converts the coordinates of a point on the canvas to the control-relative coordinates.</para>
      </summary>
      <param name="documentPoint">A <see cref="T:System.Windows.Point"/> object that represents a point on the canvas.</param>
      <returns>A <see cref="T:System.Windows.Point"/> object that represents the control-relative coordinates.</returns>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.PointToDocument(System.Windows.Point)">
      <summary>
        <para>Converts the control-relative coordinates to the coordinates of a point on the canvas.</para>
      </summary>
      <param name="controlPoint">A <see cref="T:System.Windows.Point"/> object that represents the control-relative coordinates.</param>
      <returns>A <see cref="T:System.Windows.Point"/> object that represents a point on the canvas.</returns>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PrimarySelection">
      <summary>
        <para>Gets the object that is currently the primary selected diagram item.</para>
        <para>This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PrimarySelectionProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.PrimarySelection">DiagramControl.PrimarySelection</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.Print">
      <summary>
        <para>Invokes the Print dialog window.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.Print(System.Double)">
      <summary>
        <para>Invokes the Print dialog window.</para>
      </summary>
      <param name="scale">A System.Double value specifying the scale factor.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.Print(System.Int32,System.Windows.Controls.Orientation)">
      <summary>
        <para>Invokes the Print dialog window.</para>
      </summary>
      <param name="pageCount">An integer value that specifies the number of pages to which to fit the diagram.</param>
      <param name="fitOrientation">A System.Windows.Controls.Orientation enumeration value.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PrintExportMode">
      <summary>
        <para>Specifies whether to preserve the diagram content placement relative to the document boundaries when printing or exporting the diagram. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.PrintExportMode">DevExpress.Diagram.Core.PrintExportMode</see> enumeration value. The default is <see cref="F:DevExpress.Diagram.Core.PrintExportMode.Page">PrintExportMode.Page</see></value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PrintExportModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.PrintExportMode">DiagramControl.PrintExportMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PrintInMargins">
      <summary>
        <para>Specifies whether to print content in the page margins. This is a dependency property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.PrintInMargins enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PrintInMarginsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.PrintInMargins"/> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PrintPageBackgroundTemplate">
      <summary>
        <para>Gets or sets the template that specifies the background of a printed page. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.DataTemplate"/> object that specifies the background of a printed page.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PrintPageBackgroundTemplateProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.PrintPageBackgroundTemplate">DiagramControl.PrintPageBackgroundTemplate</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PrintPageBackgroundTemplateSelector">
      <summary>
        <para>Gets or sets an object that chooses a printed page background template based on custom logic. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Controls.DataTemplateSelector"/> descendant that applies a template based on custom logic.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PrintPageBackgroundTemplateSelectorProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.PrintPageBackgroundTemplateSelector">DiagramControl.PrintPageBackgroundTemplateSelector</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.PrintToPdf(DevExpress.XtraPrinting.PdfExportOptions,System.Nullable{System.Windows.Size},System.Nullable{System.Windows.Thickness},System.Boolean)">
      <summary>
        <para>Exports the diagram to a multi-page PDF file specified by the user in the invoked dialog window.</para>
      </summary>
      <param name="options">The options that define how a document is exported.</param>
      <param name="pageSize">A System.Windows.Size object specifying the PDF page size.</param>
      <param name="pageMargin">A System.Windows.Thickness object specifying the PDF page margins.</param>
      <param name="showOptionsDialog">true, to show the dialog window that allows the user to configure export options; otherwise, false. By default, true.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.PrintToPdf(System.Double,DevExpress.XtraPrinting.PdfExportOptions,System.Nullable{System.Windows.Size},System.Nullable{System.Windows.Thickness},System.Boolean)">
      <summary>
        <para>Exports the diagram to a multi-page PDF file specified by the user in the invoked dialog window.</para>
      </summary>
      <param name="scale">A System.Double value specifying the scale factor.</param>
      <param name="options">The options that define how a document is exported.</param>
      <param name="pageSize">A System.Windows.Size object specifying the PDF page size.</param>
      <param name="pageMargin">A System.Windows.Thickness object specifying the PDF page margins.</param>
      <param name="showOptionsDialog">true, to invoke the dialog window which allows the user to change export options; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.PrintToPdf(System.Int32,DevExpress.Diagram.Core.OrientationKind,DevExpress.XtraPrinting.PdfExportOptions,System.Nullable{System.Windows.Size},System.Nullable{System.Windows.Thickness},System.Boolean)">
      <summary>
        <para>Exports the diagram to a multi-page PDF file specified by the user in the invoked dialog window.</para>
      </summary>
      <param name="pagesCount">An integer value that specifies the number of pages to which to fit the diagram.</param>
      <param name="fitOrientation">A System.Windows.Controls.Orientation enumeration value.</param>
      <param name="options">The options that define how a document is exported.</param>
      <param name="pageSize">A System.Windows.Size object specifying the PDF page size.</param>
      <param name="pageMargin">A System.Windows.Thickness object specifying the PDF page margins.</param>
      <param name="showOptionsDialog">true, to invoke the dialog window which allows the user to change export options; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.PrintToPdf(System.IO.Stream,System.Double,System.Nullable{System.Windows.Rect},DevExpress.XtraPrinting.PdfExportOptions,System.Nullable{System.Windows.Size},System.Nullable{System.Windows.Thickness})">
      <summary>
        <para>Exports the diagram to a multi-page PDF document which is sent to the specified stream.</para>
      </summary>
      <param name="stream">A System.IO.Stream object to which the created PDF document should be sent.</param>
      <param name="scale">A System.Double value specifying the scale factor.</param>
      <param name="printBounds">A System.Windows.Rect value that specifies the print bounds.</param>
      <param name="options">The options that define how a document is exported.</param>
      <param name="pageSize">A System.Windows.Size object specifying the PDF page size.</param>
      <param name="pageMargin">A System.Windows.Thickness object specifying the PDF page margins.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.PrintToPdf(System.IO.Stream,System.Int32,System.Windows.Controls.Orientation,System.Nullable{System.Windows.Rect},DevExpress.XtraPrinting.PdfExportOptions,System.Nullable{System.Windows.Size},System.Nullable{System.Windows.Thickness})">
      <summary>
        <para>Exports the diagram to a multi-page PDF document which is sent to the specified stream.</para>
      </summary>
      <param name="stream">A System.IO.Stream object to which the created PDF document should be sent.</param>
      <param name="pagesCount">An integer value that specifies the number of pages to which to fit the diagram.</param>
      <param name="fitOrientation">A System.Windows.Controls.Orientation enumeration value.</param>
      <param name="printBounds">A System.Windows.Rect value that specifies the print bounds.</param>
      <param name="options">The options that define how a document is exported.</param>
      <param name="pageSize">A System.Windows.Size object specifying the PDF page size.</param>
      <param name="pageMargin">A System.Windows.Thickness object specifying the PDF page margins.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.PrintToPdf(System.IO.Stream,System.Nullable{System.Windows.Rect},DevExpress.XtraPrinting.PdfExportOptions,System.Nullable{System.Windows.Size},System.Nullable{System.Windows.Thickness})">
      <summary>
        <para>Exports the diagram to a multi-page PDF document which is sent to the specified stream.</para>
      </summary>
      <param name="stream">A System.IO.Stream object to which the created PDF document should be sent.</param>
      <param name="printBounds">A System.Windows.Rect object specifying the rectangle which encompasses the total background area when printing the diagram.</param>
      <param name="options">The options that define how a document is exported.</param>
      <param name="pageSize">A System.Windows.Size object specifying the PDF page size.</param>
      <param name="pageMargin">A System.Windows.Thickness object specifying the PDF page margins.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PropertiesPanelVisibility">
      <summary>
        <para>Gets or sets the <see href="https://docs.devexpress.com/WPF/116506/controls-and-libraries/diagram-control/diagram-designer-control/properties-panel">Properties Panel</see> display mode. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.PropertiesPanelVisibility"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PropertiesPanelVisibilityProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.PropertiesPanelVisibility">DiagramControl.PropertiesPanelVisibility</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.QueryConnectionPoints">
      <summary>
        <para>Fires each time the end-user moves the cursor with the active Connector Tool near shapes or their connection points.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.QueryConnectionPointsEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.QueryConnectionPoints">DiagramControl.QueryConnectionPoints</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.QueryItemDrawAction">
      <summary>
        <para>Fires repeatedly as the end-user hovers over the diagram canvas while a drawing tool (Rectangle, Ellipse, Right Triangle or Hexagon) is selected.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.QueryItemDrawActionEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.QueryItemDrawAction">DiagramControl.QueryItemDrawAction</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.QueryItemEditAction">
      <summary>
        <para>Fires each time the end-user attempts to initiate text editing to edit the text within a diagram item.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.QueryItemEditActionEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.QueryItemEditAction">DiagramControl.QueryItemEditAction</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.QueryItemsAction">
      <summary>
        <para>Fires each time the DiagramControl queries whether an action can be performed on specific diagram items.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.QueryItemsActionEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.QueryItemsAction">DiagramControl.QueryItemsAction</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.QueryItemSnapping">
      <summary>
        <para>Fires repeatedly as the end-user triggers snapping while dragging or resizing a diagram shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.QueryItemSnappingEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.QueryItemSnapping">DiagramControl.QueryItemSnapping</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.QuickPrint">
      <summary>
        <para>Prints the current diagram to the default printer.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.QuickPrint(System.Double)">
      <summary>
        <para>Prints the current diagram to the default printer.</para>
      </summary>
      <param name="scale">A System.Double value specifying the scale factor.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.QuickPrint(System.Int32,System.Windows.Controls.Orientation)">
      <summary>
        <para>Prints the current diagram to the default printer.</para>
      </summary>
      <param name="pageCount">An integer value that specifies the number of pages to which to fit the diagram.</param>
      <param name="fitOrientation">A System.Windows.Controls.Orientation enumeration value.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.RectangleTool">
      <summary>
        <para>Specifies the tool that is used when the end-user selects the Rectangle tool in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTool"/> object that represents the rectangle tool.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.RectangleToolProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.RectangleTool">DiagramControl.RectangleTool</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.RegisterRoutingStrategy(DevExpress.Diagram.Core.ConnectorType,DevExpress.Diagram.Core.Routing.DiagramRoutingStrategy)">
      <summary>
        <para>Registers a custom routing strategy for the specified connector type.</para>
      </summary>
      <param name="connectorType">A connector type to which to apply the routing strategy.</param>
      <param name="routingStrategy">A DevExpress.Diagram.Core.Routing.DiagramRoutingStrategy descendant that defines the custom routing strategy.</param>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.RelayoutItemsCompleted">
      <summary>
        <para>Occurs immediately after an <see href="https://docs.devexpress.com/WPF/116572/controls-and-libraries/diagram-control/automatic-layout">Automatic Layout</see> algorithm is completed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.RelayoutItemsCompletedEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.RelayoutItemsCompleted">DiagramControl.RelayoutItemsCompleted</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ResetSelectedImages">
      <summary>
        <para>Rolls the selected images back to their original state, reverting all resizing and rotation transformations.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ResizingMode">
      <summary>
        <para>Gets or sets how diagram items are resized. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.ResizingMode"/> enumeration value that specifies how diagram items are resized.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ResizingModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ResizingMode">DiagramControl.ResizingMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.RightTriangleTool">
      <summary>
        <para>Specifies the tool that is used when the end-user selects the Right Triangle tool in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTool"/> object that represents the triangle tool.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.RightTriangleToolProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.RightTriangleTool">DiagramControl.RightTriangleTool</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.RootToolsModel">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.RootToolsModelProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.RootToolsModel">DiagramControl.RootToolsModel</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.RunDiagramDesignerInDesignTime">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SaveDocument(System.IO.Stream)">
      <summary>
        <para>Saves the current diagram document to a stream.</para>
      </summary>
      <param name="stream">A stream to which to save the diagram document.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SaveDocument(System.String)">
      <summary>
        <para>Saves the current diagram to the specified file.</para>
      </summary>
      <param name="fileName">A string specifying the path of the file to which to save the diagram.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SaveFile">
      <summary>
        <para>Saves the diagram to a file.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SaveFileAs">
      <summary>
        <para>Invokes the Save File As dialog window that allows the end-user to select the name and destination of the file to which to save the current diagram.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ScrollMargin">
      <summary>
        <para>Gets or sets the size of the page’s outer indents that are displayed when you scroll the canvas to the edge. This is a dependency property.</para>
      </summary>
      <value>The size of the page’s outer indents that are displayed when you scroll the canvas to the edge.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ScrollMarginProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ScrollMargin">DiagramControl.ScrollMargin</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ScrollMode">
      <summary>
        <para>Specifies the current scroll mode. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.DiagramScrollMode"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ScrollModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ScrollMode">DiagramControl.ScrollMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ScrollToPoint(System.Windows.Point,System.Nullable{System.Windows.HorizontalAlignment},System.Nullable{System.Windows.VerticalAlignment})">
      <summary>
        <para>Scrolls the diagram to the specified point.</para>
      </summary>
      <param name="diagramPoint">A System.Windows.Point object that represents the point to which to scroll the document.</param>
      <param name="horizontalAlignment">A System.Windows.HorizontalAlignment enumeration value that specifies how to align the point relative to the viewport. By default, Center.</param>
      <param name="verticalAlignment">A System.Windows.VerticalAlignment enumeration value that specifies how to align the point relative to the viewport. By default, Center.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SelectAll">
      <summary>
        <para>Selects all shapes and connectors within the current document.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SelectedItems">
      <summary>
        <para>Provides access to the collection of the currently selected diagram items.</para>
      </summary>
      <value>A read-only collection of the currently selected diagram items.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SelectedStencils">
      <summary>
        <para>Specifies the selected shape groups. This is a dependency property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.StencilCollection object.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SelectedStencilsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.SelectedStencils">DiagramControl.SelectedStencils</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.SelectionChanged">
      <summary>
        <para>Fires when the selection changes (new items are selected, or currently selected items are deselected).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SelectionChangedEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.SelectionChanged">DiagramControl.SelectionChanged</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SelectionMode">
      <summary>
        <para>Specifies the selection mode for diagram items. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.SelectionMode">DevExpress.Diagram.Core.SelectionMode</see> enumeration value. The default is SelectionMode.Extended.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SelectionModel">
      <summary>
        <para>Gets an object that represents the currently selected diagram item.</para>
      </summary>
      <value>A SelectionModel object.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SelectionModelProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.SelectionModel">DiagramControl.SelectionModel</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SelectionModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.SelectionMode">DiagramControl.SelectionMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SelectionToolsModel">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SelectionToolsModelProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.SelectionToolsModel">DiagramControl.SelectionToolsModel</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SelectItem(DevExpress.Xpf.Diagram.DiagramItem,DevExpress.Diagram.Core.ModifySelectionMode)">
      <summary>
        <para>Selects the specified diagram item.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object that is the item to select.</param>
      <param name="modifySelectionMode">A <see cref="T:DevExpress.Diagram.Core.ModifySelectionMode"/> enumeration value that specifies whether to add or replace the existing selection with the specified diagram item.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SelectItems(DevExpress.Xpf.Diagram.DiagramItem[])">
      <summary>
        <para>Selects the specified diagram items.</para>
      </summary>
      <param name="items">A list of <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> objects representing the diagram items to select.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SelectItems(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem},DevExpress.Diagram.Core.ModifySelectionMode)">
      <summary>
        <para>Selects the specified diagram items.</para>
      </summary>
      <param name="items">An array of <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> objects representing the diagram items to select.</param>
      <param name="modifySelectionMode">A <see cref="T:DevExpress.Diagram.Core.ModifySelectionMode"/> enumeration value that specifies whether to add or replace the existing selection with the specified diagram items.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SelectPartiallyCoveredItems">
      <summary>
        <para>Specifies whether to select items that are only partially covered with the selection rectangle. This is a dependency property.</para>
      </summary>
      <value>true, to select items that are only partially covered with the selection rectangle; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SelectPartiallyCoveredItemsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.SelectPartiallyCoveredItems">DiagramControl.SelectPartiallyCoveredItems</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SendItemsBackward(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Sends the specified diagram items back one step in the stack.</para>
      </summary>
      <param name="items">The diagram items to be sent back one step in the stack.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SendItemsToBack(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Sends the specified diagram items to the back of the stack.</para>
      </summary>
      <param name="items">The diagram items to be sent to the back of the stack.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SendSelectedItemsBackward">
      <summary>
        <para>Sends the selected diagram items back one step in the stack.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SendSelectedItemsToBack">
      <summary>
        <para>Sends the specified diagram items to the back of the stack.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SetDiagram(System.Windows.DependencyObject,DevExpress.Xpf.Diagram.DiagramControl)">
      <summary>
        <para>Sets the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram">DiagramControl.Diagram</see> attached property for a given object.</para>
      </summary>
      <param name="obj">An object for which the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram">DiagramControl.Diagram</see> attached property is set.</param>
      <param name="value">A <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> value that specifies the value to be assigned to the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram">DiagramControl.Diagram</see> property.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SetDrawingContext(System.Windows.DependencyObject,DevExpress.Xpf.Diagram.DiagramDrawingContext)">
      <summary>
        <para>Sets the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DrawingContext">DiagramControl.DrawingContext</see> attached property for the specified object.</para>
      </summary>
      <param name="obj">An object for which the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DrawingContext">DiagramControl.DrawingContext</see> attached property is set.</param>
      <param name="value">A <see cref="T:DevExpress.Xpf.Diagram.DiagramDrawingContext"/> enumeration value that specifies the value to be assigned to the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DrawingContext">DiagramControl.DrawingContext</see> property.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SetSelectedImagesScale(System.Double)">
      <summary>
        <para>Sets the specified zoom factor for selected image items.</para>
      </summary>
      <param name="scale">A System.Double value that is the zoom factor to apply to selected image items.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SetSelectedImagesStretchMode(DevExpress.Diagram.Core.StretchMode)">
      <summary>
        <para>Sets the specified stretch mode for selected image items.</para>
      </summary>
      <param name="mode">A <see cref="T:DevExpress.Diagram.Core.StretchMode"/> enumeration value.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Shortcuts">
      <summary>
        <para>Provides access to shortcuts used by the <see cref="T:DevExpress.Xpf.Diagram.DiagramDesignerControl">DiagramDesignerControl</see>.</para>
      </summary>
      <value>A collection of <see cref="T:System.Windows.Input.KeyGesture"/> objects that represent shortcuts used by the Diagram Designer.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ShowEditor">
      <summary>
        <para>Invokes the text editor for the primary selected diagram shape.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ShowGrid">
      <summary>
        <para>Specifies whether to display grid lines on the <see href="https://docs.devexpress.com/WPF/116505/controls-and-libraries/diagram-control/diagram-designer-control/canvas">Canvas</see>. This is a dependency property.</para>
      </summary>
      <value>true to display grid lines on the canvas; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowGridProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ShowGrid">DiagramControl.ShowGrid</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingEditor">
      <summary>
        <para>Enables you to prevent an end-user from activating the editors of individual diagram items.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowingEditorEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingEditor">DiagramControl.ShowingEditor</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowingExportDialogEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingExportDialog"/> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingOpenDialog">
      <summary>
        <para>Fires before showing an ‘Open File’ dialog, and allows it to be customized.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowingOpenDialogEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingOpenDialog">DiagramControl.ShowingOpenDialog</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingOpenImageDialog">
      <summary>
        <para>Fires before showing an ‘Insert Picture’ dialog, and allows it to be customized.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowingOpenImageDialogEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingOpenImageDialog">DiagramControl.ShowingOpenImageDialog</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingSaveDialog">
      <summary>
        <para>Fires before showing a ‘Save File As’ dialog, and allows it to be customized.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowingSaveDialogEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingSaveDialog">DiagramControl.ShowingSaveDialog</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ShowMeasureUnit">
      <summary>
        <para>Specifies whether to display the unit of measurement in the <see href="https://docs.devexpress.com/WPF/116506/controls-and-libraries/diagram-control/diagram-designer-control/properties-panel">Properties Panel</see>, <see href="https://docs.devexpress.com/WPF/116297/controls-and-libraries/diagram-control/diagram-designer-control/page-setup-dialog-window">Page Setup Window</see>, and <see href="https://docs.devexpress.com/WPF/116508/controls-and-libraries/diagram-control/diagram-designer-control/bottom-panel">Bottom Panel</see>. This is a dependency property.</para>
      </summary>
      <value>true, to display the unit of measurement in UI; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowMeasureUnitProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ShowMeasureUnit"/> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ShowPageBreaks">
      <summary>
        <para>Gets or sets whether to display page breaks. This is a dependency property.</para>
      </summary>
      <value>true, to display page breaks; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowPageBreaksProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ShowPageBreaks">DiagramControl.ShowPageBreaks</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ShowPanAndZoomPanel">
      <summary>
        <para>Specifies whether to show the <see href="https://docs.devexpress.com/WPF/400326/controls-and-libraries/diagram-control/diagram-designer-control/pan-and-zoom-panel">Pan and Zoom Panel</see>. This is a dependency property.</para>
      </summary>
      <value>true, to show the Pan and Zoom panel; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowPanAndZoomPanelProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ShowPanAndZoomPanel">DiagramControl.ShowPanAndZoomPanel</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ShowPrintPreview">
      <summary>
        <para>Invokes the <see href="https://docs.devexpress.com/WPF/117065/controls-and-libraries/diagram-control/diagram-designer-control/print-preview">Print Preview</see>.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ShowQuickShapes">
      <summary>
        <para>Gets or sets whether to show the Quick Shapes category in the <see href="https://docs.devexpress.com/WPF/116504/controls-and-libraries/diagram-control/diagram-designer-control/shapes-panel">Shapes Panel</see>. This is a dependency property.</para>
      </summary>
      <value>true to show the Quick Shapes category in the toolbox; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowQuickShapesProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ShowQuickShapes">DiagramControl.ShowQuickShapes</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ShowRulers">
      <summary>
        <para>Specifies whether to display rulers on the <see href="https://docs.devexpress.com/WPF/116505/controls-and-libraries/diagram-control/diagram-designer-control/canvas">Canvas</see>. This is a dependency property.</para>
      </summary>
      <value>true if rulers are displayed on the canvas; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowRulersProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ShowRulers">DiagramControl.ShowRulers</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ShowSelectionRectangle">
      <summary>
        <para>Gets or sets whether to show the selection rectangle. This is a dependency property. Obsolete: use the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.PointerToolDragMode"/> property instead.</para>
      </summary>
      <value>true to show the selection rectangle; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowSelectionRectangleProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ShowSelectionRectangle">DiagramControl.ShowSelectionRectangle</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SnapToGrid">
      <summary>
        <para>Specifies whether to pull shapes to the grid lines whenever an end-user drags them around the <see href="https://docs.devexpress.com/WPF/116505/controls-and-libraries/diagram-control/diagram-designer-control/canvas">Canvas</see>. This is a dependency property.</para>
      </summary>
      <value>true, to snap shapes to the grid lines; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SnapToGridProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.SnapToGrid">DiagramControl.SnapToGrid</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SnapToItems">
      <summary>
        <para>Specifies whether to pull shapes to other shapes whenever an end-user drags them around the <see href="https://docs.devexpress.com/WPF/116505/controls-and-libraries/diagram-control/diagram-designer-control/canvas">Canvas</see>. This is a dependency property.</para>
      </summary>
      <value>true to snap shapes to other shapes; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SnapToItemsDistance">
      <summary>
        <para>Specifies the minimum distance between alignment guides of a shape being dragged and another shape’s alignment guides at which the “snap-to-items” feature is activated. If the dragged shape is dropped at this position, it will be aligned with the second shape. This is a dependency property.</para>
      </summary>
      <value>The snap distance in pixels.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SnapToItemsDistanceProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.SnapToItemsDistance">DiagramControl.SnapToItemsDistance</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SnapToItemsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.SnapToItems">DiagramControl.SnapToItems</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Stencils">
      <summary>
        <para>Provides access to the collection of available stencils.</para>
        <para>This is a dependency property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.DiagramStencilCollection object that is the collection of available stencils.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.StencilsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Stencils">DiagramControl.Stencils</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesHidden">
      <summary>
        <para>Occurs after the subordinates of a diagram shape are hidden.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesHiddenEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesHidden">DiagramControl.SubordinatesHidden</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesHiding">
      <summary>
        <para>Occurs before a <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/>‘s subordinates are hidden.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesHidingEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesHiding">DiagramControl.SubordinatesHiding</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesShowing">
      <summary>
        <para>Occurs before a <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/>‘s subordinates are shown.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesShowingEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesShowing">DiagramControl.SubordinatesShowing</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesShown">
      <summary>
        <para>Occurs after a <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/>‘s subordinates are shown.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesShownEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesShown">DiagramControl.SubordinatesShown</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutColumnsAlignment">
      <summary>
        <para>Gets or sets the alignment of the diagram depending on its direction. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value that specifies the diagram alignment.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutColumnsAlignmentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutColumnsAlignment">DiagramControl.SugiyamaLayoutColumnsAlignment</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutColumnSpacing">
      <summary>
        <para>Specifies the distance between shapes on the same level of hierarchy. This is a dependency property.</para>
      </summary>
      <value>A System.Double value that is the distance in pixels between shapes on the same level of hierarchy.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutColumnSpacingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutColumnSpacing">DiagramControl.SugiyamaLayoutColumnSpacing</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutConnectorsRouting">
      <summary>
        <para>Gets or sets whether applying the <see href="https://docs.devexpress.com/WPF/116572/controls-and-libraries/diagram-control/automatic-layout">Sugiyama layout</see> affects connector routing. This is a dependency property.</para>
      </summary>
      <value>A SugiyamaConnectorsRouting enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutConnectorsRoutingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutConnectorsRouting">DiagramControl.SugiyamaLayoutConnectorsRouting</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutDirection">
      <summary>
        <para>Specifies the flow direction for the automatic layout.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Layout.LayoutDirection"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutDirectionProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutDirection">DiagramControl.SugiyamaLayoutDirection</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutLayersAlignment">
      <summary>
        <para>Gets or sets the alignment of the diagram depending on its direction. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value that specifies the diagram alignment.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutLayersAlignmentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutLayersAlignment">DiagramControl.SugiyamaLayoutLayersAlignment</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutLayerSpacing">
      <summary>
        <para>Specifies the distance between layers of hierarchy. This is a dependency property.</para>
      </summary>
      <value>A System.Double value that is the distance in pixels between shapes on the same level of hierarchy.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutLayerSpacingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutLayerSpacing">DiagramControl.SugiyamaLayoutLayerSpacing</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TextTool">
      <summary>
        <para>Specifies the tool that is used when the user selects the Text tool in the <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">Ribbon</see>. This is a dependency property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.DiagramTool object that represents the text tool.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TextToolProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.TextTool"/> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Theme">
      <summary>
        <para>Specifies the current theme. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTheme"/> object.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ThemeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Theme">DiagramControl.Theme</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutConnectorsRouting">
      <summary>
        <para>Gets or sets whether applying the <see href="https://docs.devexpress.com/WPF/116572/controls-and-libraries/diagram-control/automatic-layout">Tip-over tree layout</see> affects connector routing. This is a dependency property.</para>
      </summary>
      <value>A TreeConnectorsRouting enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutConnectorsRoutingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutConnectorsRouting">DiagramControl.TipOverTreeLayoutConnectorsRouting</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutDirection">
      <summary>
        <para>Specifies the tip-over layout direction. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Layout.TipOverDirection"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutDirectionProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutDirection">DiagramControl.TipOverTreeLayoutDirection</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutHorizontalAlignment">
      <summary>
        <para>Gets or sets the horizontal alignment of the <see href="https://docs.devexpress.com/WPF/116572/controls-and-libraries/diagram-control/automatic-layout">tip-over</see> diagram. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value that specifies the horizontal alignment of the diagram.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutHorizontalAlignmentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutHorizontalAlignment">DiagramControl.TipOverTreeLayoutHorizontalAlignment</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutOffset">
      <summary>
        <para>Gets or sets the offset used by the <see href="https://docs.devexpress.com/WPF/116572/controls-and-libraries/diagram-control/automatic-layout">tip-over layout</see>. This is a dependency property.</para>
      </summary>
      <value>A System.Double value that is the offset in pixels.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutOffsetMode">
      <summary>
        <para>Specifies whether to offset child shapes from the center or the edge of the parent shape. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Layout.TipOverOffsetMode"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutOffsetModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutOffsetMode">DiagramControl.TipOverTreeLayoutOffsetMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutOffsetProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutOffset">DiagramControl.TipOverTreeLayoutOffset</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutSplitMode">
      <summary>
        <para>Specifies which diagram items are realigned when performing automatic relayout. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutSplitModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutSplitMode">DiagramControl.TipOverTreeLayoutSplitMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutVerticalAlignment">
      <summary>
        <para>Gets or sets the vertical alignment of the <see href="https://docs.devexpress.com/WPF/116572/controls-and-libraries/diagram-control/automatic-layout">tip-over</see> diagram. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value that specifies the vertical alignment of the diagram.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutVerticalAlignmentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutVerticalAlignment">DiagramControl.TipOverTreeLayoutVerticalAlignment</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutVerticalSpacing">
      <summary>
        <para>Specifies the distance between layers of hierarchy. This is a dependency property.</para>
      </summary>
      <value>A System.Double value that is the distance in pixels between layers of hierarchy.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutVerticalSpacingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutVerticalSpacing">DiagramControl.TipOverTreeLayoutVerticalSpacing</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Title">
      <summary>
        <para>The document title to which the window title can be bound. This is a dependency property.</para>
      </summary>
      <value>A string object that represents the document title.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TitleProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Title">DiagramControl.Title</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ToggleSubordinatesVisibility(DevExpress.Xpf.Diagram.DiagramItem)">
      <summary>
        <para>Shows or hides the subordinates of the selected diagram item.</para>
      </summary>
      <param name="item">A DevExpress.Xpf.Diagram.DiagramItem object that is the item for which to show or hide the subordinates.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ToolboxVisibility">
      <summary>
        <para>Gets or sets the <see href="https://docs.devexpress.com/WPF/116504/controls-and-libraries/diagram-control/diagram-designer-control/shapes-panel">Shapes Panel</see> display mode. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.ToolboxVisibility"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ToolboxVisibilityProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ToolboxVisibility">DiagramControl.ToolboxVisibility</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutAlignment">
      <summary>
        <para>Specifies the tree layout alignment. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutAlignmentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutAlignment">DiagramControl.TreeLayoutAlignment</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutBreadthAlignment">
      <summary>
        <para>Gets or sets the tree diagram horizontal alignment relative to the layout direction axis. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value that specifies the horizontal alignment of the tree diagram.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutBreadthAlignmentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutBreadthAlignment">DiagramControl.TreeLayoutBreadthAlignment</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutConnectorsRouting">
      <summary>
        <para>Gets or sets whether applying the <see href="https://docs.devexpress.com/WPF/116572/controls-and-libraries/diagram-control/automatic-layout">Tree layout</see> affects connector routing. This is a dependency property.</para>
      </summary>
      <value>A TreeConnectorsRouting enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutConnectorsRoutingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutConnectorsRouting">DiagramControl.TreeLayoutConnectorsRouting</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutDepthAlignment">
      <summary>
        <para>Gets or sets the tree diagram vertical alignment relative to the layout direction axis. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value that specifies the vertical alignment of the tree diagram.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutDepthAlignmentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutDepthAlignment">DiagramControl.TreeLayoutDepthAlignment</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutDirection">
      <summary>
        <para>Gets or sets the layout direction. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Layout.LayoutDirection"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutDirectionProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutDirection">DiagramControl.TreeLayoutDirection</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutHorizontalSpacing">
      <summary>
        <para>Specifies the distance between shapes on the same level of hierarchy. This is a dependency property.</para>
      </summary>
      <value>A System.Double value that is the distance in pixels between shapes on the same level of hierarchy.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutHorizontalSpacingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutHorizontalSpacing">DiagramControl.TreeLayoutHorizontalSpacing</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutIsCompact">
      <summary>
        <para>Specifies whether the automatic tree layout arranges shapes minimizing the space between them.</para>
        <para>This is a dependency property.</para>
      </summary>
      <value>true, to enable the compact tree layout; otherwise, false. By default, true.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutIsCompactProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutIsCompact">DiagramControl.TreeLayoutIsCompact</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutSplitMode">
      <summary>
        <para>Specifies which diagram items are realigned when performing automatic relayout. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutSplitModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutSplitMode">DiagramControl.TreeLayoutSplitMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutVerticalSpacing">
      <summary>
        <para>Specifies the distance between layers of hierarchy. This is a dependency property.</para>
      </summary>
      <value>A System.Double value that is the distance in pixels between layers of hierarchy.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutVerticalSpacingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutVerticalSpacing">DiagramControl.TreeLayoutVerticalSpacing</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.UndoManager">
      <summary>
        <para>Provides access to an object that manages the undo and redo operations in the <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/>.</para>
      </summary>
      <value>A DevExpress.Utils.UndoManager object.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.UnregisterRoutingStrategy(DevExpress.Diagram.Core.ConnectorType)">
      <summary>
        <para>Removes the custom routing strategy applied to the specified connector type.</para>
      </summary>
      <param name="connectorType">A connector type for which to reset the routing strategy.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.UnselectItem(DevExpress.Xpf.Diagram.DiagramItem)">
      <summary>
        <para>Unselects the specified diagram item.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> to unselect.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.UpdateConnectorsRoute(System.Collections.Generic.IEnumerable{DevExpress.Xpf.Diagram.DiagramConnector})">
      <summary>
        <para>Recalculates the route for the specified diagram connectors.</para>
      </summary>
      <param name="connectors">A list of connectors whose routes should be recalculated.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ZoomFactor">
      <summary>
        <para>Specifies the diagram zoom factor. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value specifying the document zoom factor.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ZoomFactorChanged">
      <summary>
        <para>Raises each time the current diagram zoom factor is changed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ZoomFactorChangedEvent">
      <summary>
        <para>Identifies the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ZoomFactorChanged">DiagramControl.ZoomFactorChanged</see> routed event.</para>
      </summary>
      <value>A routed event identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ZoomFactorProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.ZoomFactor">DiagramControl.ZoomFactor</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ZoomIn">
      <summary>
        <para>Increases the document zoom factor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ZoomOut">
      <summary>
        <para>Decreases the document zoom factor.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramCustomCursorEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.CustomCursor">DiagramControl.CustomCursor</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramCustomCursorEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,System.Windows.Point,DevExpress.Xpf.Diagram.DiagramHitInfo,System.Windows.Input.Cursor)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramCustomCursorEventArgs"/> class.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="diagramPoint">A <see cref="T:System.Windows.Point"/> value that is the mouse pointer position.</param>
      <param name="hitInfo">A DiagramHitInfo object containing information about the object located under the mouse poiner.</param>
      <param name="cursor">The <see cref="T:System.Windows.Input.Cursor"/> object.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomCursorEventArgs.Cursor">
      <summary>
        <para>Gets or sets a custom cursor.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Input.Cursor"/> object that is the custom cursor.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomCursorEventArgs.DiagramPoint">
      <summary>
        <para>Gets the mouse pointer position within the diagram control.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Point"/> value that is the current mouse pointer position.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomCursorEventArgs.HitInfo">
      <summary>
        <para>Gets the information about an object located at the current mouse pointer position.</para>
      </summary>
      <value>A DiagramHitInfo descendant that contains information about an object located at the current mouse pointer position.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramCustomGetEditableItemPropertiesCacheKeyEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.CustomGetEditableItemPropertiesCacheKey"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramCustomGetEditableItemPropertiesCacheKeyEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramItem,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramCustomGetEditableItemPropertiesCacheKeyEventArgs"/> class with specified settings.</para>
      </summary>
      <param name="item">A DevExpress.Xpf.Diagram.DiagramItem object that is the edited diagram item.</param>
      <param name="cacheKey">An object that is the cache key associated with the edited item.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomGetEditableItemPropertiesCacheKeyEventArgs.CacheKey">
      <summary>
        <para>Gets or sets the cache key assigned to the edited diagram item.</para>
      </summary>
      <value>An object that is the cache key associated with the edited item.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomGetEditableItemPropertiesCacheKeyEventArgs.Item">
      <summary>
        <para>Returns the edited diagram item.</para>
      </summary>
      <value>A DevExpress.Xpf.Diagram.DiagramItem object.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramCustomGetEditableItemPropertiesEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.CustomGetEditableItemProperties">DiagramControl.CustomGetEditableItemProperties</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramCustomGetEditableItemPropertiesEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramItem,System.ComponentModel.PropertyDescriptorCollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramCustomGetEditableItemPropertiesEventArgs"/> class.</para>
      </summary>
      <param name="item">A DevExpress.Xpf.Diagram.DiagramItem descendant that is the diagram item selected by the user.</param>
      <param name="properties">A collection of <see cref="T:System.ComponentModel.PropertyDescriptor">PropertyDescriptor</see> objects that represent item properties the user can edit in the <see href="https://docs.devexpress.com/WPF/116506/controls-and-libraries/diagram-control/diagram-designer-control/properties-panel">Properties panel</see>.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramCustomGetEditableItemPropertiesEventArgs.CreateProxyProperty(System.ComponentModel.PropertyDescriptor,System.Func{DevExpress.Diagram.Core.IDiagramItem,System.Object},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>
        <para>Allows you to create a custom property descriptor.</para>
      </summary>
      <param name="additionalAttributes">A collection of property attributes.</param>
      <returns>The property descriptor that can be added to the Properties collection.</returns>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramCustomGetEditableItemPropertiesEventArgs.CreateProxyProperty``1(System.String,System.Func{DevExpress.Diagram.Core.IDiagramItem,``0},System.Action{DevExpress.Diagram.Core.IDiagramItem,``0},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>
        <para>Allows you to create a custom property descriptor.</para>
      </summary>
      <param name="name">A string value that is the property’s name.</param>
      <param name="getter">A System.Func object specifying the function of the property getter.</param>
      <param name="setter">A System.Func object specifying the function of the property setter.</param>
      <param name="attributes">A collection of property attributes.</param>
      <returns>The property descriptor that can be added to the Properties collection.</returns>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomGetEditableItemPropertiesEventArgs.Item">
      <summary>
        <para>Returns the diagram item selected by the user.</para>
      </summary>
      <value>A DevExpress.Xpf.Diagram.DiagramItem descendant.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomGetEditableItemPropertiesEventArgs.Properties">
      <summary>
        <para>Provides access to the collection of item properties the user can edit in the <see href="https://docs.devexpress.com/WPF/116506/controls-and-libraries/diagram-control/diagram-designer-control/properties-panel">Properties panel</see>.</para>
      </summary>
      <value>A collection of <see cref="T:System.ComponentModel.PropertyDescriptor">PropertyDescriptor</see> objects.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramCustomGetSerializableItemPropertiesEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.CustomGetSerializableItemProperties"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramCustomGetSerializableItemPropertiesEventArgs.#ctor(System.Type,System.ComponentModel.PropertyDescriptorCollection,DevExpress.Diagram.Core.Native.SerializationKind)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramCustomGetSerializableItemPropertiesEventArgs"/> class with specified settings.</para>
      </summary>
      <param name="itemType">A System.Type object that indicates the serialized item type.</param>
      <param name="properties">The collection of <see cref="T:System.ComponentModel.PropertyDescriptor">PropertyDescriptor</see> objects that represent serializable properties.</param>
      <param name="serializationKind">A DevExpress.Diagram.Core.Native.SerializationKind enumeration value that indicates the context of serialization.</param>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramCustomGetSerializableItemPropertiesEventArgs.CreateProxyProperty(System.ComponentModel.PropertyDescriptor,System.Func{DevExpress.Diagram.Core.IDiagramItem,System.Object},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>
        <para>Allows you to create a custom property descriptor.</para>
      </summary>
      <param name="additionalAttributes">A collection of property attributes.</param>
      <returns>A property descriptor that can be added to the Properties collection.</returns>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramCustomGetSerializableItemPropertiesEventArgs.CreateProxyProperty``1(System.String,System.Func{DevExpress.Diagram.Core.IDiagramItem,``0},System.Action{DevExpress.Diagram.Core.IDiagramItem,``0},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>
        <para>Allows you to create a custom property descriptor.</para>
      </summary>
      <param name="name">A string value that is the property’s name.</param>
      <param name="getter">A System.Func object specifying the function of the property getter.</param>
      <param name="setter">A System.Func object specifying the function of the property setter.</param>
      <param name="attributes">A collection of property attributes.</param>
      <returns>A property descriptor that can be added to the Properties collection.</returns>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomGetSerializableItemPropertiesEventArgs.ItemType">
      <summary>
        <para>Returns the serialized item type.</para>
      </summary>
      <value>A System.Type object that indicates the serialized item type.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomGetSerializableItemPropertiesEventArgs.Properties">
      <summary>
        <para>Returns the collection of serializable properties.</para>
      </summary>
      <value>A collection of <see cref="T:System.ComponentModel.PropertyDescriptor">PropertyDescriptor</see> objects.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomGetSerializableItemPropertiesEventArgs.SerializationKind">
      <summary>
        <para>Indicates the context of serialization.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.Native.SerializationKind enumeration value.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramCustomItemDragEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.CustomItemDrag">CustomItemDrag</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramCustomItemDragEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,DevExpress.Xpf.Diagram.DiagramItem,System.Windows.Point,System.Collections.Generic.IList{DevExpress.Xpf.Diagram.DiagramItem},DevExpress.Diagram.Core.Native.LazyArg{System.Runtime.InteropServices.ComTypes.IDataObject},System.Windows.DragDropEffects)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramCustomItemDragEventArgs"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomItemDragEventArgs.Data">
      <summary>
        <para>Provides data about the diagram items the end-user is dragging.</para>
      </summary>
      <value>A System.Windows.Forms.IDataObject object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomItemDragEventArgs.Items">
      <summary>
        <para>Returns the list of items that are objects of the drag-and-drop operation.</para>
      </summary>
      <value>A list of <see cref="T:DevExpress.Xpf.Diagram.DiagramItem">DiagramItem</see> descendants.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomItemDragEventArgs.Result">
      <summary>
        <para>Returns the drag-and-drop operation result.</para>
      </summary>
      <value>A System.Windows.DragDropEffects enumeration value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomItemDragEventArgs.SourceItem">
      <summary>
        <para>Returns the item the end-user is dragging.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem">DiagramItem</see> descendant.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomItemDragEventArgs.SourceItemPoint">
      <summary>
        <para>Returns the point on the canvas where the end-user initiated the drag-and-drop operation.</para>
      </summary>
      <value>A point on the canvas where the end-user initiated the drag-and-drop operation.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramCustomItemDragResultEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.CustomItemDragResult"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramCustomItemDragResultEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,System.Collections.ObjectModel.ReadOnlyCollection{DevExpress.Xpf.Diagram.DiagramItem},System.Boolean,System.Windows.DragDropEffects)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramCustomItemDragResultEventArgs"/> class with specified settings.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="items">The list of items that are objects of the drag-and-drop operation.</param>
      <param name="canceled">true, if the drag-and-drop operation has been canceled; otherwise, false.</param>
      <param name="result">The drag-and-drop operation result.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomItemDragResultEventArgs.Canceled">
      <summary>
        <para>Indicates whether the drag-and-drop operation has been canceled.</para>
      </summary>
      <value>true, if the drag-and-drop operation has been canceled; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomItemDragResultEventArgs.Items">
      <summary>
        <para>Returns the list of items that are objects of the drag-and-drop operation.</para>
      </summary>
      <value>A list of <see cref="T:DevExpress.Xpf.Diagram.DiagramItem">DiagramItem</see> descendants.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomItemDragResultEventArgs.Result">
      <summary>
        <para>Returns the drag-and-drop operation result.</para>
      </summary>
      <value>A System.Windows.DragDropEffects enumeration value.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramCustomItemGiveFeedbackEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.CustomItemGiveFeedback"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramCustomItemGiveFeedbackEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,System.Collections.ObjectModel.ReadOnlyCollection{DevExpress.Xpf.Diagram.DiagramItem},System.Windows.DragDropEffects,DevExpress.Diagram.Core.DragDropCursor)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramCustomItemGiveFeedbackEventArgs"/> class with specified settings.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="items">The list of items that are objects of the drag-and-drop operation.</param>
      <param name="effects">The effects of the drag-and-drop operation.</param>
      <param name="cursor">The cursor type used during the drag-and-drop operation.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomItemGiveFeedbackEventArgs.Cursor">
      <summary>
        <para>Gets or sets the cursor type used during the drag-and-drop operation.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.DragDropCursor object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomItemGiveFeedbackEventArgs.Effects">
      <summary>
        <para>Gets a value that indicates the effects of the drag-and-drop operation.</para>
      </summary>
      <value>A System.Windows.DragDropEffects enumeration value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomItemGiveFeedbackEventArgs.Items">
      <summary>
        <para>Returns the list of items that are objects of the drag-and-drop operation.</para>
      </summary>
      <value>A list of <see cref="T:DevExpress.Xpf.Diagram.DiagramItem">DiagramItem</see> descendants.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramCustomItemQueryContinueDragEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.CustomItemQueryContinueDrag">CustomItemQueryContinueDrag</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramCustomItemQueryContinueDragEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,System.Collections.ObjectModel.ReadOnlyCollection{DevExpress.Xpf.Diagram.DiagramItem},System.Windows.DragDropKeyStates,System.Boolean,System.Windows.DragAction)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramCustomItemQueryContinueDragEventArgs"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomItemQueryContinueDragEventArgs.Action">
      <summary>
        <para>Gets or sets the status of the current drag-and-drop operation.</para>
      </summary>
      <value>A System.Windows.DragAction enumeration value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomItemQueryContinueDragEventArgs.IsCancellationRequested">
      <summary>
        <para>Indicates whether the drag operation cancellation is requested.</para>
      </summary>
      <value>true, if the drag operation cancellation is requested; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomItemQueryContinueDragEventArgs.Items">
      <summary>
        <para>Returns the list of the diagram items the user is dragging.</para>
      </summary>
      <value>A list of DevExpress.Xpf.Diagram.DiagramItem descendants.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramCustomItemQueryContinueDragEventArgs.KeyStates">
      <summary>
        <para>Gets the current state of the Shift, Ctrl, and Alt keys.</para>
      </summary>
      <value>A System.Windows.DragDropKeyStates enumeration value.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior">
      <summary>
        <para>Allows you to generate diagrams from a data source.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior"/> class with default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.ConnectorFromMember">
      <summary>
        <para>Specifies the name of the data field that identifies the item to use as the connector’s begin item. This is a dependency property.</para>
      </summary>
      <value>A string value that is the name of the data field that identifies the item to use as the connector’s begin item.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.ConnectorFromMemberProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.ConnectorFromMember">DiagramDataBindingBehavior.ConnectorFromMember</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.ConnectorKeyMemberProperty">
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.ConnectorsSource">
      <summary>
        <para>Gets or sets the data source for connectors. This is a dependency property.</para>
      </summary>
      <value>An IEnumerable object that provides data to the <see cref="T:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior"/>.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.ConnectorsSourceProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.ConnectorsSource">DiagramDataBindingBehavior.ConnectorsSource</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.ConnectorToMember">
      <summary>
        <para>Specifies the name of the data field that identifies the item to use as the connector’s end item. This is a dependency property.</para>
      </summary>
      <value>A string value that is the name of the data field that identifies the item to use as the connector’s end item.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.ConnectorToMemberProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.ConnectorToMember">DiagramDataBindingBehavior.ConnectorToMember</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.DiagramConnectorAdded">
      <summary>
        <para>Fires each time the data binding controller generates a connector.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.DiagramConnectorAdding">
      <summary>
        <para>Fires each time the user draws a new connector in a data-bound diagram.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.LayoutKind">
      <summary>
        <para>Specifies the <see href="https://docs.devexpress.com/WPF/116572/controls-and-libraries/diagram-control/automatic-layout">automatic layout</see> to be applied to the generated diagram. This is a dependency property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.DiagramLayoutKind enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.LayoutKindProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.LayoutKind">DiagramDataBindingBehavior.LayoutKind</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase">
      <summary>
        <para>Serves as a base for behaviors that are used to bind the Diagram Control to data.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.BeginInit">
      <summary>
        <para>Starts the <see cref="T:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase"/>‘s initialization. Initialization occurs at runtime.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.CanRefresh">
      <summary>
        <para>Gets whether the diagram can fetch data from the source collections. This is a dependency property.</para>
      </summary>
      <value>true, if the diagram can fetch data from the source collections; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.CanRefreshProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.CanRefresh">DiagramDataBindingBehaviorBase.CanRefresh</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ClearExistingItems">
      <summary>
        <para>Specifies whether to remove existing items before generating a diagram from the data source. This is a dependency property.</para>
      </summary>
      <value>true to remove existing items before generating a diagram from the data source; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ClearExistingItemsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ClearExistingItems">DiagramDataBindingBehaviorBase.ClearExistingItems</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ConnectorsZOrder">
      <summary>
        <para>Specifies whether the connectors overlap diagram items. This is a dependency property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.ConnectorsZOrder enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ConnectorsZOrderProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ConnectorsZOrder">DiagramDataBindingBehaviorBase.ConnectorsZOrder</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ConnectorTemplate">
      <summary>
        <para>Gets or sets a template that defines the presentation of connectors. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.DataTemplate"/> object that represents the template which defines the presentation of connectors.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ConnectorTemplateProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ConnectorTemplate">DiagramDataBindingBehaviorBase.ConnectorTemplate</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ConnectorTemplateSelector">
      <summary>
        <para>Gets or sets an object that chooses a connector template based on custom logic. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Controls.DataTemplateSelector"/> descendant that applies a template based on custom logic.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ConnectorTemplateSelectorProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ConnectorTemplateSelector">DiagramDataBindingBehaviorBase.ConnectorTemplateSelector</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.CustomLayoutItems">
      <summary>
        <para>Occurs before the generated items are added to the diagram.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.DiagramItemAdded">
      <summary>
        <para>Fires each time the data binding controller generates a diagram item.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.EnableNotificationToSource">
      <summary>
        <para>Gets or sets whether to send the data change notifications to the data source. This is a dependency property.</para>
      </summary>
      <value>true, to enable the data change notifications to the data source; otherwise, false. By default, true.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.EnableNotificationToSourceProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.EnableNotificationToSource">DiagramDataBindingBehaviorBase.EnableNotificationToSource</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.EndInit">
      <summary>
        <para>Ends the <see cref="T:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase"/>‘s initialization.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.GenerateConnector">
      <summary>
        <para>Fires before generating a connector from the data source and allows you to customize it.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.GenerateItem">
      <summary>
        <para>Fires before generating a diagram item representing a data object and allows you to customize it.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemContainerStyle">
      <summary>
        <para>Specifies the style that is applied to the container element generated for each item. This is a dependency property.</para>
      </summary>
      <value>A System.Windows.Style object.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemContainerStyleProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemContainerStyle">DiagramDataBindingBehaviorBase.ItemContainerStyle</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemsGenerated">
      <summary>
        <para>Occurs when diagram items are generated from the data source.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemsPath">
      <summary>
        <para>Specifies the name of the data field that identifies the collection of nested data items. This is a dependency property.</para>
      </summary>
      <value>A string value that is the name of the data field that identifies the collection of data items.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemsPathProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemsPath">DiagramDataBindingBehaviorBase.ItemsPath</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemsSelector">
      <summary>
        <para>Gets or sets the selector that returns the data field that identifies the collection of nested data items. This is a dependency property.</para>
      </summary>
      <value>An object implementing the DevExpress.Diagram.Core.IChildrenSelector interface.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemsSelectorProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemsSelector">DiagramDataBindingBehaviorBase.ItemsSelector</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemsSource">
      <summary>
        <para>Gets or sets the data source for items. This is a dependency property.</para>
      </summary>
      <value>An IEnumerable object that provides data to the <see cref="T:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase"/>.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemsSourceProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemsSource">DiagramDataBindingBehaviorBase.ItemsSource</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemTemplate">
      <summary>
        <para>Gets or sets a template that defines the presentation of diagram items representing data objects. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.DataTemplate"/> object that is the template which defines the presentation of diagram items representing data objects.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemTemplateProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemTemplate">DiagramDataBindingBehaviorBase.ItemTemplate</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemTemplateSelector">
      <summary>
        <para>Gets or sets an object that chooses a diagram item template based on custom logic. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Controls.DataTemplateSelector"/> descendant that applies a template based on custom logic.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemTemplateSelectorProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemTemplateSelector">DiagramDataBindingBehaviorBase.ItemTemplateSelector</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.KeyMember">
      <summary>
        <para>Specifies the name of the data field that identifies the data item. This is a dependency property.</para>
      </summary>
      <value>A System.String value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.KeyMemberProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.KeyMember">DiagramDataBindingBehaviorBase.KeyMember</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.KeySelector">
      <summary>
        <para>Gets or sets the selector that returns the data field that identifies the data item. This is a dependency property.</para>
      </summary>
      <value>An object implementing the DevExpress.Diagram.Core.IKeySelector interface.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.KeySelectorProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.KeySelector">DiagramDataBindingBehaviorBase.KeySelector</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.Refresh">
      <summary>
        <para>Fetches data from the source collections.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.RefreshCommand">
      <summary>
        <para>Gets the command that fetches data from the data source.</para>
      </summary>
      <value>An object implementing the System.Windows.Input.ICommand interface.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.TemplateDiagram">
      <summary>
        <para>Gets or sets the diagram whose settings are used to generate the diagram from the data source. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> object.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.TemplateDiagramProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.TemplateDiagram">DiagramDataBindingBehaviorBase.TemplateDiagram</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.UpdateConnector">
      <summary>
        <para>Occurs when a property of the data object represented by a diagram connector has changed its value.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.UpdateItem">
      <summary>
        <para>Occurs when a property of the data object represented by a diagram item has changed its value.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramDesignerControl">
      <summary>
        <para>The Diagram Designer control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramDesignerControl.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramDesignerControl"/> class with default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.Actions">
      <summary>
        <para>Provides access to the collection of actions provided by the diagram designer <see href="https://docs.devexpress.com/WPF/116507/controls-and-libraries/diagram-control/diagram-designer-control/ribbon">ribbon</see>.</para>
      </summary>
      <value>The collection of actions.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemNameProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName">DiagramDesignerControl.BarItemName</see> dependency property.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramDesignerControl.GetBarItemName(System.Windows.DependencyObject)">
      <summary>
        <para>Gets the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName">DiagramDesignerControl.BarItemName</see> attached property from a given object.</para>
      </summary>
      <param name="d">An object whose <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName">DiagramDesignerControl.BarItemName</see> property’s value is to be returned.</param>
      <returns>A string value that specifies the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName">DiagramDesignerControl.BarItemName</see> attached property for the specified object.</returns>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramDesignerControl.OnApplyTemplate">
      <summary>
        <para>Called after the template is completely generated and attached to the visual tree.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramDesignerControl.SetBarItemName(System.Windows.DependencyObject,System.String)">
      <summary>
        <para>Sets the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName">DiagramDesignerControl.BarItemName</see> attached property for a given object.</para>
      </summary>
      <param name="obj">An object for which the <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName">DiagramDesignerControl.BarItemName</see> attached property is set.</param>
      <param name="value">A string value that specifies the value to be assigned to the <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName">DiagramDesignerControl.BarItemName</see> property.</param>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramDrawingContext">
      <summary>
        <para>Lists values that specify the <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/>‘s drawing context.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDrawingContext.Canvas">
      <summary>
        <para>The diagram is rendered on the <see href="https://docs.devexpress.com/WPF/116505/controls-and-libraries/diagram-control/diagram-designer-control/canvas">canvas</see>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDrawingContext.ExportToImage">
      <summary>
        <para>The diagram is <see href="https://docs.devexpress.com/WPF/116644/controls-and-libraries/diagram-control/printing-and-exporting">exported</see>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramDrawingContext.Print">
      <summary>
        <para>The diagram is <see href="https://docs.devexpress.com/WPF/116644/controls-and-libraries/diagram-control/printing-and-exporting">printed</see>.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramImage">
      <summary>
        <para>Represents a diagram image item.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramImage.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramImage"/> class with default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramImage.AllowPlaceholder">
      <summary>
        <para>Gets or sets whether the current <see cref="T:DevExpress.Xpf.Diagram.DiagramImage"/> displays a placeholder when its <see cref="P:DevExpress.Xpf.Diagram.DiagramImage.Image">DiagramImage.Image</see> property is null. This is a dependency property.</para>
      </summary>
      <value>true, to display a placeholder; otherwise, false. The default is true.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramImage.AllowPlaceholderProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramImage.AllowPlaceholder">DiagramImage.AllowPlaceholder</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramImage.CanEdit">
      <summary>
        <para>This member is not supported by the <see cref="T:DevExpress.Xpf.Diagram.DiagramImage"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramImage.FitToImage">
      <summary>
        <para>Changes the size of the diagram image item so that it matches the size of the source image.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramImage.FlipMode">
      <summary>
        <para>Gets or sets the flip effect that is currently applied to the image. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.ImageFlipMode"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramImage.FlipModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramImage.FlipMode">DiagramImage.FlipMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramImage.Image">
      <summary>
        <para>Gets or sets the source of the image displayed by the image item. This is a dependency property.</para>
      </summary>
      <value>An image source.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramImage.ImageProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramImage.Image">DiagramImage.Image</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramImage.ImageTransform">
      <summary>
        <para>Gets or sets a graphics transformation that should apply to the diagram image item. This is a dependency property.</para>
      </summary>
      <value>A System.Windows.Media.Transform object.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramImage.ImageTransformProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramImage.ImageTransform">DiagramImage.ImageTransform</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramImage.OnApplyTemplate">
      <summary>
        <para>Called after the template is completely generated and attached to the visual tree.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramImage.PlaceholderGeometry">
      <summary>
        <para>Gets the object that identifies the geometry of the image placeholder. This is a dependency property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.ShapeGeometry object.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramImage.PlaceholderGeometryProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramImage.PlaceholderGeometry">DiagramImage.PlaceholderGeometry</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramImage.SourceImageSize">
      <summary>
        <para>Gets the size of the source image. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Size"/> instance that is the size of the source image.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramImage.SourceImageSizeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramImage.SourceImageSize">DiagramImage.SourceImageSize</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramImage.StretchMode">
      <summary>
        <para>Specifies whether to preserve the aspect ratio of the source image when resizing the diagram image item. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.StretchMode"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramImage.StretchModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramImage.StretchMode">DiagramImage.StretchMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramItem">
      <summary>
        <para>The base class for diagram items.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.ActualConnectionPoints">
      <summary>
        <para>Returns the list of connection point locations.</para>
      </summary>
      <value>A list of connection point locations.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.ActualConnectionPointsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.ActualConnectionPoints">DiagramItem.ActualConnectionPoints</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.ActualPadding">
      <summary>
        <para>Gets the actual padding for the diagram item. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Thickness"/> value that specifies the actual padding for the current item.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.ActualPaddingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.ActualPadding">DiagramItem.ActualPadding</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.AffectedByLayoutAlgorithms">
      <summary>
        <para>Specifies whether the item can be realigned by the <see href="https://docs.devexpress.com/WPF/116572/controls-and-libraries/diagram-control/automatic-layout">automatic layout algoritms</see>. This is a dependency property.</para>
      </summary>
      <value>true if the item can be realigned by the automatic layout algorithms; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.AffectedByLayoutAlgorithmsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.AffectedByLayoutAlgorithms">DiagramItem.AffectedByLayoutAlgorithms</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Anchors">
      <summary>
        <para>Gets or sets the sides of the root item (page) to which the current <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object is anchored. This is a dependency property.</para>
      </summary>
      <value>The sides of the root item (page) to which the diagram item is anchored.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.AnchorsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.Anchors">DiagramItem.Anchors</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Angle">
      <summary>
        <para>Specifies the angle by which the diagram item is rotated counterclockwise around its anchor point. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value specifying an angle in degrees.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.AngleProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.Angle">DiagramItem.Angle</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.AreSubordinatesVisible">
      <summary>
        <para>Gets whether the current item’s subordinates are visible. This is a dependency property.</para>
      </summary>
      <value>true, if current item’s subordinates are visible; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.AreSubordinatesVisibleProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.AreSubordinatesVisible">DiagramItem.AreSubordinatesVisible</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Background">
      <summary>
        <para>Gets or sets the brush used to paint the diagram item background.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Media.Brush"/> object, that specifies how the diagram item background is painted.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.BackgroundId">
      <summary>
        <para>Specifies the palette color to paint the item’s background. This is a dependency property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.DiagramThemeColorId enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.BackgroundIdProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.BackgroundId">DiagramItem.BackgroundId</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Bindings">
      <summary>
        <para>Gets a collection of current diagram item’s bindings. This is a dependency property.</para>
      </summary>
      <value>A DiagramBindingCollection object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanAttachConnectorBeginPoint">
      <summary>
        <para>Specifies whether end-users can attach a connector’s beginning point to the item. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to attach the begin point of a connector to the item; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanAttachConnectorBeginPointProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CanAttachConnectorBeginPoint">DiagramItem.CanAttachConnectorBeginPoint</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanAttachConnectorEndPoint">
      <summary>
        <para>Specifies whether end-users can attach the end point of a connector to the item. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to attach the end point of a connector to the item; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanAttachConnectorEndPointProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CanAttachConnectorEndPoint">DiagramItem.CanAttachConnectorEndPoint</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanChangeParent">
      <summary>
        <para>Specifies whether to allow end-users to place the item into another container.</para>
      </summary>
      <value>true to allow end-users to place the item into another container; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanChangeParentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CanChangeParent">DiagramItem.CanChangeParent</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanCopy">
      <summary>
        <para>Specifies whether the diagram item can be copied to clipboard by end-users. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to copy the diagram item to clipboard; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanCopyProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CanCopy">DiagramItem.CanCopy</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanCopyWithoutParent">
      <summary>
        <para>Specifies whether to allow end-users to copy the item placed in a container. This is a dependency property.</para>
      </summary>
      <value>true, to allow end-users to copy an item placed in a container; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanCopyWithoutParentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CanCopyWithoutParent">DiagramItem.CanCopyWithoutParent</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanDelete">
      <summary>
        <para>Specifies whether the diagram item can be removed by end-users. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to remove the diagram item; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanDeleteProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CanDelete">DiagramItem.CanDelete</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanDeleteWithoutParent">
      <summary>
        <para>Specifies whether to allow end-users to delete the item placed in a container. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to delete the item placed in a container; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanDeleteWithoutParentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CanDeleteWithoutParent">DiagramItem.CanDeleteWithoutParent</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanEdit">
      <summary>
        <para>Specifies whether to allow end-users to edit the text displayed by the item. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to edit the item’s text; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanEditProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CanEdit">DiagramItem.CanEdit</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanHideSubordinates">
      <summary>
        <para>Gets or sets whether to display the expand-collapse button below the diagram item that allows an end-user to show/hide the item’s subordinates. This is a dependency property.</para>
      </summary>
      <value>true, to allow hiding subordinates of the current item; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanHideSubordinatesProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CanHideSubordinates">DiagramItem.CanHideSubordinates</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanMove">
      <summary>
        <para>Specifies whether to allow end-users to move the item across the canvas. This is a dependency property.</para>
      </summary>
      <value>true, to allow end-users to move the item across the canvas; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanMoveProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CanMove">DiagramItem.CanMove</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanResize">
      <summary>
        <para>Specifies whether to allow end-users to resize the item. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to resize the item; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanResizeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CanResize">DiagramItem.CanResize</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanRotate">
      <summary>
        <para>Specifies whether to allow end-users to rotate the item. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to rotate the item; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanRotateProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CanRotate">DiagramItem.CanRotate</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanSelect">
      <summary>
        <para>Specifies whether to allow end-users to select the item. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to select the item; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanSelectProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CanSelect">DiagramItem.CanSelect</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanSnapToOtherItems">
      <summary>
        <para>Specifies whether the item can snap to other items. This is a dependency property.</para>
      </summary>
      <value>true, if the item can snap to other items; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanSnapToOtherItemsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CanSnapToOtherItems">DiagramItem.CanSnapToOtherItems</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanSnapToThisItem">
      <summary>
        <para>Specifies whether other items can snap to this item. This is a dependency property.</para>
      </summary>
      <value>true, if the item can snap to other items; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanSnapToThisItemProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CanSnapToThisItem">DiagramItem.CanSnapToThisItem</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonHorizontalAlignment">
      <summary>
        <para>Gets or sets the horizontal alignment of the collapse button.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.Alignment">DevExpress.Diagram.Core.Alignment</see> enumeration value that specifies the horizontal alignment of the collapse button.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonHorizontalAlignmentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonHorizontalAlignment">DiagramItem.CollapseButtonHorizontalAlignment</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonOffset">
      <summary>
        <para>Gets or sets the collapse button’s offset.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Point"/> object that is the collapse button’s offset.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonOffsetProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonOffset">DiagramItem.CollapseButtonOffset</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonPosition">
      <summary>
        <para>Gets or sets the position of the collapse button.</para>
      </summary>
      <value><see cref="T:System.Windows.Point"/> object that specifies the position of the collapse button. By default, 0.5,1</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonPositionProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonPosition">DiagramItem.CollapseButtonPosition</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonVerticalAlignment">
      <summary>
        <para>Gets or sets the vertical alignment of the collapse button.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value that specifies the vertical alignment of the collapse button.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonVerticalAlignmentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonVerticalAlignment">DiagramItem.CollapseButtonVerticalAlignment</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonVisibilityMode">
      <summary>
        <para>Gets or sets a value that indicates when the collapse button is displayed. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.CollapseButtonVisibilityMode"/> enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonVisibilityModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonVisibilityMode">DiagramItem.CollapseButtonVisibilityMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.ConnectionPoints">
      <summary>
        <para>Specifies the list of points on the perimeter of a shape at which connectors can terminate. This is a dependency property.</para>
      </summary>
      <value>A list of points on the perimeter of a shape at which connectors can terminate.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.ConnectionPointsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.ConnectionPoints">DiagramItem.ConnectionPoints</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.Controller">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CustomStyleId">
      <summary>
        <para>Specifies the key of a style to apply to the diagram item. This is a dependency property.</para>
      </summary>
      <value>The key of a style applied to the item.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CustomStyleIdProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.CustomStyleId">DiagramItem.CustomStyleId</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Foreground">
      <summary>
        <para>Gets or sets the brush used to paint the diagram item foreground.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Media.Brush"/> object, that specifies how the diagram item background is painted.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.ForegroundId">
      <summary>
        <para>Specifies the palette color to paint the item’s foreground. This is a dependency property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.DiagramThemeColorId enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.ForegroundIdProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.ForegroundId">DiagramItem.ForegroundId</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramItem.GetDiagram">
      <summary>
        <para>Gets the diagram control that is the owner of the diagram item.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> object that is the owner of the <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/>.</returns>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.IncomingConnectors">
      <summary>
        <para>Gets the collection of the current item’s incoming <see href="https://docs.devexpress.com/WPF/116648/controls-and-libraries/diagram-control/diagram-items/connectors">connectors</see>.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> objects.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.IsSelected">
      <summary>
        <para>Gets whether the diagram item is selected. This is a dependency property.</para>
      </summary>
      <value>true if the diagram item is selected; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.IsSelectedProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.IsSelected">DiagramItem.IsSelected</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.IsTextEditMode">
      <summary>
        <para>Gets whether the diagram item’s text is currently being edited.  This is a dependency property.</para>
      </summary>
      <value>true, if diagram item text editing is in progress; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.IsTextEditModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.IsTextEditMode">DiagramItem.IsTextEditMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.MoveWithSubordinates">
      <summary>
        <para>Gets or sets whether moving the current diagram item also moves its subordinates. This is a dependency property.</para>
      </summary>
      <value>true, to move the current item together with its subordinates; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.MoveWithSubordinatesProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.MoveWithSubordinates">DiagramItem.MoveWithSubordinates</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.OutgoingConnectors">
      <summary>
        <para>Gets the collection of the current item’s outgoing <see href="https://docs.devexpress.com/WPF/116648/controls-and-libraries/diagram-control/diagram-items/connectors">connectors</see>.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> objects.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.ParentItem">
      <summary>
        <para>Returns the current item’s parent item.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object that represents the current item’s parent item.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Position">
      <summary>
        <para>Gets or sets the coordinates of the item’s upper left corner. This is a dependency property.</para>
      </summary>
      <value>The coordinates of the item’s upper left corner.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.PositionProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.Position">DiagramItem.Position</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.RenderTransform">
      <summary>
        <para>Gets or sets an object that transforms the current diagram item.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Media.Transform"/> descendant.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.SelectionLayer">
      <summary>
        <para>This item supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.SelectionLayerProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.SelectionLayer">DiagramItem.SelectionLayer</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramItem.SetFontSize(System.Double,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Specifies the font size for the text within the diagram item.</para>
      </summary>
      <param name="value">The value.</param>
      <param name="unit">The unit of measure.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Stroke">
      <summary>
        <para>Gets or sets the brush used to paint the diagram item outline. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Media.Brush"/> object, that specifies how the diagram item outline is painted.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.StrokeDashArray">
      <summary>
        <para>Gets or sets a collection of System.Double values that indicate the pattern of dashes and gaps that is used to outline diagram items. This is a dependency property.</para>
      </summary>
      <value>A collection of System.Double values that specify the pattern of dashes and gaps.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.StrokeDashArrayProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.StrokeDashArray">DiagramItem.StrokeDashArray</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.StrokeId">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.StrokeIdProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.StrokeId">DiagramItem.StrokeId</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.StrokeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.Stroke">DiagramItem.Stroke</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.StrokeThickness">
      <summary>
        <para>Gets or sets the width of the diagram item outline. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that specifies the width, in pixels, of the diagram item outline.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.StrokeThicknessProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.StrokeThickness">DiagramItem.StrokeThickness</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.TemplateCondition">
      <summary>
        <para>Gets or sets a condition that is used to choose a template for the diagram item. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.TemplateConditionProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.TemplateCondition">DiagramItem.TemplateCondition</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.TemplateName">
      <summary>
        <para>Identifies the item as a template used by data binding behaviors. This is a dependency property.</para>
      </summary>
      <value>A string value that is the name of the template.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.TemplateNameProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.TemplateName">DiagramItem.TemplateName</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.TextAlignment">
      <summary>
        <para>Specifies the alignment of the text within the diagram item. This is a dependency property.</para>
      </summary>
      <value>A System.Windows.TextAlignment enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.TextAlignmentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.TextAlignment">DiagramItem.TextAlignment</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.TextDecorations">
      <summary>
        <para>Gets or sets a collection of decorations applied to the text within the diagram item. This is a dependency property.</para>
      </summary>
      <value>A System.Windows.TextDecorationCollection instance.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.TextDecorationsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.TextDecorations">DiagramItem.TextDecorations</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.ThemeStyleId">
      <summary>
        <para>Gets or sets the identifier of a style applied to the diagram item. This is a dependency property.</para>
      </summary>
      <value>The style identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.ThemeStyleIdProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.ThemeStyleId">DiagramItem.ThemeStyleId</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramItem.ToString">
      <summary>
        <para>Returns the textual representation of the <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/>.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value which is the textual representation of the <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/>.</returns>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Weight">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramItem.WeightProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramItem.Weight">DiagramItem.Weight</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramItemBoundsChangedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemBoundsChanged">DiagramControl.ItemBoundsChanged</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramItemBoundsChangedEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,DevExpress.Xpf.Diagram.DiagramItem,DevExpress.Xpf.Diagram.DiagramItem,System.Int32,System.Windows.Point,System.Windows.Size,System.Double,DevExpress.Xpf.Diagram.DiagramItem,System.Int32,System.Windows.Point,System.Windows.Size,System.Double)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramItemBoundsChangedEventArgs"/> class.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="item">A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object representing the diagram item.</param>
      <param name="oldParent">A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object representing the item’s previous parent.</param>
      <param name="oldIndex">The item’s previous index within the Items collection of its parent.</param>
      <param name="oldPosition">The previous coordinates of the item’s upper left corner.</param>
      <param name="oldSize">A System.Windows.Size object that is the previous size of the item.</param>
      <param name="oldAngle">The previous rotation angle (in degrees).</param>
      <param name="newParent">A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object representing the item’s new parent.</param>
      <param name="newIndex">The item’s new index within the Items collection of its parent.</param>
      <param name="newPosition">The new coordinates of the item’s upper left corner.</param>
      <param name="newSize">A System.Windows.Size object that is the new size of the item.</param>
      <param name="newAngle">The new rotation angle (in degrees).</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemBoundsChangedEventArgs.Item">
      <summary>
        <para>Returns the item whose bounds are changed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemBoundsChangedEventArgs.NewAngle">
      <summary>
        <para>Returns the new angle at which the item is rotated.</para>
      </summary>
      <value>The new angle (in degrees).</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemBoundsChangedEventArgs.NewIndex">
      <summary>
        <para>Gets the new item’s index within the Items collection of its parent.</para>
      </summary>
      <value>The item’s index.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemBoundsChangedEventArgs.NewParent">
      <summary>
        <para>Returns the item’s new parent.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemBoundsChangedEventArgs.NewPosition">
      <summary>
        <para>Returns the new coordinates of the item’s upper left corner.</para>
      </summary>
      <value>The coordinates of the item’s upper left corner.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemBoundsChangedEventArgs.NewSize">
      <summary>
        <para>Gets the new size of the item.</para>
      </summary>
      <value>A System.Windows.Size object that is the size of the item.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemBoundsChangedEventArgs.OldAngle">
      <summary>
        <para>Returns the angle at which the item was previously rotated.</para>
      </summary>
      <value>The previous angle (in degrees).</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemBoundsChangedEventArgs.OldIndex">
      <summary>
        <para>Gets the previous item’s index within the Items collection of its parent.</para>
      </summary>
      <value>The item’s index.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemBoundsChangedEventArgs.OldParent">
      <summary>
        <para>Returns the item’s previous parent.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemBoundsChangedEventArgs.OldPosition">
      <summary>
        <para>Returns the previous coordinates of the item’s upper left corner.</para>
      </summary>
      <value>The coordinates of the item’s upper left corner.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemBoundsChangedEventArgs.OldSize">
      <summary>
        <para>Gets the previous size of the item.</para>
      </summary>
      <value>A System.Windows.Size object that is the size of the item.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramItemContentChangedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemContentChanged">DiagramControl.ItemContentChanged</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramItemContentChangedEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,DevExpress.Xpf.Diagram.DiagramItem,System.String,System.String,DevExpress.Diagram.Core.ActionType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramItemContentChangedEventArgs"/> class.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="item">A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object that represents the diagram item whose content is being changed.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemContentChangedEventArgs.ActionType">
      <summary>
        <para>Indicates whether the text has been changed directly or using the Undo/Redo operations.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.ActionType"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemContentChangedEventArgs.Item">
      <summary>
        <para>Returns the diagram item whose content is being changed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemContentChangedEventArgs.NewValue">
      <summary>
        <para>Returns the new item’s text.</para>
      </summary>
      <value>A string value that is the new item’s text.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemContentChangedEventArgs.OldValue">
      <summary>
        <para>Returns the previous item’s text.</para>
      </summary>
      <value>A string value that represents the previous item’s text.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramItemCreatingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemCreating">DiagramControl.ItemCreating</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramItemCreatingEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,System.Type,DevExpress.Diagram.Core.ItemUsage,DevExpress.Xpf.Diagram.DiagramItem)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramItemCreatingEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="itemType">A System.Type object that represents the type of the item that is about to be created.</param>
      <param name="itemUsage">A DevExpress.Diagram.Core.ItemUsage enumeration value that specifies whether the item is a part of the diagram or toolbox preview.</param>
      <param name="item">A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object that represents the item that is about to be created.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemCreatingEventArgs.Item">
      <summary>
        <para>Gets or sets the item that is about to be created.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemCreatingEventArgs.ItemType">
      <summary>
        <para>Gets the type of the item that is about to be created.</para>
      </summary>
      <value>A System.Type object that represents the type of the item that is about to be created.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemCreatingEventArgs.ItemUsage">
      <summary>
        <para>Indicates whether the item is a part of the diagram or toolbox preview.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.ItemUsage"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramItemDrawingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemDrawing">DiagramControl.ItemDrawing</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramItemDrawingEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,DevExpress.Xpf.Diagram.DiagramItem,DevExpress.Diagram.Core.ItemTool,DevExpress.Diagram.Core.DiagramActionStage,System.Windows.Point,System.Windows.Point)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramItemDrawingEventArgs"/> class.</para>
      </summary>
      <param name="source">A <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="item">A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object representing the diagram item that is being drawn.</param>
      <param name="tool">A drawing tool.</param>
      <param name="stage">A <see cref="T:DevExpress.Diagram.Core.DiagramActionStage"/> enumeration value that indicates whether the drawing operation has just started, is continuing or has been finished or canceled.</param>
      <param name="startPosition">The starting point of the drawing operation on the canvas.</param>
      <param name="endPosition">The ending point of the drawing operation on the canvas.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemDrawingEventArgs.EndPosition">
      <summary>
        <para>Specifies the current ending point of the drawing operation on the canvas.</para>
      </summary>
      <value>The ending point of the drawing operation on the canvas.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemDrawingEventArgs.Item">
      <summary>
        <para>Returns the diagram item that is being drawn.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemDrawingEventArgs.Stage">
      <summary>
        <para>Indicates whether the drawing operation has just started, is continuing or has been finished or canceled.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.DiagramActionStage"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemDrawingEventArgs.StartPosition">
      <summary>
        <para>Indicates the point on the canvas where the end-user initiated the drawing operation by clicking and dragging with a drawing tool selected.</para>
      </summary>
      <value>A point on the canvas where the end-user initiated the drawing operation.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemDrawingEventArgs.Tool">
      <summary>
        <para>Returns the drawing tool that the end-user is using.</para>
      </summary>
      <value>An object representing the drawing tool.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramItemInitializingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemInitializing">DiagramControl.ItemInitializing</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramItemInitializingEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,DevExpress.Xpf.Diagram.DiagramItem,DevExpress.Diagram.Core.ItemUsage)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramItemInitializingEventArgs"/> class.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="item">A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object representing the diagram item that is being initialized.</param>
      <param name="itemUsage">A <see cref="T:DevExpress.Diagram.Core.ItemUsage"/> enumeration value that indicates whether the item is a part of the diagram or toolbox preview.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemInitializingEventArgs.Item">
      <summary>
        <para>Returns the diagram item that is being initialized.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemInitializingEventArgs.ItemUsage">
      <summary>
        <para>Indicates whether the item is a part of the diagram or toolbox preview.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.ItemUsage"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramItemsChangedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsChanged">DiagramControl.ItemsChanged</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramItemsChangedEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,DevExpress.Xpf.Diagram.DiagramItem,DevExpress.Diagram.Core.ItemsChangedAction)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramItemsChangedEventArgs"/> class.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="item">A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object representing the item that is being added or removed.</param>
      <param name="action">An <see cref="T:DevExpress.Diagram.Core.ItemsChangedAction"/> enumeration value that indicates whether a diagram item is being added or removed.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemsChangedEventArgs.Action">
      <summary>
        <para>Indicates whether the item is being added or removed.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Diagram.Core.ItemsChangedAction"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemsChangedEventArgs.Item">
      <summary>
        <para>Returns the diagram item that is being added or removed from the diagram.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramItemsDeletingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsDeleting">DiagramControl.ItemsDeleting</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramItemsDeletingEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,System.Collections.Generic.IList{DevExpress.Xpf.Diagram.DiagramItem})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramItemsDeletingEventArgs"/> class.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="items">A collection of <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> objects that are being deleted.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemsDeletingEventArgs.Items">
      <summary>
        <para>Returns the collection of items that are being deleted.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> objects.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramItemsGeneratedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemsGenerated">DiagramDataBindingBehaviorBase.ItemsGenerated</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramItemsGeneratedEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{DevExpress.Xpf.Diagram.DiagramItem},System.Collections.ObjectModel.ReadOnlyCollection{DevExpress.Xpf.Diagram.DiagramConnector},DevExpress.Diagram.Core.GenerationKind)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramItemsGeneratedEventArgs"/> class with specified settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemsGeneratedEventArgs.GeneratedConnectors">
      <summary>
        <para>Returns the collection of generated connectors that represent connections between data objects.</para>
      </summary>
      <value>A collection of generated connectors.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemsGeneratedEventArgs.GeneratedItems">
      <summary>
        <para>Returns the collection of generated items that represent data objects.</para>
      </summary>
      <value>A collection of generated items.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramItemsMovingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsMoving">DiagramControl.ItemsMoving</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramItemsMovingEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,System.Collections.ObjectModel.ReadOnlyCollection{DevExpress.Xpf.Diagram.MovingItem},DevExpress.Diagram.Core.DiagramActionStage,DevExpress.Diagram.Core.ItemsActionSource,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramItemsMovingEventArgs"/> class.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="items">A collection of DevExpress.Xpf.Diagram.MovingItem objects that store information about items that are being moved.</param>
      <param name="stage">A <see cref="T:DevExpress.Diagram.Core.DiagramActionStage"/> enumeration value that indicates whether the moving operation has just started, is continuing or has been finished or canceled.</param>
      <param name="actionSource">A <see cref="T:DevExpress.Diagram.Core.ItemsActionSource"/> enumeration value that indicates whether the moving operation is performed using drag-and-drop, the <see href="https://docs.devexpress.com/WPF/116506/controls-and-libraries/diagram-control/diagram-designer-control/properties-panel">Properties Panel</see> or by pressing key shortcuts.</param>
      <param name="allow">true, to allow performing the operation; otherwise, false.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemsMovingEventArgs.ActionSource">
      <summary>
        <para>Indicates whether the moving operation is performed using drag-and-drop, the <see href="https://docs.devexpress.com/WPF/116506/controls-and-libraries/diagram-control/diagram-designer-control/properties-panel">Properties Panel</see> or by pressing key shortcuts.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.ItemsActionSource"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemsMovingEventArgs.Allow">
      <summary>
        <para>Specifies whether to allow performing the operation.</para>
      </summary>
      <value>true, to allow performing the operation; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemsMovingEventArgs.Items">
      <summary>
        <para>Returns the data about items that are being moved.</para>
      </summary>
      <value>A collection of DevExpress.Xpf.Diagram.MovingItem objects that store information about items that are being moved.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemsMovingEventArgs.Stage">
      <summary>
        <para>Indicates whether the moving operation has just started, is continuing or has been finished or canceled.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.DiagramActionStage"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramItemsPastingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsPasting">DiagramControl.ItemsPasting</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramItemsPastingEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,System.Collections.ObjectModel.ReadOnlyCollection{DevExpress.Xpf.Diagram.AddingItem})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramItemsPastingEventArgs"/> class.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="items">A collection of DevExpress.Xpf.Diagram.AddingItem objects that store information about items that are being pasted.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemsPastingEventArgs.Items">
      <summary>
        <para>Returns the collection of data about items that are being pasted.</para>
      </summary>
      <value>A collection of DevExpress.Xpf.Diagram.AddingItem objects that store information about items that are being pasted.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramItemsResizingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsResizing">DiagramControl.ItemsResizing</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramItemsResizingEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,System.Collections.ObjectModel.ReadOnlyCollection{DevExpress.Xpf.Diagram.ResizingItem},DevExpress.Diagram.Core.DiagramActionStage,DevExpress.Diagram.Core.ItemsActionSource,DevExpress.Diagram.Core.ResizeMode)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramItemsResizingEventArgs"/> class.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="items">A collection of DevExpress.Xpf.Diagram.ResizingItem objects that store information about items that are being resized.</param>
      <param name="stage">A <see cref="T:DevExpress.Diagram.Core.DiagramActionStage"/> enumeration value that indicates whether the resizing operation has just started, is continuing or has been finished or canceled.</param>
      <param name="actionSource">A <see cref="T:DevExpress.Diagram.Core.ItemsActionSource"/> enumeration value that indicates whether the resizing operation is performed using the selection handles or the Properties Panel.</param>
      <param name="mode">A DevExpress.Diagram.Core.ResizeMode enumeration value that indicates the direction of resizing.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemsResizingEventArgs.ActionSource">
      <summary>
        <para>Indicates whether the resizing operation is performed using the selection handles or the <see href="https://docs.devexpress.com/WPF/116506/controls-and-libraries/diagram-control/diagram-designer-control/properties-panel">Properties Panel</see>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.ItemsActionSource"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemsResizingEventArgs.Items">
      <summary>
        <para>Returns the collection of data about items that are being resized.</para>
      </summary>
      <value>A collection of DevExpress.Xpf.Diagram.ResizingItem objects that store information about items that are being resized.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemsResizingEventArgs.Mode">
      <summary>
        <para>Indicates the direction of resizing.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.ResizeMode enumeration value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemsResizingEventArgs.Stage">
      <summary>
        <para>Indicates whether the resizing operation has just started, is continuing or has been finished or canceled.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.DiagramActionStage"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramItemsRotatingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsRotating">DiagramControl.ItemsRotating</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramItemsRotatingEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,System.Collections.ObjectModel.ReadOnlyCollection{DevExpress.Xpf.Diagram.RotatingItem},DevExpress.Diagram.Core.DiagramActionStage,DevExpress.Diagram.Core.ItemsActionSource,System.Nullable{System.Windows.Point})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramItemsRotatingEventArgs"/> class.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="items">A collection of DevExpress.Xpf.Diagram.RotatingItem objects that store information about items that are being rotated.</param>
      <param name="stage">A <see cref="T:DevExpress.Diagram.Core.DiagramActionStage"/> enumeration value that indicates whether the rotating operation has just started, is continuing or has been finished or canceled.</param>
      <param name="actionSource">A <see cref="T:DevExpress.Diagram.Core.ItemsActionSource"/> enumeration value that indicates whether the rotating operation is performed using the rotation handle or the <see href="https://docs.devexpress.com/WPF/116506/controls-and-libraries/diagram-control/diagram-designer-control/properties-panel">Properties Panel</see>.</param>
      <param name="centerOfRotation">A <see cref="T:DevExpress.Utils.PointFloat"/> value that is the coordinates of the center of rotation.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemsRotatingEventArgs.ActionSource">
      <summary>
        <para>Indicates whether the rotating operation is performed using the rotation handle or the <see href="https://docs.devexpress.com/WPF/116506/controls-and-libraries/diagram-control/diagram-designer-control/properties-panel">Properties Panel</see>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.ItemsActionSource"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemsRotatingEventArgs.CenterOfRotation">
      <summary>
        <para>Returns the coordinates of the center of rotation.</para>
      </summary>
      <value>A System.Windows.Point value that is the coordinates of the center of rotation.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemsRotatingEventArgs.Items">
      <summary>
        <para>Returns the collection of data about items that are being rotated.</para>
      </summary>
      <value>A collection of DevExpress.Xpf.Diagram.RotatingItem objects that store information about items that are being rotated.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramItemsRotatingEventArgs.Stage">
      <summary>
        <para>Indicates whether the rotating operation has just started, is continuing or has been finished or canceled.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.DiagramActionStage"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramList">
      <summary>
        <para>Represents a diagram list item.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramList.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramList"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramList.Orientation">
      <summary>
        <para>Specifies whether child items are arranged horizontally or vertically. This is a dependency property.</para>
      </summary>
      <value>A System.Windows.Controls.Orientation enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramList.OrientationProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramList.Orientation"/> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior">
      <summary>
        <para>Allows you to generate relationship diagrams from a hierarchical data source.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior"/> class with default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ChildrenPath">
      <summary>
        <para>Gets or sets the path to the property that stores a collection of the diagram item’s subordinates. This is a dependnecy property.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that is the path to a property.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ChildrenPathProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ChildrenPath">DiagramOrgChartBehavior.ChildrenPath</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ChildrenSelector">
      <summary>
        <para>Gets or sets an object that chooses an item’s subordinates based on custom logic. This is a dependency property.</para>
      </summary>
      <value>An IChildrenSelector implementation that chooses an item’s subordinates based on custom logic.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ChildrenSelectorProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ChildrenSelector">DiagramOrgChartBehavior.ChildrenSelector</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ExpandSubordinatesButtonMode">
      <summary>
        <para>Gets or sets the display mode of the expand/collapse button. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.ExpandSubordinatesButtonMode"/> enumeration value that is the display mode of the expand/collapse button.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ExpandSubordinatesButtonModeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ExpandSubordinatesButtonMode">DiagramOrgChartBehavior.ExpandSubordinatesButtonMode</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ExpansionDepth">
      <summary>
        <para>Gets or sets the number of hierarchy levels that expand when the diagram is generated. This is a dependency property.</para>
      </summary>
      <value>An integer value that is the number of expanded hierarchy levels. The default is -1.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ExpansionDepthProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ExpansionDepth">DiagramOrgChartBehavior.ExpansionDepth</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.GenerationDepth">
      <summary>
        <para>Gets or sets the number of hierarchy levels that are retrieved from the data source when the diagram is generated. This is a dependency property.</para>
      </summary>
      <value>An integer value that is the number of hierarchy levels retrieved from the data source. The default is -1.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.GenerationDepthProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.GenerationDepth">DiagramOrgChartBehavior.GenerationDepth</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.HorizontalSpacing">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.HorizontalSpacingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.HorizontalSpacing">DiagramOrgChartBehavior.HorizontalSpacing</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.LayoutDirection">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.LayoutDirectionProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.LayoutDirection">DiagramOrgChartBehavior.LayoutDirection</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.LayoutKind">
      <summary>
        <para>Specifies the <see href="https://docs.devexpress.com/WPF/116572/controls-and-libraries/diagram-control/automatic-layout">automatic layout</see> to be applied to the generated diagram. This is a dependency property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.DiagramLayoutKind enumeration value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.LayoutKindProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.LayoutKind">DiagramOrgChartBehavior.LayoutKind</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.PageMargin">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.PageMarginProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.PageMargin">DiagramOrgChartBehavior.PageMargin</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ParentMember">
      <summary>
        <para>Specifies the name of the data field that identifies the parent of a data item. This is a dependency property.</para>
      </summary>
      <value>A System.String value.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ParentMemberEmptyValueProperty">
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ParentMemberProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ParentMember">DiagramOrgChartBehavior.ParentMember</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.VerticalSpacing">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.VerticalSpacingProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.VerticalSpacing">DiagramOrgChartBehavior.VerticalSpacing</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramQueryConnectionPointsEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,DevExpress.Diagram.Core.IDiagramControl,DevExpress.Xpf.Diagram.DiagramConnector,DevExpress.Diagram.Core.ConnectorPointType,DevExpress.Xpf.Diagram.DiagramItem,System.Collections.ObjectModel.ReadOnlyCollection{DevExpress.Diagram.Core.ConnectionPoint},DevExpress.Diagram.Core.ConnectionElementState)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramQueryConnectionPointsEventArgs"/> class.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="diagram">An object that implements the DevExpress.Diagram.Core.IDiagramControl interface.</param>
      <param name="connector">A <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> object representing the connector which point is being moved by the end-user.</param>
      <param name="connectorPointType">A <see cref="T:DevExpress.Diagram.Core.ConnectorPointType"/> enumeration value indicating the type of the connection point that is being moved by the end-user.</param>
      <param name="hoveredItem">A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object representing the item hovered with the connection point that is being moved by the end-user.</param>
      <param name="itemConnectionPointStates">A collection of <see cref="T:DevExpress.Diagram.Core.ConnectionPoint"/> objects that represent connection points of a diagram item.</param>
      <param name="itemConnectionBorderState">A <see cref="T:DevExpress.Diagram.Core.ConnectionElementState"/> enumeration value that specifies whether to enable connection to an item and show visual indication.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryConnectionPointsEventArgs.Connector">
      <summary>
        <para>Returns the connector whose point is being moved by the end-user.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryConnectionPointsEventArgs.ConnectorPointType">
      <summary>
        <para>Returns the type of the connection point that is being moved by the end-user.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.ConnectorPointType"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryConnectionPointsEventArgs.HoveredItem">
      <summary>
        <para>Returns the item hovered with the connection point that is being moved by the end-user.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryConnectionPointsEventArgs.ItemConnectionBorderState">
      <summary>
        <para>Specifies whether to enable connection to an item and show a visual indication.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.ConnectionElementState"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryConnectionPointsEventArgs.ItemConnectionPointStates">
      <summary>
        <para>Provides access to the collection of objects that represent connection points of a diagram item.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Diagram.Core.ConnectionPoint"/> objects.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryConnectionPointsEventArgs.OppositeItem">
      <summary>
        <para>Returns the diagram item to which the opposite connection point is glued.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryConnectionPointsEventArgs.OppositeItemPointIndex">
      <summary>
        <para>Returns the index of the opposite connection point.</para>
      </summary>
      <value>An integer value that is the index of the opposite connection point.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryConnectionPointsEventArgs.OppositePoint">
      <summary>
        <para>Returns the coordinates of the opposite connection point.</para>
      </summary>
      <value>A System.Windows.Point value that is the coordinates of the opposite connection point.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramQueryItemDrawActionEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,DevExpress.Diagram.Core.ItemTool,System.Windows.Point,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramQueryItemDrawActionEventArgs"/> class.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryItemDrawActionEventArgs.Allow">
      <summary>
        <para>Specifies whether the end-user can use the selected drawing tool.</para>
      </summary>
      <value>true to allow the end-user to use the selected drawing tool; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryItemDrawActionEventArgs.DiagramPoint">
      <summary>
        <para>Returns the mouse pointer position within the diagram control.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Point"/> value that is the current coordinates of the mouse pointer within the diagram control.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryItemDrawActionEventArgs.Tool">
      <summary>
        <para>Returns the drawing tool that the end-user is attempting to use.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.ItemTool object.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramQueryItemEditActionEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,DevExpress.Xpf.Diagram.DiagramItem,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramQueryItemEditActionEventArgs"/> class.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="item">A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object that is the item which text the end-user is attempting to edit.</param>
      <param name="allow">true, to allow editing the item’s text; otherwise, false.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryItemEditActionEventArgs.Allow">
      <summary>
        <para>Specifies whether to allow editing the item’s text.</para>
      </summary>
      <value>true, to allow editing the item’s text; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryItemEditActionEventArgs.Item">
      <summary>
        <para>Returns the item whose text the end-user is attempting to edit.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramQueryItemsActionEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.QueryItemsAction"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramQueryItemsActionEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,System.Collections.ObjectModel.ReadOnlyCollection{DevExpress.Xpf.Diagram.DiagramItem},DevExpress.Diagram.Core.ItemsActionKind,DevExpress.Xpf.Diagram.DiagramItem,System.Nullable{System.Windows.Point},System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramQueryItemsActionEventArgs"/> class.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryItemsActionEventArgs.Action">
      <summary>
        <para>Indicates the queried action.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Diagram.Core.ItemsActionKind"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryItemsActionEventArgs.Allow">
      <summary>
        <para>Specifies whether to allow performing the operation.</para>
      </summary>
      <value>true, to allow performing the operation; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryItemsActionEventArgs.HighlightedItem">
      <summary>
        <para>Returns the currently highlighted diagram item.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryItemsActionEventArgs.HighlightedItemPoint">
      <summary>
        <para>Returns the current coordinates of the cursor.</para>
      </summary>
      <value>A System.Windows.Point value that is the current coordinates of the cursor.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryItemsActionEventArgs.Items">
      <summary>
        <para>Returns the collection of queried diagram items.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> objects.</value>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramQueryItemSnappingEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,DevExpress.Xpf.Diagram.DiagramItem,DevExpress.Xpf.Diagram.DiagramItem,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramQueryItemSnappingEventArgs"/> class.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryItemSnappingEventArgs.Allow">
      <summary>
        <para>Specifies whether to allow snapping of diagram items.</para>
      </summary>
      <value>true, to allow snapping of diagram items; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryItemSnappingEventArgs.Item">
      <summary>
        <para>Returns the item that is being dragged by the end-user.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramQueryItemSnappingEventArgs.SnapTo">
      <summary>
        <para>Returns the diagram item to which the item being dragged by the end-user can be snapped.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramShape">
      <summary>
        <para>Represents a diagram shape.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramShape.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramShape"/> class with default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShape.CanChangeParameter">
      <summary>
        <para>Specifies whether end-users can transform the shape. This is a dependency property.</para>
      </summary>
      <value>true to allow end-users to transform the shape; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramShape.CanChangeParameterProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramShape.CanChangeParameter">DiagramShape.CanChangeParameter</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShape.Content">
      <summary>
        <para>Gets or sets the text displayed by the shape. This is a dependency property.</para>
      </summary>
      <value>The text displayed by the shape.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShape.ContentBackground">
      <summary>
        <para>Gets or sets the brush used to paint the background of the text within the <see cref="T:DevExpress.Xpf.Diagram.DiagramShape"/>. This is a dependency property.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Media.Brush"/> object used to paint the background of the text within the <see cref="T:DevExpress.Xpf.Diagram.DiagramShape"/>.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramShape.ContentBackgroundProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramShape.ContentBackground">DiagramShape.ContentBackground</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramShape.ContentProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramShape.Content">DiagramShape.Content</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShape.EditorBounds">
      <summary>
        <para>For internal use. Gets the editor’s bounds.</para>
      </summary>
      <value>A <see cref="T:System.Windows.Rect"/> structure.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramShape.EditorBoundsProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramShape.EditorBounds">DiagramShape.EditorBounds</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShape.Parameters">
      <summary>
        <para>Specifies shape parameters. This is a dependency property.</para>
      </summary>
      <value>A System.Windows.Media.DoubleCollection object that represents shape parameters.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramShape.ParametersProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramShape.Parameters">DiagramShape.Parameters</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShape.Shape">
      <summary>
        <para>Gets or sets the shape kind. This is a dependency property.</para>
      </summary>
      <value>An object that specifies the shape kind.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShape.ShapeGeometry">
      <summary>
        <para>Gets the object that identifies the geometry of the shape. This is a dependency property.</para>
      </summary>
      <value>A DevExpress.Diagram.Core.ShapeGeometry object.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramShape.ShapeGeometryProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramShape.ShapeGeometry">DiagramShape.ShapeGeometry</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="F:DevExpress.Xpf.Diagram.DiagramShape.ShapeProperty">
      <summary>
        <para>Identifies the <see cref="P:DevExpress.Xpf.Diagram.DiagramShape.Shape">DiagramShape.Shape</see> dependency property.</para>
      </summary>
      <value>A dependency property identifier.</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramShowingOpenDialogEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingOpenDialog">DiagramControl.ShowingOpenDialog</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramShowingOpenDialogEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,System.String,System.String,System.String,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramShowingOpenDialogEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="filter">The file filtering options available in the dialog. By default, Xml files (&#0042;.xml)|&#0042;.xml|All files (&#0042;.&#0042;)|&#0042;.&#0042;</param>
      <param name="title">A string value that is the title of the dialog.</param>
      <param name="initialDirectory">A string value that is the path to the directory displayed by the dialog.</param>
      <param name="documentSourceToOpen">The object from which to automatically load the diagram. It can be a string value specifying the file full path, a Uri object, a stream or an array of bytes.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShowingOpenDialogEventArgs.DocumentSourceToOpen">
      <summary>
        <para>Gets or sets the object from which to load the diagram skipping the dialog window. This object can be a full file path, Uri object, stream or array of bytes.</para>
      </summary>
      <value>The object from which to automatically load the diagram. It can be a string value specifying the file full path, a Uri object, a stream or an array of bytes.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShowingOpenDialogEventArgs.Filter">
      <summary>
        <para>Gets or sets the string that determines the file filtering options that appear in the dialog.</para>
      </summary>
      <value>The file filtering options available in the dialog. By default, Xml files (&#0042;.xml)|&#0042;.xml|All files (&#0042;.&#0042;)|&#0042;.&#0042;</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShowingOpenDialogEventArgs.InitialDirectory">
      <summary>
        <para>Gets or sets the path to the directory displayed by the dialog.</para>
      </summary>
      <value>A string value that is the path to the directory displayed by the dialog.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShowingOpenDialogEventArgs.Title">
      <summary>
        <para>Gets or sets the title of the dialog.</para>
      </summary>
      <value>A string value that is the title of the dialog. By default, Open File</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramShowingOpenImageDialogEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingOpenImageDialog">DiagramControl.ShowingOpenImageDialog</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramShowingOpenImageDialogEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,System.String,System.String,System.String,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramShowingOpenImageDialogEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="filter">The file filtering options available in the dialog. By default, All pictures (&#0042;.jpg;&#0042;.jpeg;&#0042;.bmp;&#0042;.png;&#0042;.gif)|&#0042;.jpg;&#0042;.jpeg;&#0042;.bmp;&#0042;.png;&#0042;.gif|JPEG Fileinterchange Format (&#0042;.jpg;&#0042;.jpeg)|&#0042;.jpg;&#0042;.jpeg|Windows Bitmap (&#0042;.bmp)|&#0042;.bmp|Portable Network Graphics (&#0042;.png)|&#0042;.png|Graphics Interchange Format (&#0042;.gif)|&#0042;.gif</param>
      <param name="title">A string value that is the title of the dialog.</param>
      <param name="initialDirectory">A string value that is the path to the directory displayed by the dialog.</param>
      <param name="imageSourceToOpen">The object from which to automatically load the image. It can be a string value specifying the file full path, a Uri object, a stream or an array of bytes.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShowingOpenImageDialogEventArgs.Filter">
      <summary>
        <para>Gets or sets the string that determines the file filtering options that appear in the dialog.</para>
      </summary>
      <value>The file filtering options available in the dialog. By default, All pictures (.jpg;.jpeg;.bmp;.png;.gif)|.jpg;.jpeg;.bmp;.png;.gif|JPEG Fileinterchange Format (.jpg;.jpeg)|.jpg;.jpeg|Windows Bitmap (.bmp)|.bmp|Portable Network Graphics (.png)|.png|Graphics Interchange Format (.gif)|.gif</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShowingOpenImageDialogEventArgs.ImageSourceToOpen">
      <summary>
        <para>Gets or sets the object from which to load the image skipping the dialog window. This object can be a full file path, Uri object, stream or array of bytes.</para>
      </summary>
      <value>The object from which to load the image. It can be a string value specifying the file full path, a Uri object, a stream or an array of bytes.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShowingOpenImageDialogEventArgs.InitialDirectory">
      <summary>
        <para>Gets or sets the path to the directory displayed by the dialog.</para>
      </summary>
      <value>A string value that is the path to the directory displayed by the dialog.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShowingOpenImageDialogEventArgs.Title">
      <summary>
        <para>Gets or sets the title of the dialog.</para>
      </summary>
      <value>A string value that is the title of the dialog. By default, Insert Picture</value>
    </member>
    <member name="T:DevExpress.Xpf.Diagram.DiagramShowingSaveDialogEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingSaveDialog">DiagramControl.ShowingSaveDialog</see> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Diagram.DiagramShowingSaveDialogEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,System.String,System.String,System.String,System.String,System.Object,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpf.Diagram.DiagramShowingSaveDialogEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="source">The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.</param>
      <param name="filter">The file filtering options available in the dialog. By default, Xml files (&#0042;.xml)|&#0042;.xml|All files (&#0042;.&#0042;)|&#0042;.&#0042;</param>
      <param name="title">A string value that is the title of the dialog.</param>
      <param name="initialDirectory">A string value that is the path to the directory displayed by the dialog.</param>
      <param name="defaultFileName">A string value that is the default name of the file to which to save the diagram.</param>
      <param name="documentSourceToSave">The object to which to automatically save the diagram. It can be a string value specifying the file full path, a Uri object, a stream or an array of bytes.</param>
      <param name="filterIndex">An integer value that specifies the index of the filter that is selected in the file dialog box by default.</param>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShowingSaveDialogEventArgs.DefaultFileName">
      <summary>
        <para>Gets or sets the default name of the file to which to save the diagram.</para>
      </summary>
      <value>A string value that is the default name of the file to which to save the diagram.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShowingSaveDialogEventArgs.DocumentSourceToSave">
      <summary>
        <para>Gets or sets the object to which to save the diagram skipping the dialog window. This object can be a full file path, Uri object, stream or array of bytes.</para>
      </summary>
      <value>The object to which to save the diagram. It can be a string value specifying the file full path, a Uri object, a stream or an array of bytes.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShowingSaveDialogEventArgs.Filter">
      <summary>
        <para>Gets or sets the string that determines the file filtering options that appear in the dialog.</para>
      </summary>
      <value>The file filtering options available in the dialog. By default, Xml files (&#0042;.xml)|&#0042;.xml|All files (&#0042;.&#0042;)|&#0042;.&#0042;</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShowingSaveDialogEventArgs.FilterIndex">
      <summary>
        <para>Gets or sets which filtering option is selected by default.</para>
      </summary>
      <value>An integer value that determines which filtering option is selected by default.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShowingSaveDialogEventArgs.InitialDirectory">
      <summary>
        <para>Gets or sets the path to the directory displayed by the dialog.</para>
      </summary>
      <value>A string value that is the path to the directory displayed by the dialog.</value>
    </member>
    <member name="P:DevExpress.Xpf.Diagram.DiagramShowingSaveDialogEventArgs.Title">
      <summary>
        <para>Gets or sets the title of the dialog.</para>
      </summary>
      <value>A string value that is the title of the dialog. By default, Save File As</value>
    </member>
  </members>
</doc>